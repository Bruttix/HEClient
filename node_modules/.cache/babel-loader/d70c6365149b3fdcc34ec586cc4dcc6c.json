{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\backup-July4\\\\Client\\\\src\\\\components\\\\admin\\\\AdminLogin\\\\AdminLoginEmail.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\nimport ACTION_ADMIN_LOGIN_EMAIL from \"../../../actions/Admin/AdminLogin/AdminEmail/ACTION_ADMIN_LOGIN_EMAIL\";\nimport ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID from \"../../../actions/Admin/AdminLogin/AdminEmail/Invalid/ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID\";\nimport ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET from \"../../../actions/Admin/AdminLogin/AdminRegisteredEmployeeFound/ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET\";\nimport ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID from \"../../../actions/Admin/AdminLogin/AdminPassword/Invalid/ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID\";\nimport \"./AdminLoginPage.css\";\n\nconst AdminLoginEmail = props => {\n  const dispatch = useDispatch(); // Admin Email States\n\n  const adminLoginEmail = useSelector(state => state.adminLoginEmail.admin_login_email);\n  const adminLoginEmailInvalid = useSelector(state => state.adminLoginEmailInvalid.admin_login_email_invalid);\n\n  const adminEmailTyping = e => {\n    dispatch(ACTION_ADMIN_LOGIN_EMAIL(e.currentTarget.value.trim()));\n    dispatch(ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET());\n    dispatch(ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID());\n    dispatch(ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID());\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"loginEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, \"Email\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"email\",\n    name: \"adminLoginEmail\",\n    defaultValue: adminLoginEmail,\n    maxLength: 128,\n    placeholder: \"Email address\",\n    className: \"input_field_sign_up\",\n    onChange: adminEmailTyping,\n    onKeyDown: e => {\n      if (e.keyCode === 13) {\n        props.handleAdminLoginClick();\n      }\n    },\n    invalid: adminLoginEmail === \"\" ? false : adminLoginEmailInvalid ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), adminLoginEmailInvalid ? /*#__PURE__*/React.createElement(FormFeedback, {\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"No registered employee found with this email.\") : null);\n};\n\nexport default AdminLoginEmail;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/backup-July4/Client/src/components/admin/AdminLogin/AdminLoginEmail.js"],"names":["React","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","ACTION_ADMIN_LOGIN_EMAIL","ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID","ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET","ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID","AdminLoginEmail","props","dispatch","adminLoginEmail","state","admin_login_email","adminLoginEmailInvalid","admin_login_email_invalid","adminEmailTyping","e","currentTarget","value","trim","keyCode","handleAdminLoginClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,wBAAP,MAAqC,uEAArC;AACA,OAAOC,oCAAP,MAAiD,2FAAjD;AACA,OAAOC,4CAAP,MAAyD,6GAAzD;AACA,OAAOC,uCAAP,MAAoD,iGAApD;AACA,OAAO,sBAAP;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,QAAMC,QAAQ,GAAGZ,WAAW,EAA5B,CADiC,CAGjC;;AACA,QAAMa,eAAe,GAAGZ,WAAW,CAChCa,KAAD,IAAWA,KAAK,CAACD,eAAN,CAAsBE,iBADA,CAAnC;AAGA,QAAMC,sBAAsB,GAAGf,WAAW,CACvCa,KAAD,IAAWA,KAAK,CAACE,sBAAN,CAA6BC,yBADA,CAA1C;;AAIA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9BP,IAAAA,QAAQ,CAACN,wBAAwB,CAACa,CAAC,CAACC,aAAF,CAAgBC,KAAhB,CAAsBC,IAAtB,EAAD,CAAzB,CAAR;AACAV,IAAAA,QAAQ,CAACJ,4CAA4C,EAA7C,CAAR;AACAI,IAAAA,QAAQ,CAACH,uCAAuC,EAAxC,CAAR;AACAG,IAAAA,QAAQ,CAACL,oCAAoC,EAArC,CAAR;AACD,GALD;;AAOA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,YAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,eAIE,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,iBAFP;AAGE,IAAA,YAAY,EAAEM,eAHhB;AAIE,IAAA,SAAS,EAAE,GAJb;AAKE,IAAA,WAAW,EAAC,eALd;AAME,IAAA,SAAS,EAAC,qBANZ;AAOE,IAAA,QAAQ,EAAEK,gBAPZ;AAQE,IAAA,SAAS,EAAGC,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACI,OAAF,KAAc,EAAlB,EAAsB;AACpBZ,QAAAA,KAAK,CAACa,qBAAN;AACD;AACF,KAZH;AAaE,IAAA,OAAO,EACLX,eAAe,KAAK,EAApB,GAAyB,KAAzB,GAAiCG,sBAAsB,GAAG,IAAH,GAAU,KAdrE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAqBGA,sBAAsB,gBACrB,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADqB,GAInB,IAzBN,CADF;AA6BD,CA/CD;;AAiDA,eAAeN,eAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport ACTION_ADMIN_LOGIN_EMAIL from \"../../../actions/Admin/AdminLogin/AdminEmail/ACTION_ADMIN_LOGIN_EMAIL\";\r\nimport ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID from \"../../../actions/Admin/AdminLogin/AdminEmail/Invalid/ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID\";\r\nimport ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET from \"../../../actions/Admin/AdminLogin/AdminRegisteredEmployeeFound/ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET\";\r\nimport ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID from \"../../../actions/Admin/AdminLogin/AdminPassword/Invalid/ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID\";\r\nimport \"./AdminLoginPage.css\";\r\n\r\nconst AdminLoginEmail = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Admin Email States\r\n  const adminLoginEmail = useSelector(\r\n    (state) => state.adminLoginEmail.admin_login_email\r\n  );\r\n  const adminLoginEmailInvalid = useSelector(\r\n    (state) => state.adminLoginEmailInvalid.admin_login_email_invalid\r\n  );\r\n\r\n  const adminEmailTyping = (e) => {\r\n    dispatch(ACTION_ADMIN_LOGIN_EMAIL(e.currentTarget.value.trim()));\r\n    dispatch(ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET());\r\n    dispatch(ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID());\r\n    dispatch(ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID());\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Label for=\"loginEmail\">\r\n        <div className=\"required_label\">Email</div>\r\n      </Label>\r\n      <Input\r\n        type=\"email\"\r\n        name=\"adminLoginEmail\"\r\n        defaultValue={adminLoginEmail}\r\n        maxLength={128}\r\n        placeholder=\"Email address\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={adminEmailTyping}\r\n        onKeyDown={(e) => {\r\n          if (e.keyCode === 13) {\r\n            props.handleAdminLoginClick();\r\n          }\r\n        }}\r\n        invalid={\r\n          adminLoginEmail === \"\" ? false : adminLoginEmailInvalid ? true : false\r\n        }\r\n      />\r\n      {adminLoginEmailInvalid ? (\r\n        <FormFeedback invalid=\"true\">\r\n          No registered employee found with this email.\r\n        </FormFeedback>\r\n      ) : null}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default AdminLoginEmail;\r\n"]},"metadata":{},"sourceType":"module"}