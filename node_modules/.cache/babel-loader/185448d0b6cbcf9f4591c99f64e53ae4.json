{"ast":null,"code":"import React from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import ACTION_ADMIN_LOGIN_EMAIL from\"../../../actions/Admin/AdminLogin/AdminEmail/ACTION_ADMIN_LOGIN_EMAIL\";import ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID from\"../../../actions/Admin/AdminLogin/AdminEmail/Invalid/ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID\";import ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET from\"../../../actions/Admin/AdminLogin/AdminRegisteredEmployeeFound/ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET\";import ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID from\"../../../actions/Admin/AdminLogin/AdminPassword/Invalid/ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID\";import\"./AdminLoginPage.css\";const AdminLoginEmail=props=>{const dispatch=useDispatch();// Admin Email States\nconst adminLoginEmail=useSelector(state=>state.adminLoginEmail.admin_login_email);const adminLoginEmailInvalid=useSelector(state=>state.adminLoginEmailInvalid.admin_login_email_invalid);const adminEmailTyping=e=>{dispatch(ACTION_ADMIN_LOGIN_EMAIL(e.currentTarget.value.trim()));dispatch(ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET());dispatch(ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID());dispatch(ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID());};return/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"loginEmail\"},/*#__PURE__*/React.createElement(\"div\",{className:\"required_label\"},\"Email\")),/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"adminLoginEmail\",defaultValue:adminLoginEmail,maxLength:128,placeholder:\"Email address\",className:\"input_field_sign_up\",onChange:adminEmailTyping,onKeyDown:e=>{if(e.keyCode===13){props.handleAdminLoginClick();}},invalid:adminLoginEmail===\"\"?false:adminLoginEmailInvalid?true:false}),adminLoginEmailInvalid?/*#__PURE__*/React.createElement(FormFeedback,{invalid:\"true\"},\"No registered employee found with this email.\"):null);};export default AdminLoginEmail;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminLogin/AdminLoginEmail.js"],"names":["React","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","ACTION_ADMIN_LOGIN_EMAIL","ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID","ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET","ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID","AdminLoginEmail","props","dispatch","adminLoginEmail","state","admin_login_email","adminLoginEmailInvalid","admin_login_email_invalid","adminEmailTyping","e","currentTarget","value","trim","keyCode","handleAdminLoginClick"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,CAAoBC,YAApB,CAAkCC,KAAlC,CAAyCC,KAAzC,KAAsD,YAAtD,CACA,MAAOC,CAAAA,wBAAP,KAAqC,uEAArC,CACA,MAAOC,CAAAA,oCAAP,KAAiD,2FAAjD,CACA,MAAOC,CAAAA,4CAAP,KAAyD,6GAAzD,CACA,MAAOC,CAAAA,uCAAP,KAAoD,iGAApD,CACA,MAAO,sBAAP,CAEA,KAAMC,CAAAA,eAAe,CAAIC,KAAD,EAAW,CACjC,KAAMC,CAAAA,QAAQ,CAAGZ,WAAW,EAA5B,CAEA;AACA,KAAMa,CAAAA,eAAe,CAAGZ,WAAW,CAChCa,KAAD,EAAWA,KAAK,CAACD,eAAN,CAAsBE,iBADA,CAAnC,CAGA,KAAMC,CAAAA,sBAAsB,CAAGf,WAAW,CACvCa,KAAD,EAAWA,KAAK,CAACE,sBAAN,CAA6BC,yBADA,CAA1C,CAIA,KAAMC,CAAAA,gBAAgB,CAAIC,CAAD,EAAO,CAC9BP,QAAQ,CAACN,wBAAwB,CAACa,CAAC,CAACC,aAAF,CAAgBC,KAAhB,CAAsBC,IAAtB,EAAD,CAAzB,CAAR,CACAV,QAAQ,CAACJ,4CAA4C,EAA7C,CAAR,CACAI,QAAQ,CAACH,uCAAuC,EAAxC,CAAR,CACAG,QAAQ,CAACL,oCAAoC,EAArC,CAAR,CACD,CALD,CAOA,mBACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,EAAO,GAAG,CAAC,YAAX,eACE,2BAAK,SAAS,CAAC,gBAAf,UADF,CADF,cAIE,oBAAC,KAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,iBAFP,CAGE,YAAY,CAAEM,eAHhB,CAIE,SAAS,CAAE,GAJb,CAKE,WAAW,CAAC,eALd,CAME,SAAS,CAAC,qBANZ,CAOE,QAAQ,CAAEK,gBAPZ,CAQE,SAAS,CAAGC,CAAD,EAAO,CAChB,GAAIA,CAAC,CAACI,OAAF,GAAc,EAAlB,CAAsB,CACpBZ,KAAK,CAACa,qBAAN,GACD,CACF,CAZH,CAaE,OAAO,CACLX,eAAe,GAAK,EAApB,CAAyB,KAAzB,CAAiCG,sBAAsB,CAAG,IAAH,CAAU,KAdrE,EAJF,CAqBGA,sBAAsB,cACrB,oBAAC,YAAD,EAAc,OAAO,CAAC,MAAtB,kDADqB,CAInB,IAzBN,CADF,CA6BD,CA/CD,CAiDA,cAAeN,CAAAA,eAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport ACTION_ADMIN_LOGIN_EMAIL from \"../../../actions/Admin/AdminLogin/AdminEmail/ACTION_ADMIN_LOGIN_EMAIL\";\r\nimport ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID from \"../../../actions/Admin/AdminLogin/AdminEmail/Invalid/ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID\";\r\nimport ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET from \"../../../actions/Admin/AdminLogin/AdminRegisteredEmployeeFound/ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET\";\r\nimport ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID from \"../../../actions/Admin/AdminLogin/AdminPassword/Invalid/ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID\";\r\nimport \"./AdminLoginPage.css\";\r\n\r\nconst AdminLoginEmail = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Admin Email States\r\n  const adminLoginEmail = useSelector(\r\n    (state) => state.adminLoginEmail.admin_login_email\r\n  );\r\n  const adminLoginEmailInvalid = useSelector(\r\n    (state) => state.adminLoginEmailInvalid.admin_login_email_invalid\r\n  );\r\n\r\n  const adminEmailTyping = (e) => {\r\n    dispatch(ACTION_ADMIN_LOGIN_EMAIL(e.currentTarget.value.trim()));\r\n    dispatch(ACTION_ADMIN_REGISTERED_EMPLOYEE_FOUND_RESET());\r\n    dispatch(ACTION_ADMIN_LOGIN_PASSWORD_NOT_INVALID());\r\n    dispatch(ACTION_ADMIN_LOGIN_EMAIL_NOT_INVALID());\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Label for=\"loginEmail\">\r\n        <div className=\"required_label\">Email</div>\r\n      </Label>\r\n      <Input\r\n        type=\"email\"\r\n        name=\"adminLoginEmail\"\r\n        defaultValue={adminLoginEmail}\r\n        maxLength={128}\r\n        placeholder=\"Email address\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={adminEmailTyping}\r\n        onKeyDown={(e) => {\r\n          if (e.keyCode === 13) {\r\n            props.handleAdminLoginClick();\r\n          }\r\n        }}\r\n        invalid={\r\n          adminLoginEmail === \"\" ? false : adminLoginEmailInvalid ? true : false\r\n        }\r\n      />\r\n      {adminLoginEmailInvalid ? (\r\n        <FormFeedback invalid=\"true\">\r\n          No registered employee found with this email.\r\n        </FormFeedback>\r\n      ) : null}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default AdminLoginEmail;\r\n"]},"metadata":{},"sourceType":"module"}