{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\src\\\\components\\\\account\\\\clientprofile\\\\ConsentForm\\\\Questions\\\\AnyFillersOrBotox.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { Spring } from \"react-spring/renderprops\";\nimport \"../ConsentForm.css\";\nimport \"../../../../../bootstrap_forms.min.css\";\nimport ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/No/ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET\";\nimport ACTION_ANY_FILLERS_OR_BOTOX_NO from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/No/ACTION_ANY_FILLERS_OR_BOTOX_NO\";\nimport ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/Yes/ACTION_ANY_FILLERS_OR_BOTOX_YES\";\nimport ACTION_ANY_FILLERS_OR_BOTOX_YES from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/Yes/ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET\";\nimport ACTION_ANY_FILLERS_OR_BOTOX_NOTES from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/Yes/Notes/ACTION_ANY_FILLERS_OR_BOTOX_NOTES\";\n\nconst AnyFillersOrBotox = props => {\n  const dispatch = useDispatch();\n  const anyFillersOrBotoxNo = useSelector(state => state.anyFillersOrBotoxNo.any_fillers_or_botox_no_active);\n  const anyFillersOrBotoxYes = useSelector(state => state.anyFillersOrBotoxYes.any_fillers_or_botox_yes_active);\n  const anyFillersOrBotoxNotes = useSelector(state => state.anyFillersOrBotoxNotes.any_fillers_or_botox_notes);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        pageOpened = _useState2[0],\n        changePageOpened = _useState2[1];\n\n  useEffect(() => {\n    changePageOpened(true);\n    const pageNowOpen = setTimeout(() => {\n      changePageOpened(false);\n    }, 500);\n    return () => {\n      clearTimeout(pageNowOpen);\n    };\n  }, []);\n\n  const checkMark = () => {\n    return /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        x: 100\n      },\n      to: {\n        x: 0\n      },\n      config: {\n        duration: 2000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, styles => /*#__PURE__*/React.createElement(\"svg\", {\n      width: props.currentScreenSize === \"\" ? props.initialScreenSize >= 1800 ? \"2rem\" : props.initialScreenSize >= 1600 ? \"1rem\" : props.initialScreenSize >= 1200 ? \"0.5rem\" : \"100%\" : props.currentScreenSize >= 1800 ? \"2rem\" : props.currentScreenSize >= 1600 ? \"1rem\" : props.currentScreenSize >= 1200 ? \"0.5rem\" : \"100%\",\n      height: props.currentScreenSize === \"\" ? props.initialScreenSize >= 1800 ? \"2rem\" : props.initialScreenSize >= 1600 ? \"1.3rem\" : props.initialScreenSize >= 1200 ? \"0.5rem\" : props.initialScreenSize >= 360 ? \"2rem\" : \"1rem\" : props.currentScreenSize >= 1800 ? \"2rem\" : props.currentScreenSize >= 1600 ? \"1.3rem\" : props.currentScreenSize >= 1200 ? \"0.5rem\" : props.currentScreenSize >= 360 ? \"2rem\" : \"1rem\",\n      style: {\n        display: \"block\"\n      },\n      viewBox: \"0 0 13.229 13.229\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M2.851 7.56l2.45 2.482 5.36-6.958\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeDasharray: \"100\",\n      strokeDashoffset: pageOpened ? 0 : \"\".concat(styles.x),\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const handleNoClicked = () => {\n    if (anyFillersOrBotoxNo) {\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET());\n    } else {\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NO());\n\n      if (anyFillersOrBotoxYes) {\n        dispatch(ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET());\n      }\n    }\n  };\n\n  const handleYesClicked = () => {\n    if (anyFillersOrBotoxYes) {\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET());\n    } else {\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_YES());\n\n      if (anyFillersOrBotoxNo) {\n        dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET());\n      }\n    }\n  };\n\n  const handleFillersOrBotoxNotes = e => {\n    dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NOTES(e.currentTarget.value.trim()));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"client_consent_form_content_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"client_consent_form_question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Have you been treated with fillers or Botox in the last three weeks?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"client_consent_form_option_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-layers fa-fw client_consent_form_checkbox\",\n    onClick: handleNoClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    color: \"rgba(155, 155, 155, 0.4)\",\n    transform: !props.currentScreenSize ? props.initialScreenSize >= 360 ? \"grow-20\" : \"grow-10\" : props.currentScreenSize >= 360 ? \"grow-20\" : \"grow-10\",\n    icon: faSquare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }), anyFillersOrBotoxNo ? checkMark() : null), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"client_consent_form_checkbox_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  }, \"No\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"client_consent_form_option_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-layers fa-fw client_consent_form_checkbox\",\n    onClick: handleYesClicked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    color: \"rgba(155, 155, 155, 0.4)\",\n    transform: !props.currentScreenSize ? props.initialScreenSize >= 360 ? \"grow-20\" : \"grow-10\" : props.currentScreenSize >= 360 ? \"grow-20\" : \"grow-10\",\n    icon: faSquare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }), anyFillersOrBotoxYes ? checkMark() : null), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"client_consent_form_checkbox_description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"client_consent_form_elaboration_box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"fillers_or_botox_specification_text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, \"If yes, when?\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    style: {\n      fontFamily: \"Montserrat\"\n    },\n    defaultValue: anyFillersOrBotoxNotes,\n    placeholder: \"Enter any fillers or botox dates here.\",\n    className: \"form_appointment_notes\",\n    maxLength: 1000,\n    onChange: handleFillersOrBotoxNotes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default AnyFillersOrBotox;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HEC/Client/src/components/account/clientprofile/ConsentForm/Questions/AnyFillersOrBotox.js"],"names":["React","useEffect","useState","useSelector","useDispatch","FontAwesomeIcon","faSquare","FormGroup","Label","Input","Spring","ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET","ACTION_ANY_FILLERS_OR_BOTOX_NO","ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET","ACTION_ANY_FILLERS_OR_BOTOX_YES","ACTION_ANY_FILLERS_OR_BOTOX_NOTES","AnyFillersOrBotox","props","dispatch","anyFillersOrBotoxNo","state","any_fillers_or_botox_no_active","anyFillersOrBotoxYes","any_fillers_or_botox_yes_active","anyFillersOrBotoxNotes","any_fillers_or_botox_notes","pageOpened","changePageOpened","pageNowOpen","setTimeout","clearTimeout","checkMark","x","duration","styles","currentScreenSize","initialScreenSize","display","handleNoClicked","handleYesClicked","handleFillersOrBotoxNotes","e","currentTarget","value","trim","fontFamily"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSquare } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport \"../ConsentForm.css\";\r\nimport \"../../../../../bootstrap_forms.min.css\";\r\nimport ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/No/ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET\";\r\nimport ACTION_ANY_FILLERS_OR_BOTOX_NO from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/No/ACTION_ANY_FILLERS_OR_BOTOX_NO\";\r\nimport ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/Yes/ACTION_ANY_FILLERS_OR_BOTOX_YES\";\r\nimport ACTION_ANY_FILLERS_OR_BOTOX_YES from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/Yes/ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET\";\r\nimport ACTION_ANY_FILLERS_OR_BOTOX_NOTES from \"../../../../../actions/ConsentForm/AnyFillersOrBotox/Yes/Notes/ACTION_ANY_FILLERS_OR_BOTOX_NOTES\";\r\n\r\nconst AnyFillersOrBotox = (props) => {\r\n  const dispatch = useDispatch();\r\n  const anyFillersOrBotoxNo = useSelector(\r\n    (state) => state.anyFillersOrBotoxNo.any_fillers_or_botox_no_active\r\n  );\r\n  const anyFillersOrBotoxYes = useSelector(\r\n    (state) => state.anyFillersOrBotoxYes.any_fillers_or_botox_yes_active\r\n  );\r\n  const anyFillersOrBotoxNotes = useSelector(\r\n    (state) => state.anyFillersOrBotoxNotes.any_fillers_or_botox_notes\r\n  );\r\n  const [pageOpened, changePageOpened] = useState(false);\r\n\r\n  useEffect(() => {\r\n    changePageOpened(true);\r\n    const pageNowOpen = setTimeout(() => {\r\n      changePageOpened(false);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(pageNowOpen);\r\n    };\r\n  }, []);\r\n\r\n  const checkMark = () => {\r\n    return (\r\n      <Spring from={{ x: 100 }} to={{ x: 0 }} config={{ duration: 2000 }}>\r\n        {(styles) => (\r\n          <svg\r\n            width={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"0.5rem\"\r\n                  : \"100%\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"0.5rem\"\r\n                : \"100%\"\r\n            }\r\n            height={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1.3rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"0.5rem\"\r\n                  : props.initialScreenSize >= 360\r\n                  ? \"2rem\"\r\n                  : \"1rem\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1.3rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"0.5rem\"\r\n                : props.currentScreenSize >= 360\r\n                ? \"2rem\"\r\n                : \"1rem\"\r\n            }\r\n            style={{\r\n              display: \"block\",\r\n            }}\r\n            viewBox=\"0 0 13.229 13.229\"\r\n          >\r\n            <path\r\n              d=\"M2.851 7.56l2.45 2.482 5.36-6.958\"\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeDasharray=\"100\"\r\n              strokeDashoffset={pageOpened ? 0 : `${styles.x}`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"3\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </Spring>\r\n    );\r\n  };\r\n\r\n  const handleNoClicked = () => {\r\n    if (anyFillersOrBotoxNo) {\r\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET());\r\n    } else {\r\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NO());\r\n      if (anyFillersOrBotoxYes) {\r\n        dispatch(ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleYesClicked = () => {\r\n    if (anyFillersOrBotoxYes) {\r\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_YES_RESET());\r\n    } else {\r\n      dispatch(ACTION_ANY_FILLERS_OR_BOTOX_YES());\r\n      if (anyFillersOrBotoxNo) {\r\n        dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NO_RESET());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFillersOrBotoxNotes = (e) => {\r\n    dispatch(ACTION_ANY_FILLERS_OR_BOTOX_NOTES(e.currentTarget.value.trim()));\r\n  };\r\n\r\n  return (\r\n    <div className=\"client_consent_form_content_container\">\r\n      <p className=\"client_consent_form_question\">\r\n        Have you been treated with fillers or Botox in the last three weeks?\r\n      </p>\r\n      <div className=\"client_consent_form_option_container\">\r\n        <span\r\n          className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n          onClick={handleNoClicked}\r\n        >\r\n          <FontAwesomeIcon\r\n            color=\"rgba(155, 155, 155, 0.4)\"\r\n            transform={\r\n              !props.currentScreenSize\r\n                ? props.initialScreenSize >= 360\r\n                  ? \"grow-20\"\r\n                  : \"grow-10\"\r\n                : props.currentScreenSize >= 360\r\n                ? \"grow-20\"\r\n                : \"grow-10\"\r\n            }\r\n            icon={faSquare}\r\n          />\r\n          {anyFillersOrBotoxNo ? checkMark() : null}\r\n        </span>\r\n        <p className=\"client_consent_form_checkbox_description\">No</p>\r\n      </div>\r\n      <div className=\"client_consent_form_option_container\">\r\n        <span\r\n          className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n          onClick={handleYesClicked}\r\n        >\r\n          <FontAwesomeIcon\r\n            color=\"rgba(155, 155, 155, 0.4)\"\r\n            transform={\r\n              !props.currentScreenSize\r\n                ? props.initialScreenSize >= 360\r\n                  ? \"grow-20\"\r\n                  : \"grow-10\"\r\n                : props.currentScreenSize >= 360\r\n                ? \"grow-20\"\r\n                : \"grow-10\"\r\n            }\r\n            icon={faSquare}\r\n          />\r\n          {anyFillersOrBotoxYes ? checkMark() : null}\r\n        </span>\r\n        <p className=\"client_consent_form_checkbox_description\">Yes</p>\r\n        <FormGroup className=\"client_consent_form_elaboration_box\">\r\n          <Label for=\"fillers_or_botox_specification_text\">If yes, when?</Label>\r\n          <Input\r\n            type=\"textarea\"\r\n            style={{\r\n              fontFamily: \"Montserrat\",\r\n            }}\r\n            defaultValue={anyFillersOrBotoxNotes}\r\n            placeholder=\"Enter any fillers or botox dates here.\"\r\n            className=\"form_appointment_notes\"\r\n            maxLength={1000}\r\n            onChange={handleFillersOrBotoxNotes}\r\n          />\r\n        </FormGroup>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnyFillersOrBotox;\r\n"]},"metadata":{},"sourceType":"module"}