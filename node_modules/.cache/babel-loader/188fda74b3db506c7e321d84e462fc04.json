{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Autosuggest from\"react-autosuggest\";import LZString from\"lz-string\";import{useDispatch,useSelector}from\"react-redux\";import ACTION_ADMIN_CLIENT_FIRST_NAME from\"../../../../../actions/Admin/AdminCreateAppointment/AdminClientFirstName/ACTION_ADMIN_CLIENT_FIRST_NAME\";import ACTION_ADMIN_CLIENT_EMAIL from\"../../../../../actions/Admin/AdminCreateAppointment/AdminClientEmail/ACTION_ADMIN_CLIENT_EMIAL\";import ACTION_ADMIN_CLIENT_PHONE_NUMBER from\"../../../../../actions/Admin/AdminCreateAppointment/AdminClientPhoneNumber/ACTION_ADMIN_CLIENT_PHONE_NUMBER\";import ACTION_ADMIN_CLIENT_LAST_NAME from\"../../../../../actions/Admin/AdminCreateAppointment/AdminClientLastName/ACTION_ADMIN_CLIENT_LAST_NAME\";const ClientAutosuggest=props=>{const dispatch=useDispatch();const _useState=useState([]),_useState2=_slicedToArray(_useState,2),inputSuggestions=_useState2[0],changeInputSuggestions=_useState2[1];const adminClientFirstName=useSelector(state=>state.adminClientFirstName.admin_client_first_name);const inputChange=(event,{newValue})=>{dispatch(ACTION_ADMIN_CLIENT_FIRST_NAME(newValue));};const inputProps={placeholder:\"Client first name\",value:adminClientFirstName,onChange:inputChange};const clientSuggestions=props.getClientsData?props.getClientsData.clients?props.getClientsData.clients.map((x,i)=>{return{firstName:x.firstName,lastName:x.lastName,email:x.email,phoneNumber:x.phoneNumber,profilePicture:x.profilePicture?/*#__PURE__*/React.createElement(\"img\",{className:\"autosuggest_client_profile_picture\",src:LZString.decompressFromEncodedURIComponent(x.profilePicture),alt:x.firstName[0].toUpperCase()+x.firstName.slice(1).toLowerCase()+\" \"+x.lastName[0].toUpperCase()+x.lastName.slice(1).toLowerCase()+\" Profile Picture\"}):/*#__PURE__*/React.createElement(\"div\",{className:\"autosuggest_client_initials_square\",style:{background:props.randomColorArray?props.randomColorArray[i]:\"rgb(255, 255, 255)\"}},/*#__PURE__*/React.createElement(\"p\",null,x.firstName[0].toUpperCase()+x.lastName[0].toUpperCase()))};}):null:null;const getSuggestions=value=>{const inputValue=value?value.trim().toLowerCase():\"\";const inputLength=inputValue.length;if(inputLength===0){return[];}else{if(clientSuggestions){return clientSuggestions.filter(x=>{const clientFullName=x.firstName.toLowerCase()+\" \"+x.lastName.toLowerCase();if(clientFullName.slice(0,inputLength)===inputValue){return clientFullName.slice(0,inputLength)===inputValue;}else if(x.lastName.toLowerCase().slice(0,inputLength)===inputValue){return x.lastName.toLowerCase().slice(0,inputLength)===inputValue;}else if(x.email.toLowerCase().slice(0,inputLength)===inputValue){return x.email.toLowerCase().slice(0,inputLength)===inputValue;}else if(x.phoneNumber.includes(inputValue)){return x.phoneNumber.includes(inputValue);}else{return null;}});}else{return[];}}};const renderSuggestion=suggestion=>/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_client_suggestion_container\"},suggestion.profilePicture,/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_client_suggestion_contact_information_container\"},/*#__PURE__*/React.createElement(\"p\",null,suggestion.firstName[0].toUpperCase()+suggestion.firstName.slice(1).toLowerCase(),\" \",suggestion.lastName[0].toUpperCase()+suggestion.lastName.slice(1).toLowerCase()),/*#__PURE__*/React.createElement(\"p\",null,suggestion.email),/*#__PURE__*/React.createElement(\"p\",null,suggestion.phoneNumber)));const getSuggestionValue=suggestion=>{dispatch(ACTION_ADMIN_CLIENT_EMAIL(suggestion.email));dispatch(ACTION_ADMIN_CLIENT_PHONE_NUMBER(suggestion.phoneNumber));dispatch(ACTION_ADMIN_CLIENT_LAST_NAME(suggestion.lastName[0].toUpperCase()+suggestion.lastName.slice(1).toLowerCase()));dispatch(ACTION_ADMIN_CLIENT_FIRST_NAME(suggestion.firstName[0].toUpperCase()+suggestion.firstName.slice(1).toLowerCase()));return suggestion.firstName[0].toUpperCase()+suggestion.firstName.slice(1).toLowerCase();};const onSuggestionsFetchRequested=({value})=>{changeInputSuggestions(getSuggestions(value));};const onSuggestionsClearRequested=()=>{changeInputSuggestions([]);};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Autosuggest,{suggestions:inputSuggestions,onSuggestionsFetchRequested:onSuggestionsFetchRequested,onSuggestionsClearRequested:onSuggestionsClearRequested,getSuggestionValue:getSuggestionValue,renderSuggestion:renderSuggestion,inputProps:inputProps}));};export default ClientAutosuggest;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminSchedule/AdminCreateAppointment/Autosuggest/ClientAutosuggest.js"],"names":["React","useState","Autosuggest","LZString","useDispatch","useSelector","ACTION_ADMIN_CLIENT_FIRST_NAME","ACTION_ADMIN_CLIENT_EMAIL","ACTION_ADMIN_CLIENT_PHONE_NUMBER","ACTION_ADMIN_CLIENT_LAST_NAME","ClientAutosuggest","props","dispatch","inputSuggestions","changeInputSuggestions","adminClientFirstName","state","admin_client_first_name","inputChange","event","newValue","inputProps","placeholder","value","onChange","clientSuggestions","getClientsData","clients","map","x","i","firstName","lastName","email","phoneNumber","profilePicture","decompressFromEncodedURIComponent","toUpperCase","slice","toLowerCase","background","randomColorArray","getSuggestions","inputValue","trim","inputLength","length","filter","clientFullName","includes","renderSuggestion","suggestion","getSuggestionValue","onSuggestionsFetchRequested","onSuggestionsClearRequested"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport LZString from \"lz-string\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ACTION_ADMIN_CLIENT_FIRST_NAME from \"../../../../../actions/Admin/AdminCreateAppointment/AdminClientFirstName/ACTION_ADMIN_CLIENT_FIRST_NAME\";\r\nimport ACTION_ADMIN_CLIENT_EMAIL from \"../../../../../actions/Admin/AdminCreateAppointment/AdminClientEmail/ACTION_ADMIN_CLIENT_EMIAL\";\r\nimport ACTION_ADMIN_CLIENT_PHONE_NUMBER from \"../../../../../actions/Admin/AdminCreateAppointment/AdminClientPhoneNumber/ACTION_ADMIN_CLIENT_PHONE_NUMBER\";\r\nimport ACTION_ADMIN_CLIENT_LAST_NAME from \"../../../../../actions/Admin/AdminCreateAppointment/AdminClientLastName/ACTION_ADMIN_CLIENT_LAST_NAME\";\r\n\r\nconst ClientAutosuggest = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [inputSuggestions, changeInputSuggestions] = useState([]);\r\n\r\n  const adminClientFirstName = useSelector(\r\n    (state) => state.adminClientFirstName.admin_client_first_name\r\n  );\r\n\r\n  const inputChange = (event, { newValue }) => {\r\n    dispatch(ACTION_ADMIN_CLIENT_FIRST_NAME(newValue));\r\n  };\r\n\r\n  const inputProps = {\r\n    placeholder: \"Client first name\",\r\n    value: adminClientFirstName,\r\n    onChange: inputChange,\r\n  };\r\n\r\n  const clientSuggestions = props.getClientsData\r\n    ? props.getClientsData.clients\r\n      ? props.getClientsData.clients.map((x, i) => {\r\n          return {\r\n            firstName: x.firstName,\r\n            lastName: x.lastName,\r\n            email: x.email,\r\n            phoneNumber: x.phoneNumber,\r\n            profilePicture: x.profilePicture ? (\r\n              <img\r\n                className=\"autosuggest_client_profile_picture\"\r\n                src={LZString.decompressFromEncodedURIComponent(\r\n                  x.profilePicture\r\n                )}\r\n                alt={\r\n                  x.firstName[0].toUpperCase() +\r\n                  x.firstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  x.lastName[0].toUpperCase() +\r\n                  x.lastName.slice(1).toLowerCase() +\r\n                  \" Profile Picture\"\r\n                }\r\n              />\r\n            ) : (\r\n              <div\r\n                className=\"autosuggest_client_initials_square\"\r\n                style={{\r\n                  background: props.randomColorArray\r\n                    ? props.randomColorArray[i]\r\n                    : \"rgb(255, 255, 255)\",\r\n                }}\r\n              >\r\n                <p>\r\n                  {x.firstName[0].toUpperCase() + x.lastName[0].toUpperCase()}\r\n                </p>\r\n              </div>\r\n            ),\r\n          };\r\n        })\r\n      : null\r\n    : null;\r\n\r\n  const getSuggestions = (value) => {\r\n    const inputValue = value ? value.trim().toLowerCase() : \"\";\r\n    const inputLength = inputValue.length;\r\n\r\n    if (inputLength === 0) {\r\n      return [];\r\n    } else {\r\n      if (clientSuggestions) {\r\n        return clientSuggestions.filter((x) => {\r\n          const clientFullName =\r\n            x.firstName.toLowerCase() + \" \" + x.lastName.toLowerCase();\r\n\r\n          if (clientFullName.slice(0, inputLength) === inputValue) {\r\n            return clientFullName.slice(0, inputLength) === inputValue;\r\n          } else if (\r\n            x.lastName.toLowerCase().slice(0, inputLength) === inputValue\r\n          ) {\r\n            return (\r\n              x.lastName.toLowerCase().slice(0, inputLength) === inputValue\r\n            );\r\n          } else if (\r\n            x.email.toLowerCase().slice(0, inputLength) === inputValue\r\n          ) {\r\n            return x.email.toLowerCase().slice(0, inputLength) === inputValue;\r\n          } else if (x.phoneNumber.includes(inputValue)) {\r\n            return x.phoneNumber.includes(inputValue);\r\n          } else {\r\n            return null;\r\n          }\r\n        });\r\n      } else {\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderSuggestion = (suggestion) => (\r\n    <div className=\"admin_individual_client_suggestion_container\">\r\n      {suggestion.profilePicture}\r\n      <div className=\"admin_individual_client_suggestion_contact_information_container\">\r\n        <p>\r\n          {suggestion.firstName[0].toUpperCase() +\r\n            suggestion.firstName.slice(1).toLowerCase()}{\" \"}\r\n          {suggestion.lastName[0].toUpperCase() +\r\n            suggestion.lastName.slice(1).toLowerCase()}\r\n        </p>\r\n        <p>{suggestion.email}</p>\r\n        <p>{suggestion.phoneNumber}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const getSuggestionValue = (suggestion) => {\r\n    dispatch(ACTION_ADMIN_CLIENT_EMAIL(suggestion.email));\r\n    dispatch(ACTION_ADMIN_CLIENT_PHONE_NUMBER(suggestion.phoneNumber));\r\n    dispatch(\r\n      ACTION_ADMIN_CLIENT_LAST_NAME(\r\n        suggestion.lastName[0].toUpperCase() +\r\n          suggestion.lastName.slice(1).toLowerCase()\r\n      )\r\n    );\r\n    dispatch(\r\n      ACTION_ADMIN_CLIENT_FIRST_NAME(\r\n        suggestion.firstName[0].toUpperCase() +\r\n          suggestion.firstName.slice(1).toLowerCase()\r\n      )\r\n    );\r\n\r\n    return (\r\n      suggestion.firstName[0].toUpperCase() +\r\n      suggestion.firstName.slice(1).toLowerCase()\r\n    );\r\n  };\r\n\r\n  const onSuggestionsFetchRequested = ({ value }) => {\r\n    changeInputSuggestions(getSuggestions(value));\r\n  };\r\n\r\n  const onSuggestionsClearRequested = () => {\r\n    changeInputSuggestions([]);\r\n  };\r\n  return (\r\n    <>\r\n      <Autosuggest\r\n        suggestions={inputSuggestions}\r\n        onSuggestionsFetchRequested={onSuggestionsFetchRequested}\r\n        onSuggestionsClearRequested={onSuggestionsClearRequested}\r\n        getSuggestionValue={getSuggestionValue}\r\n        renderSuggestion={renderSuggestion}\r\n        inputProps={inputProps}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ClientAutosuggest;\r\n"]},"metadata":{},"sourceType":"module"}