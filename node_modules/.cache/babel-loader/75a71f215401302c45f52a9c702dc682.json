{"ast":null,"code":"import React from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import\"../SignUp.css\";import ACTION_CREATE_ACCOUNT_PASSWORD from\"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD\";import ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID from\"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID\";import ACTION_CREATE_ACCOUNT_PASSWORD_VALID from\"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_VALID\";import ACTION_CREATE_ACCOUNT_PASSWORD_INVALID from\"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_INVALID\";import ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID from\"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID\";import ACTION_CREATE_ACCOUNT_PASSWORD_RESET from\"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD_RESET\";const CreateAccountPassword=()=>{const dispatch=useDispatch();// Password States\nconst createAccountPassword=useSelector(state=>state.createAccountPassword.create_account_password);const createAccountPasswordValid=useSelector(state=>state.createAccountPasswordValid.create_account_password_valid);const createAccountPasswordInvalid=useSelector(state=>state.createAccountPasswordInvalid.create_account_password_invalid);// Regular Expression for Password Validation - must be at least 8 characters long, must contain at least 1 lowercase character, 1 uppercase character, and 1 number\nconst passwordReg=/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;const validatePassword=e=>{const validPassword=passwordReg.test(e.currentTarget.value);dispatch(ACTION_CREATE_ACCOUNT_PASSWORD(e.currentTarget.value.trim()));if(validPassword){dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID());dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_VALID());}else{dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_INVALID());dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID());}};const passwordTyping=()=>{dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_RESET());};return/*#__PURE__*/React.createElement(FormGroup,{className:\"sign_up_individual_form_field\"},/*#__PURE__*/React.createElement(Label,{for:\"createAccountPassword\"},/*#__PURE__*/React.createElement(\"div\",{className:\"required_label\"},\"Password\",/*#__PURE__*/React.createElement(\"p\",{className:\"required_label red_asterisk\"},\"* \"))),/*#__PURE__*/React.createElement(Input,{type:\"password\",name:\"createAccountPassword\",defaultValue:createAccountPassword,maxLength:128,autoFocus:true,placeholder:\"Password\",className:\"input_field_sign_up\",onChange:passwordTyping,onBlur:validatePassword,invalid:createAccountPassword===\"\"?false:createAccountPasswordInvalid?true:false,valid:createAccountPassword===\"\"?false:createAccountPasswordValid?true:false}),createAccountPassword.length<8?/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"Password must be at least 8 characters long.\"):/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"Password must contain at least 1 lowercase character, 1 uppercase character, and 1 number.\"));};export default CreateAccountPassword;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/account/signup/CreateAccountPassword/CreateAccountPassword.js"],"names":["React","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","ACTION_CREATE_ACCOUNT_PASSWORD","ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID","ACTION_CREATE_ACCOUNT_PASSWORD_VALID","ACTION_CREATE_ACCOUNT_PASSWORD_INVALID","ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID","ACTION_CREATE_ACCOUNT_PASSWORD_RESET","CreateAccountPassword","dispatch","createAccountPassword","state","create_account_password","createAccountPasswordValid","create_account_password_valid","createAccountPasswordInvalid","create_account_password_invalid","passwordReg","validatePassword","e","validPassword","test","currentTarget","value","trim","passwordTyping","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,SAAT,CAAoBC,YAApB,CAAkCC,KAAlC,CAAyCC,KAAzC,KAAsD,YAAtD,CACA,MAAO,eAAP,CACA,MAAOC,CAAAA,8BAAP,KAA2C,wFAA3C,CACA,MAAOC,CAAAA,0CAAP,KAAuD,uHAAvD,CACA,MAAOC,CAAAA,oCAAP,KAAiD,+GAAjD,CACA,MAAOC,CAAAA,sCAAP,KAAmD,mHAAnD,CACA,MAAOC,CAAAA,wCAAP,KAAqD,mHAArD,CACA,MAAOC,CAAAA,oCAAP,KAAiD,8FAAjD,CAEA,KAAMC,CAAAA,qBAAqB,CAAG,IAAM,CAClC,KAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA;AACA,KAAMc,CAAAA,qBAAqB,CAAGb,WAAW,CACtCc,KAAD,EAAWA,KAAK,CAACD,qBAAN,CAA4BE,uBADA,CAAzC,CAGA,KAAMC,CAAAA,0BAA0B,CAAGhB,WAAW,CAC3Cc,KAAD,EAAWA,KAAK,CAACE,0BAAN,CAAiCC,6BADA,CAA9C,CAGA,KAAMC,CAAAA,4BAA4B,CAAGlB,WAAW,CAC7Cc,KAAD,EACEA,KAAK,CAACI,4BAAN,CAAmCC,+BAFS,CAAhD,CAKA;AACA,KAAMC,CAAAA,WAAW,CAAG,uCAApB,CAEA,KAAMC,CAAAA,gBAAgB,CAAIC,CAAD,EAAO,CAC9B,KAAMC,CAAAA,aAAa,CAAGH,WAAW,CAACI,IAAZ,CAAiBF,CAAC,CAACG,aAAF,CAAgBC,KAAjC,CAAtB,CACAd,QAAQ,CAACP,8BAA8B,CAACiB,CAAC,CAACG,aAAF,CAAgBC,KAAhB,CAAsBC,IAAtB,EAAD,CAA/B,CAAR,CAEA,GAAIJ,aAAJ,CAAmB,CACjBX,QAAQ,CAACN,0CAA0C,EAA3C,CAAR,CACAM,QAAQ,CAACL,oCAAoC,EAArC,CAAR,CACD,CAHD,IAGO,CACLK,QAAQ,CAACJ,sCAAsC,EAAvC,CAAR,CACAI,QAAQ,CAACH,wCAAwC,EAAzC,CAAR,CACD,CACF,CAXD,CAaA,KAAMmB,CAAAA,cAAc,CAAG,IAAM,CAC3BhB,QAAQ,CAACF,oCAAoC,EAArC,CAAR,CACD,CAFD,CAIA,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAC,+BAArB,eACE,oBAAC,KAAD,EAAO,GAAG,CAAC,uBAAX,eACE,2BAAK,SAAS,CAAC,gBAAf,0BACU,yBAAG,SAAS,CAAC,6BAAb,OADV,CADF,CADF,cAME,oBAAC,KAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,uBAFP,CAGE,YAAY,CAAEG,qBAHhB,CAIE,SAAS,CAAE,GAJb,CAKE,SAAS,KALX,CAME,WAAW,CAAC,UANd,CAOE,SAAS,CAAC,qBAPZ,CAQE,QAAQ,CAAEe,cARZ,CASE,MAAM,CAAEP,gBATV,CAUE,OAAO,CACLR,qBAAqB,GAAK,EAA1B,CACI,KADJ,CAEIK,4BAA4B,CAC5B,IAD4B,CAE5B,KAfR,CAiBE,KAAK,CACHL,qBAAqB,GAAK,EAA1B,CACI,KADJ,CAEIG,0BAA0B,CAC1B,IAD0B,CAE1B,KAtBR,EANF,CA+BGH,qBAAqB,CAACgB,MAAtB,CAA+B,CAA/B,cACC,oBAAC,YAAD,EAAc,SAAS,CAAC,2BAAxB,CAAoD,OAAO,CAAC,MAA5D,iDADD,cAKC,oBAAC,YAAD,EAAc,SAAS,CAAC,2BAAxB,CAAoD,OAAO,CAAC,MAA5D,+FApCJ,CADF,CA4CD,CA/ED,CAiFA,cAAelB,CAAAA,qBAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport \"../SignUp.css\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD from \"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_VALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_INVALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_RESET from \"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD_RESET\";\r\n\r\nconst CreateAccountPassword = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Password States\r\n  const createAccountPassword = useSelector(\r\n    (state) => state.createAccountPassword.create_account_password\r\n  );\r\n  const createAccountPasswordValid = useSelector(\r\n    (state) => state.createAccountPasswordValid.create_account_password_valid\r\n  );\r\n  const createAccountPasswordInvalid = useSelector(\r\n    (state) =>\r\n      state.createAccountPasswordInvalid.create_account_password_invalid\r\n  );\r\n\r\n  // Regular Expression for Password Validation - must be at least 8 characters long, must contain at least 1 lowercase character, 1 uppercase character, and 1 number\r\n  const passwordReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n  const validatePassword = (e) => {\r\n    const validPassword = passwordReg.test(e.currentTarget.value);\r\n    dispatch(ACTION_CREATE_ACCOUNT_PASSWORD(e.currentTarget.value.trim()));\r\n\r\n    if (validPassword) {\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID());\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_VALID());\r\n    } else {\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_INVALID());\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID());\r\n    }\r\n  };\r\n\r\n  const passwordTyping = () => {\r\n    dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_RESET());\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"sign_up_individual_form_field\">\r\n      <Label for=\"createAccountPassword\">\r\n        <div className=\"required_label\">\r\n          Password<p className=\"required_label red_asterisk\">* </p>\r\n        </div>\r\n      </Label>\r\n      <Input\r\n        type=\"password\"\r\n        name=\"createAccountPassword\"\r\n        defaultValue={createAccountPassword}\r\n        maxLength={128}\r\n        autoFocus\r\n        placeholder=\"Password\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={passwordTyping}\r\n        onBlur={validatePassword}\r\n        invalid={\r\n          createAccountPassword === \"\"\r\n            ? false\r\n            : createAccountPasswordInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          createAccountPassword === \"\"\r\n            ? false\r\n            : createAccountPasswordValid\r\n            ? true\r\n            : false\r\n        }\r\n      />\r\n      {createAccountPassword.length < 8 ? (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Password must be at least 8 characters long.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Password must contain at least 1 lowercase character, 1 uppercase\r\n          character, and 1 number.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default CreateAccountPassword;\r\n"]},"metadata":{},"sourceType":"module"}