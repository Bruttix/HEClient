{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\src\\\\components\\\\admin\\\\AdminSchedule\\\\AdminCreateAppointment\\\\Autosuggest\\\\TreatmentAutosuggest.js\";\nimport React, { useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport treatmentSuggestions from \"../TreatmentSuggestions\";\nimport ACTION_ADMIN_APPOINTMENT_DURATION from \"../../../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDuration/ACTION_ADMIN_APPOINTMENT_DURATION\";\nimport ACTION_ADMIN_SELECTED_TREATMENTS from \"../../../../../actions/Admin/AdminCreateAppointment/AdminSelectedTreatments/ACTION_ADMIN_SELECTED_TREATMENTS\";\n\nconst TreatmentAutosuggest = props => {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        treatmentInputSuggestions = _useState2[0],\n        changeTreatmentInputSuggestions = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        treatmentInput = _useState4[0],\n        changeTreatmentInput = _useState4[1];\n\n  const adminAppointmentDuration = useSelector(state => state.adminAppointmentDuration.admin_appointment_duration);\n  const adminSelectedTreatments = useSelector(state => state.adminSelectedTreatments.admin_selected_treatments);\n\n  const treatmentInputChange = (event, {\n    newValue\n  }) => {\n    changeTreatmentInput(newValue);\n  };\n\n  const renderTreatmentSuggestion = suggestion => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_treatment_suggestion_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, suggestion.props.children[4].props.children ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_treatment_suggestion_picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, suggestion.props.children[4].props.children) : null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, suggestion.props.children[0].props.children), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, suggestion.props.children[3].props.children ? \"$\" + suggestion.props.children[3].props.children + \".00\" : null));\n  };\n\n  const _renderSectionTitle = section => {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"react_autosuggest_section_title_header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, section.sectionTitle);\n  };\n\n  const _getSectionSuggestions = section => {\n    if (section.suggestions) {\n      return section.suggestions.map((x, i) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }, x.name), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }\n        }, x.componentName), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }\n        }, x.duration), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }\n        }, x.price), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, x.picture));\n      });\n    }\n  };\n\n  const onTreatmentSuggestionsFetchRequested = ({\n    value\n  }) => {\n    changeTreatmentInputSuggestions(getTreatmentSuggestions(value));\n  };\n\n  const onTreatmentSuggestionsClearRequested = () => {\n    changeTreatmentInputSuggestions([]);\n  };\n\n  const treatmentInputProps = {\n    placeholder: \"Add a Treatment\",\n    value: treatmentInput,\n    onChange: treatmentInputChange,\n    style: {\n      borderRight: \"1px solid transparent\"\n    }\n  };\n\n  const getTreatmentSuggestionValue = suggestion => {\n    dispatch(ACTION_ADMIN_APPOINTMENT_DURATION(adminAppointmentDuration + suggestion.props.children[2].props.children));\n    dispatch(ACTION_ADMIN_SELECTED_TREATMENTS([...adminSelectedTreatments, suggestion]));\n    return \"\";\n  };\n\n  const getTreatmentSuggestions = value => {\n    const inputValue = value ? value.trim().toLowerCase() : \"\";\n    const inputLength = inputValue.length;\n\n    if (inputLength === 0) {\n      const sortedArr = [];\n\n      for (let i = 0; i < treatmentSuggestions().length; i++) {\n        sortedArr.push({\n          sectionTitle: treatmentSuggestions() ? treatmentSuggestions()[i].sectionTitle ? treatmentSuggestions()[i].sectionTitle : null : null,\n          suggestions: treatmentSuggestions() ? treatmentSuggestions()[i].suggestions ? treatmentSuggestions()[i].suggestions.sort((a, b) => a.name ? a.name.localeCompare(b.name) : null) : null : null\n        });\n      }\n\n      return sortedArr;\n    } else {\n      const sortedArr = [];\n\n      for (let i = 0; i < treatmentSuggestions().length; i++) {\n        sortedArr.push({\n          sectionTitle: treatmentSuggestions() ? treatmentSuggestions()[i].sectionTitle ? treatmentSuggestions()[i].sectionTitle : null : null,\n          suggestions: treatmentSuggestions() ? treatmentSuggestions()[i].suggestions.sort((a, b) => a.name ? a.name.localeCompare(b.name) : null).filter(x => {\n            const treatmentName = x.name;\n\n            if (treatmentName.toLowerCase().slice(0, inputLength) === inputValue) {\n              return treatmentName.toLowerCase().slice(0, inputLength) === inputValue;\n            } else {\n              return null;\n            }\n          }) : null\n        });\n        return sortedArr;\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    style: {\n      borderLeft: \"1px solid rgb(211, 211, 211)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autosuggest, {\n    suggestions: treatmentInputSuggestions,\n    onSuggestionsFetchRequested: onTreatmentSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onTreatmentSuggestionsClearRequested,\n    getSuggestionValue: getTreatmentSuggestionValue,\n    renderSuggestion: renderTreatmentSuggestion,\n    inputProps: treatmentInputProps,\n    shouldRenderSuggestions: () => true,\n    focusInputOnSuggestionClick: false,\n    multiSection: true,\n    renderSectionTitle: section => _renderSectionTitle(section),\n    getSectionSuggestions: section => _getSectionSuggestions(section),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: true,\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    className: \"react-autosuggest__input\",\n    style: {\n      borderLeft: \"1px solid transparent\",\n      borderRight: \"1px solid transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: true,\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    className: \"react-autosuggest__input\",\n    style: {\n      borderLeft: \"1px solid transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default TreatmentAutosuggest;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HEC/Client/src/components/admin/AdminSchedule/AdminCreateAppointment/Autosuggest/TreatmentAutosuggest.js"],"names":["React","useState","Autosuggest","useDispatch","useSelector","treatmentSuggestions","ACTION_ADMIN_APPOINTMENT_DURATION","ACTION_ADMIN_SELECTED_TREATMENTS","TreatmentAutosuggest","props","dispatch","treatmentInputSuggestions","changeTreatmentInputSuggestions","treatmentInput","changeTreatmentInput","adminAppointmentDuration","state","admin_appointment_duration","adminSelectedTreatments","admin_selected_treatments","treatmentInputChange","event","newValue","renderTreatmentSuggestion","suggestion","children","renderSectionTitle","section","sectionTitle","getSectionSuggestions","suggestions","map","x","i","name","componentName","duration","price","picture","onTreatmentSuggestionsFetchRequested","value","getTreatmentSuggestions","onTreatmentSuggestionsClearRequested","treatmentInputProps","placeholder","onChange","style","borderRight","getTreatmentSuggestionValue","inputValue","trim","toLowerCase","inputLength","length","sortedArr","push","sort","a","b","localeCompare","filter","treatmentName","slice","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport treatmentSuggestions from \"../TreatmentSuggestions\";\r\nimport ACTION_ADMIN_APPOINTMENT_DURATION from \"../../../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDuration/ACTION_ADMIN_APPOINTMENT_DURATION\";\r\nimport ACTION_ADMIN_SELECTED_TREATMENTS from \"../../../../../actions/Admin/AdminCreateAppointment/AdminSelectedTreatments/ACTION_ADMIN_SELECTED_TREATMENTS\";\r\n\r\nconst TreatmentAutosuggest = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [treatmentInputSuggestions, changeTreatmentInputSuggestions] = useState(\r\n    []\r\n  );\r\n  const [treatmentInput, changeTreatmentInput] = useState(\"\");\r\n\r\n  const adminAppointmentDuration = useSelector(\r\n    (state) => state.adminAppointmentDuration.admin_appointment_duration\r\n  );\r\n  const adminSelectedTreatments = useSelector(\r\n    (state) => state.adminSelectedTreatments.admin_selected_treatments\r\n  );\r\n\r\n  const treatmentInputChange = (event, { newValue }) => {\r\n    changeTreatmentInput(newValue);\r\n  };\r\n\r\n  const renderTreatmentSuggestion = (suggestion) => {\r\n    return (\r\n      <div className=\"admin_individual_client_treatment_suggestion_container\">\r\n        {suggestion.props.children[4].props.children ? (\r\n          <div className=\"admin_individual_client_treatment_suggestion_picture\">\r\n            {suggestion.props.children[4].props.children}\r\n          </div>\r\n        ) : null}\r\n\r\n        <p>{suggestion.props.children[0].props.children}</p>\r\n        <p>\r\n          {suggestion.props.children[3].props.children\r\n            ? \"$\" + suggestion.props.children[3].props.children + \".00\"\r\n            : null}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSectionTitle = (section) => {\r\n    return (\r\n      <span className=\"react_autosuggest_section_title_header\">\r\n        {section.sectionTitle}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const getSectionSuggestions = (section) => {\r\n    if (section.suggestions) {\r\n      return section.suggestions.map((x, i) => {\r\n        return (\r\n          <>\r\n            <span key={i}>{x.name}</span>\r\n            <span key={i}>{x.componentName}</span>\r\n            <span key={i}>{x.duration}</span>\r\n            <span key={i}>{x.price}</span>\r\n            <span key={i}>{x.picture}</span>\r\n          </>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const onTreatmentSuggestionsFetchRequested = ({ value }) => {\r\n    changeTreatmentInputSuggestions(getTreatmentSuggestions(value));\r\n  };\r\n\r\n  const onTreatmentSuggestionsClearRequested = () => {\r\n    changeTreatmentInputSuggestions([]);\r\n  };\r\n\r\n  const treatmentInputProps = {\r\n    placeholder: \"Add a Treatment\",\r\n    value: treatmentInput,\r\n    onChange: treatmentInputChange,\r\n    style: { borderRight: \"1px solid transparent\" },\r\n  };\r\n\r\n  const getTreatmentSuggestionValue = (suggestion) => {\r\n    dispatch(\r\n      ACTION_ADMIN_APPOINTMENT_DURATION(\r\n        adminAppointmentDuration + suggestion.props.children[2].props.children\r\n      )\r\n    );\r\n    dispatch(\r\n      ACTION_ADMIN_SELECTED_TREATMENTS([...adminSelectedTreatments, suggestion])\r\n    );\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const getTreatmentSuggestions = (value) => {\r\n    const inputValue = value ? value.trim().toLowerCase() : \"\";\r\n    const inputLength = inputValue.length;\r\n\r\n    if (inputLength === 0) {\r\n      const sortedArr = [];\r\n\r\n      for (let i = 0; i < treatmentSuggestions().length; i++) {\r\n        sortedArr.push({\r\n          sectionTitle: treatmentSuggestions()\r\n            ? treatmentSuggestions()[i].sectionTitle\r\n              ? treatmentSuggestions()[i].sectionTitle\r\n              : null\r\n            : null,\r\n          suggestions: treatmentSuggestions()\r\n            ? treatmentSuggestions()[i].suggestions\r\n              ? treatmentSuggestions()[i].suggestions.sort((a, b) =>\r\n                  a.name ? a.name.localeCompare(b.name) : null\r\n                )\r\n              : null\r\n            : null,\r\n        });\r\n      }\r\n      return sortedArr;\r\n    } else {\r\n      const sortedArr = [];\r\n\r\n      for (let i = 0; i < treatmentSuggestions().length; i++) {\r\n        sortedArr.push({\r\n          sectionTitle: treatmentSuggestions()\r\n            ? treatmentSuggestions()[i].sectionTitle\r\n              ? treatmentSuggestions()[i].sectionTitle\r\n              : null\r\n            : null,\r\n          suggestions: treatmentSuggestions()\r\n            ? treatmentSuggestions()\r\n                [i].suggestions.sort((a, b) =>\r\n                  a.name ? a.name.localeCompare(b.name) : null\r\n                )\r\n                .filter((x) => {\r\n                  const treatmentName = x.name;\r\n\r\n                  if (\r\n                    treatmentName.toLowerCase().slice(0, inputLength) ===\r\n                    inputValue\r\n                  ) {\r\n                    return (\r\n                      treatmentName.toLowerCase().slice(0, inputLength) ===\r\n                      inputValue\r\n                    );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n            : null,\r\n        });\r\n        return sortedArr;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"admin_create_appointment_input_information_container\"\r\n      style={{\r\n        borderLeft: \"1px solid rgb(211, 211, 211)\",\r\n      }}\r\n    >\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <Autosuggest\r\n          suggestions={treatmentInputSuggestions}\r\n          onSuggestionsFetchRequested={onTreatmentSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onTreatmentSuggestionsClearRequested}\r\n          getSuggestionValue={getTreatmentSuggestionValue}\r\n          renderSuggestion={renderTreatmentSuggestion}\r\n          inputProps={treatmentInputProps}\r\n          shouldRenderSuggestions={() => true}\r\n          focusInputOnSuggestionClick={false}\r\n          multiSection={true}\r\n          renderSectionTitle={(section) => renderSectionTitle(section)}\r\n          getSectionSuggestions={(section) => getSectionSuggestions(section)}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          autoComplete=\"off\"\r\n          aria-autocomplete=\"list\"\r\n          aria-controls=\"react-autowhatever-1\"\r\n          className=\"react-autosuggest__input\"\r\n          style={{\r\n            borderLeft: \"1px solid transparent\",\r\n            borderRight: \"1px solid transparent\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          autoComplete=\"off\"\r\n          aria-autocomplete=\"list\"\r\n          aria-controls=\"react-autowhatever-1\"\r\n          className=\"react-autosuggest__input\"\r\n          style={{\r\n            borderLeft: \"1px solid transparent\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TreatmentAutosuggest;\r\n"]},"metadata":{},"sourceType":"module"}