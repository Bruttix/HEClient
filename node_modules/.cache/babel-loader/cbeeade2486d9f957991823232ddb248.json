{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\backup-July4\\\\Client\\\\src\\\\components\\\\account\\\\signup\\\\CreateAccountPassword\\\\CreateAccountPassword.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\nimport \"../SignUp.css\";\nimport ACTION_CREATE_ACCOUNT_PASSWORD from \"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD\";\nimport ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID\";\nimport ACTION_CREATE_ACCOUNT_PASSWORD_VALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_VALID\";\nimport ACTION_CREATE_ACCOUNT_PASSWORD_INVALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_INVALID\";\nimport ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID\";\nimport ACTION_CREATE_ACCOUNT_PASSWORD_RESET from \"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD_RESET\";\n\nconst CreateAccountPassword = () => {\n  const dispatch = useDispatch(); // Password States\n\n  const createAccountPassword = useSelector(state => state.createAccountPassword.create_account_password);\n  const createAccountPasswordValid = useSelector(state => state.createAccountPasswordValid.create_account_password_valid);\n  const createAccountPasswordInvalid = useSelector(state => state.createAccountPasswordInvalid.create_account_password_invalid); // Regular Expression for Password Validation - must be at least 8 characters long, must contain at least 1 lowercase character, 1 uppercase character, and 1 number\n\n  const passwordReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\n  const validatePassword = e => {\n    const validPassword = passwordReg.test(e.currentTarget.value);\n    dispatch(ACTION_CREATE_ACCOUNT_PASSWORD(e.currentTarget.value.trim()));\n\n    if (validPassword) {\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID());\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_VALID());\n    } else {\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_INVALID());\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID());\n    }\n  };\n\n  const passwordTyping = () => {\n    dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_RESET());\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"sign_up_individual_form_field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"createAccountPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"Password\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"required_label red_asterisk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, \"* \"))), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"createAccountPassword\",\n    defaultValue: createAccountPassword,\n    maxLength: 128,\n    autoFocus: true,\n    placeholder: \"Password\",\n    className: \"input_field_sign_up\",\n    onChange: passwordTyping,\n    onBlur: validatePassword,\n    invalid: createAccountPassword === \"\" ? false : createAccountPasswordInvalid ? true : false,\n    valid: createAccountPassword === \"\" ? false : createAccountPasswordValid ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), createAccountPassword.length < 8 ? /*#__PURE__*/React.createElement(FormFeedback, {\n    className: \"invalid_message_container\",\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, \"Password must be at least 8 characters long.\") : /*#__PURE__*/React.createElement(FormFeedback, {\n    className: \"invalid_message_container\",\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, \"Password must contain at least 1 lowercase character, 1 uppercase character, and 1 number.\"));\n};\n\nexport default CreateAccountPassword;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/backup-July4/Client/src/components/account/signup/CreateAccountPassword/CreateAccountPassword.js"],"names":["React","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","ACTION_CREATE_ACCOUNT_PASSWORD","ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID","ACTION_CREATE_ACCOUNT_PASSWORD_VALID","ACTION_CREATE_ACCOUNT_PASSWORD_INVALID","ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID","ACTION_CREATE_ACCOUNT_PASSWORD_RESET","CreateAccountPassword","dispatch","createAccountPassword","state","create_account_password","createAccountPasswordValid","create_account_password_valid","createAccountPasswordInvalid","create_account_password_invalid","passwordReg","validatePassword","e","validPassword","test","currentTarget","value","trim","passwordTyping","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAO,eAAP;AACA,OAAOC,8BAAP,MAA2C,wFAA3C;AACA,OAAOC,0CAAP,MAAuD,uHAAvD;AACA,OAAOC,oCAAP,MAAiD,+GAAjD;AACA,OAAOC,sCAAP,MAAmD,mHAAnD;AACA,OAAOC,wCAAP,MAAqD,mHAArD;AACA,OAAOC,oCAAP,MAAiD,8FAAjD;;AAEA,MAAMC,qBAAqB,GAAG,MAAM;AAClC,QAAMC,QAAQ,GAAGb,WAAW,EAA5B,CADkC,CAGlC;;AACA,QAAMc,qBAAqB,GAAGb,WAAW,CACtCc,KAAD,IAAWA,KAAK,CAACD,qBAAN,CAA4BE,uBADA,CAAzC;AAGA,QAAMC,0BAA0B,GAAGhB,WAAW,CAC3Cc,KAAD,IAAWA,KAAK,CAACE,0BAAN,CAAiCC,6BADA,CAA9C;AAGA,QAAMC,4BAA4B,GAAGlB,WAAW,CAC7Cc,KAAD,IACEA,KAAK,CAACI,4BAAN,CAAmCC,+BAFS,CAAhD,CAVkC,CAelC;;AACA,QAAMC,WAAW,GAAG,uCAApB;;AAEA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC9B,UAAMC,aAAa,GAAGH,WAAW,CAACI,IAAZ,CAAiBF,CAAC,CAACG,aAAF,CAAgBC,KAAjC,CAAtB;AACAd,IAAAA,QAAQ,CAACP,8BAA8B,CAACiB,CAAC,CAACG,aAAF,CAAgBC,KAAhB,CAAsBC,IAAtB,EAAD,CAA/B,CAAR;;AAEA,QAAIJ,aAAJ,EAAmB;AACjBX,MAAAA,QAAQ,CAACN,0CAA0C,EAA3C,CAAR;AACAM,MAAAA,QAAQ,CAACL,oCAAoC,EAArC,CAAR;AACD,KAHD,MAGO;AACLK,MAAAA,QAAQ,CAACJ,sCAAsC,EAAvC,CAAR;AACAI,MAAAA,QAAQ,CAACH,wCAAwC,EAAzC,CAAR;AACD;AACF,GAXD;;AAaA,QAAMmB,cAAc,GAAG,MAAM;AAC3BhB,IAAAA,QAAQ,CAACF,oCAAoC,EAArC,CAAR;AACD,GAFD;;AAIA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,+BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,GAAG,EAAC,uBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACU;AAAG,IAAA,SAAS,EAAC,6BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADV,CADF,CADF,eAME,oBAAC,KAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,uBAFP;AAGE,IAAA,YAAY,EAAEG,qBAHhB;AAIE,IAAA,SAAS,EAAE,GAJb;AAKE,IAAA,SAAS,MALX;AAME,IAAA,WAAW,EAAC,UANd;AAOE,IAAA,SAAS,EAAC,qBAPZ;AAQE,IAAA,QAAQ,EAAEe,cARZ;AASE,IAAA,MAAM,EAAEP,gBATV;AAUE,IAAA,OAAO,EACLR,qBAAqB,KAAK,EAA1B,GACI,KADJ,GAEIK,4BAA4B,GAC5B,IAD4B,GAE5B,KAfR;AAiBE,IAAA,KAAK,EACHL,qBAAqB,KAAK,EAA1B,GACI,KADJ,GAEIG,0BAA0B,GAC1B,IAD0B,GAE1B,KAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EA+BGH,qBAAqB,CAACgB,MAAtB,GAA+B,CAA/B,gBACC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,2BAAxB;AAAoD,IAAA,OAAO,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oDADD,gBAKC,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,2BAAxB;AAAoD,IAAA,OAAO,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kGApCJ,CADF;AA4CD,CA/ED;;AAiFA,eAAelB,qBAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport \"../SignUp.css\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD from \"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_VALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_INVALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Invalid/ACTION_CREATE_ACCOUNT_PASSWORD_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountPassword/Validation/Valid/ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PASSWORD_RESET from \"../../../../actions/CreateAccount/CreateAccountPassword/ACTION_CREATE_ACCOUNT_PASSWORD_RESET\";\r\n\r\nconst CreateAccountPassword = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Password States\r\n  const createAccountPassword = useSelector(\r\n    (state) => state.createAccountPassword.create_account_password\r\n  );\r\n  const createAccountPasswordValid = useSelector(\r\n    (state) => state.createAccountPasswordValid.create_account_password_valid\r\n  );\r\n  const createAccountPasswordInvalid = useSelector(\r\n    (state) =>\r\n      state.createAccountPasswordInvalid.create_account_password_invalid\r\n  );\r\n\r\n  // Regular Expression for Password Validation - must be at least 8 characters long, must contain at least 1 lowercase character, 1 uppercase character, and 1 number\r\n  const passwordReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n  const validatePassword = (e) => {\r\n    const validPassword = passwordReg.test(e.currentTarget.value);\r\n    dispatch(ACTION_CREATE_ACCOUNT_PASSWORD(e.currentTarget.value.trim()));\r\n\r\n    if (validPassword) {\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_INVALID());\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_VALID());\r\n    } else {\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_INVALID());\r\n      dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_NOT_VALID());\r\n    }\r\n  };\r\n\r\n  const passwordTyping = () => {\r\n    dispatch(ACTION_CREATE_ACCOUNT_PASSWORD_RESET());\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"sign_up_individual_form_field\">\r\n      <Label for=\"createAccountPassword\">\r\n        <div className=\"required_label\">\r\n          Password<p className=\"required_label red_asterisk\">* </p>\r\n        </div>\r\n      </Label>\r\n      <Input\r\n        type=\"password\"\r\n        name=\"createAccountPassword\"\r\n        defaultValue={createAccountPassword}\r\n        maxLength={128}\r\n        autoFocus\r\n        placeholder=\"Password\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={passwordTyping}\r\n        onBlur={validatePassword}\r\n        invalid={\r\n          createAccountPassword === \"\"\r\n            ? false\r\n            : createAccountPasswordInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          createAccountPassword === \"\"\r\n            ? false\r\n            : createAccountPasswordValid\r\n            ? true\r\n            : false\r\n        }\r\n      />\r\n      {createAccountPassword.length < 8 ? (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Password must be at least 8 characters long.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Password must contain at least 1 lowercase character, 1 uppercase\r\n          character, and 1 number.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default CreateAccountPassword;\r\n"]},"metadata":{},"sourceType":"module"}