{"ast":null,"code":"import _objectSpread from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\admin\\\\AdminStaff\\\\AdminStaff.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: block;\\n    position: absolute;\\n    left: 25%;\\n    right: 25%;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useMemo, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faSearch, faEllipsisH, faLongArrowAltLeft, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Redirect, Link, useLocation } from \"react-router-dom\";\nimport { FormGroup, Input } from \"reactstrap\";\nimport Modal from \"react-modal\";\nimport { Transition } from \"react-spring/renderprops\";\nimport imageCompression from \"browser-image-compression\";\nimport ImageUploader from \"react-images-upload\";\nimport Camera, { IMAGE_TYPES } from \"react-html5-camera-photo\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport updateAdminProfilePictureMutation from \"../../../graphql/mutations/updateAdminProfilePictureMutation\";\nimport LZString from \"lz-string\";\nimport { css } from \"@emotion/css\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport AdminStaffIndividualProfile from \"./AdminStaffIndividualProfile\";\nimport AdminAddStaffMember from \"./AdminAddStaffMember\";\nimport AdminRenderUpcomingAppointments from \"../AdminClients/AdminRenderUpcomingAppointments\";\nimport AdminRenderPastAppointments from \"../AdminClients/AdminRenderPastAppointments\";\nimport moment from \"moment\";\nimport ACTION_SPLASH_SCREEN_COMPLETE from \"../../../actions/SplashScreenComplete/ACTION_SPLASH_SCREEN_COMPLETE\";\nimport ACTION_SPLASH_SCREEN_HALFWAY from \"../../../actions/SplashScreenHalfway/ACTION_SPLASH_SCREEN_HALFWAY\";\nimport ACTION_LOGIN_IS_NOT_ACTIVE from \"../../../actions/Login/ACTION_LOGIN_IS_NOT_ACTIVE\";\nimport ACTION_ADMIN_CLIENT_PROFILE_SELECTED from \"../../../actions/Admin/AdminLogin/AdminClientSectionSelected/ACTION_ADMIN_CLIENT_PROFILE_SELECTED.js\";\nimport ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET from \"../../../actions/Admin/AddProfilePhotoClicked/ACTION_ADD_PROFILE_CLICKED_RESET\";\nimport ACTION_LOADING_SPINNER_RESET from \"../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_RESET\";\nimport ACTION_LOADING_SPINNER_ACTIVE from \"../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_ACTIVE\";\nimport ACTION_IMAGE_LOADING from \"../../../actions/Admin/ImageLoading/ACTION_IMAGE_LOADING\";\nimport ACTION_IMAGE_LOADING_RESET from \"../../../actions/Admin/ImageLoading/ACTION_IMAGE_LOADING_RESET\";\nimport ACTION_ON_ACTIVITY_PAGE_RESET from \"../../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE_RESET\";\nimport \"./AdminStaff.css\";\nimport \"react-html5-camera-photo/build/css/index.css\";\n\nconst AdminStaff = props => {\n  const getEmployeeData = props.getEmployeeData,\n        getEmployeeError = props.getEmployeeError,\n        getEmployeesError = props.getEmployeesError,\n        getEmployeesRefetch = props.getEmployeesRefetch,\n        getEmployeesData = props.getEmployeesData,\n        getAllAppointmentsData = props.getAllAppointmentsData,\n        currentScreenSize = props.currentScreenSize,\n        initialScreenSize = props.initialScreenSize,\n        getClientsData = props.getClientsData,\n        getClientsLoading = props.getClientsLoading,\n        getAllAppointmentsRefetch = props.getAllAppointmentsRefetch,\n        employeeDataRefetch = props.employeeDataRefetch,\n        randomColorArray = props.randomColorArray,\n        resetNotifications = props.resetNotifications;\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const selectedEmployeeBackRef = useRef(null);\n  const backToClientsRef = useRef(null);\n  let individualEmployeeRef = useRef(null);\n  const splashScreenHalfway = useSelector(state => state.splashScreenHalfway.splashScreenHalfway);\n  const splashScreenComplete = useSelector(state => state.splashScreenComplete.splashScreenComplete);\n  const adminAuthenticated = useSelector(state => state.adminAuthenticated.admin_authenticated);\n  const logoutClicked = useSelector(state => state.logoutClicked.log_out_clicked);\n  const loginIsActive = useSelector(state => state.loginIsActive.login_is_active);\n  const adminClientSectionSelected = useSelector(state => state.adminClientSectionSelected.admin_client_section_selected);\n  const addProfilePhotoClicked = useSelector(state => state.addProfilePhotoClicked.add_profile_photo_clicked);\n  const loadingSpinnerActive = useSelector(state => state.loadingSpinnerActive.loading_spinner);\n  const imageLoading = useSelector(state => state.imageLoading.image_loading);\n  const cancelAppointmentClicked = useSelector(state => state.cancelAppointmentClicked.cancelAppointmentClicked);\n  const onActivityPage = useSelector(state => state.onActivityPage.on_activity_page);\n  const adminNotifications = useSelector(state => state.adminNotifications.notifications);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        filteredAllEmployees = _useState2[0],\n        changeFilteredAllEmployees = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        employeeFilter = _useState4[0],\n        changeEmployeeFilter = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        employeeToggled = _useState6[0],\n        changeEmployeeToggled = _useState6[1];\n\n  const _useState7 = useState(\"\"),\n        _useState8 = _slicedToArray(_useState7, 2),\n        employeeNameToggled = _useState8[0],\n        changeEmployeeNameToggled = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        addStaffMemberClicked = _useState10[0],\n        changeAddStaffMemberClicked = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        selectedEmployeeAppointments = _useState12[0],\n        changeSelectedEmployeeAppointments = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        selectedEmployeePastAppointments = _useState14[0],\n        changeSelectedEmployeePastAppointments = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        takeAPhotoSelected = _useState16[0],\n        changeTakeAPhotoSelected = _useState16[1];\n\n  const _useState17 = useState(\"\"),\n        _useState18 = _slicedToArray(_useState17, 2),\n        webcamURI = _useState18[0],\n        changeWebcamURI = _useState18[1];\n\n  const _useState19 = useState(\"\"),\n        _useState20 = _slicedToArray(_useState19, 2),\n        imageUploaded = _useState20[0],\n        changeImageUploaded = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        imagePreviewAvailable = _useState22[0],\n        changeImagePreviewAvailable = _useState22[1];\n\n  const _useState23 = useState(false),\n        _useState24 = _slicedToArray(_useState23, 2),\n        pdfLoading = _useState24[0],\n        changePDFLoading = _useState24[1];\n\n  const _useMutation = useMutation(updateAdminProfilePictureMutation),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        updateAdminProfilePicture = _useMutation2[0],\n        updateAdminProfilePictureData = _useMutation2[1].data;\n\n  const override = css(_templateObject());\n  useEffect(() => {\n    if (!splashScreenComplete) {\n      dispatch(ACTION_SPLASH_SCREEN_COMPLETE());\n    }\n\n    if (!splashScreenHalfway) {\n      dispatch(ACTION_SPLASH_SCREEN_HALFWAY());\n    }\n  }, [dispatch, splashScreenComplete, splashScreenHalfway]);\n\n  const redirectToAdminLogInPage = () => {\n    if (!adminAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const handleChangeEmployeeFilter = e => {\n    changeEmployeeFilter(e.currentTarget.value);\n  };\n\n  useEffect(() => {\n    if (onActivityPage) {\n      if (adminNotifications) {\n        if (adminNotifications.length > 0) {\n          if (adminNotifications.some(item => item.new)) {\n            resetNotifications();\n          }\n        }\n      }\n\n      dispatch(ACTION_ON_ACTIVITY_PAGE_RESET());\n    }\n  }, [onActivityPage, dispatch, resetNotifications, adminNotifications]);\n  useEffect(() => {\n    if (employeeToggled) {\n      if (getEmployeesData) {\n        if (getEmployeesData.employees.length > 0) {\n          const selectedEmployee = getEmployeesData.employees.filter(x => x._id === employeeToggled)[0];\n\n          if (!employeeNameToggled) {\n            changeEmployeeNameToggled(selectedEmployee.firstName + \" \" + selectedEmployee.lastName);\n          }\n        }\n      }\n    } else {\n      if (employeeNameToggled) {\n        changeEmployeeNameToggled(\"\");\n      }\n    }\n  }, [employeeToggled, employeeNameToggled, getEmployeesData]);\n  useEffect(() => {\n    if (employeeNameToggled) {\n      changeSelectedEmployeeAppointments({\n        own_appointments: getAllAppointmentsData.all_appointments.filter(x => x.esthetician === employeeNameToggled && moment(x.date + \" \" + x.startTime + \" \" + x.morningOrEvening, \"MMMM D, YYYY h:mm A\").isAfter(moment()))\n      });\n      changeSelectedEmployeePastAppointments({\n        own_past_appointments: getAllAppointmentsData.all_appointments.filter(x => x.esthetician === employeeNameToggled && moment(x.date + \" \" + x.startTime + \" \" + x.morningOrEvening, \"MMMM D, YYYY h:mm A\").isBefore(moment()))\n      });\n    } else {\n      changeSelectedEmployeeAppointments([]);\n    }\n  }, [employeeNameToggled, getAllAppointmentsData]);\n\n  const handleDeletedPreviewImage = () => {\n    const deleteImageClass = document.getElementsByClassName(\"deleteImage\");\n    const uploadPictureClass = document.getElementsByClassName(\"uploadPicture\");\n\n    if (deleteImageClass) {\n      if (deleteImageClass[0]) {\n        deleteImageClass[0].style.display = \"none\";\n      }\n    }\n\n    if (uploadPictureClass) {\n      if (uploadPictureClass[0]) {\n        uploadPictureClass[0].style.display = \"none\";\n      }\n    }\n  };\n\n  const handleImageUploaded = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(picture) {\n      var reader, compressedImage;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            dispatch(ACTION_IMAGE_LOADING());\n\n            if (!(picture[0] || typeof picture === \"string\")) {\n              _context3.next = 24;\n              break;\n            }\n\n            reader = new FileReader();\n            changeImagePreviewAvailable(true);\n            _context3.prev = 4;\n\n            if (!(typeof picture === \"object\")) {\n              _context3.next = 11;\n              break;\n            }\n\n            _context3.next = 8;\n            return imageCompression(picture[0], {\n              maxSizeMB: 0.3,\n              maxWidthOrHeight: 300\n            });\n\n          case 8:\n            compressedImage = _context3.sent;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            if (!(typeof picture === \"string\")) {\n              _context3.next = 14;\n              break;\n            }\n\n            _context3.next = 14;\n            return fetch(picture).then(res => {\n              return res.blob();\n            }).then( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(blob) {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return imageCompression(blob, {\n                        maxSizeMB: 0.3,\n                        maxWidthOrHeight: 300\n                      });\n\n                    case 2:\n                      compressedImage = _context.sent;\n\n                    case 3:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref2.apply(this, arguments);\n              };\n            }());\n\n          case 14:\n            reader.readAsDataURL(compressedImage);\n            reader.onloadend = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n              var base64data, compressedBase64data;\n              return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    base64data = reader.result;\n                    compressedBase64data = LZString.compressToEncodedURIComponent(base64data);\n                    dispatch(ACTION_IMAGE_LOADING_RESET());\n                    changeImageUploaded(compressedBase64data);\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            _context3.next = 22;\n            break;\n\n          case 18:\n            _context3.prev = 18;\n            _context3.t0 = _context3[\"catch\"](4);\n            dispatch(ACTION_IMAGE_LOADING_RESET());\n            console.log(_context3.t0);\n\n          case 22:\n            _context3.next = 28;\n            break;\n\n          case 24:\n            dispatch(ACTION_IMAGE_LOADING_RESET());\n            changeImageUploaded(\"\");\n            changeImagePreviewAvailable(false);\n            handleDeletedPreviewImage();\n\n          case 28:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3, null, [[4, 18]]);\n    }));\n\n    return function handleImageUploaded(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  const preventKeys = e => {\n    if (e.key === \")\" || e.key === \"(\" || e.key === \"[\" || e.key === \"]\" || e.key === \"\\\\\" || e.key === \"/\") {\n      e.preventDefault();\n    }\n  };\n\n  useMemo(() => {\n    if (getEmployeesData) {\n      if (getEmployeesData.employees.length > 0) {\n        if (changeEmployeeFilter) {\n          changeFilteredAllEmployees([...getEmployeesData.employees].filter(x => {\n            return new RegExp(employeeFilter, \"gi\").test(x.firstName + \" \" + x.lastName) || new RegExp(employeeFilter, \"gi\").test(x.email) || new RegExp(employeeFilter, \"gi\").test(x.phoneNumber) || new RegExp(employeeFilter, \"gi\").test(x.phoneNumber.split(/[\\W_]+/g).join(\"\"));\n          }));\n        }\n      }\n    }\n  }, [employeeFilter, getEmployeesData]); // Allows click only if selected employee modal is not active\n\n  const handleEmployeeToggled = (e, item) => {\n    if (e.currentTarget && individualEmployeeRef) {\n      if (individualEmployeeRef.current) {\n        if (individualEmployeeRef.current.className === e.currentTarget.className) {\n          if (selectedEmployeeBackRef) {\n            if (!selectedEmployeeBackRef.current) {\n              if (item) {\n                if (item._id) {\n                  changeEmployeeToggled(item._id);\n                }\n              }\n            }\n          }\n        }\n      } else {\n        if (e.currentTarget.innerText.includes(item.firstName[0].toUpperCase() + item.firstName.slice(1).toLowerCase()) && e.currentTarget.innerText.includes(item.lastName[0].toUpperCase() + item.lastName.slice(1).toLowerCase())) {\n          if (selectedEmployeeBackRef) {\n            if (!selectedEmployeeBackRef.current) {\n              if (item) {\n                if (item._id) {\n                  changeEmployeeToggled(item._id);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }; // Function for back arrow click to reset selected toggled employee\n\n\n  const handleEmployeeUntoggled = e => {\n    if (e.currentTarget && selectedEmployeeBackRef || e.currentTarget && backToClientsRef) {\n      if (selectedEmployeeBackRef.current || backToClientsRef.current) {\n        if (selectedEmployeeBackRef.current.className === e.currentTarget.className || backToClientsRef.current.className === e.currentTarget.className) {\n          changeEmployeeToggled(\"\");\n\n          if (pdfLoading) {\n            changePDFLoading(false);\n          }\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (location.pathname || addProfilePhotoClicked || loadingSpinnerActive) {\n      window.scrollTo(0, 0);\n    }\n  }, [location.pathname, addProfilePhotoClicked, loadingSpinnerActive]); // When account screen unmounts, allow navbar\n\n  useEffect(() => {\n    if (loginIsActive) {\n      dispatch(ACTION_LOGIN_IS_NOT_ACTIVE());\n    }\n  }, [dispatch, loginIsActive]);\n\n  const handleConfirmPhotoSubmit = () => {\n    updateAdminProfilePicture({\n      variables: {\n        id: employeeToggled,\n        profilePicture: imageUploaded\n      }\n    });\n    dispatch(ACTION_IMAGE_LOADING());\n    changeImageUploaded(\"\");\n    dispatch(ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET());\n    changeImagePreviewAvailable(false);\n    changeTakeAPhotoSelected(false);\n    changeWebcamURI(\"\");\n  };\n\n  const handleProfilePictureRender = item => {\n    if (item.profilePicture) {\n      return /*#__PURE__*/React.createElement(\"img\", {\n        className: \"admin_individual_client_picture_profile_avatar\",\n        src: LZString.decompressFromEncodedURIComponent(item.profilePicture),\n        alt: item.firstName[0].toUpperCase() + item.firstName.slice(1).toLowerCase() + \" \" + item.lastName[0].toUpperCase() + item.lastName.slice(1).toLowerCase() + \" Profile Picture\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 9\n        }\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"admin_individual_client_initials_profile_avatar\",\n        style: {\n          background: randomColorArray[getEmployeesData.employees.sort((a, b) => a.firstName.localeCompare(b.firstName)).map(x => x.email).indexOf(item.email)]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }\n      }, item.firstName[0].toUpperCase() + item.lastName[0].toUpperCase()));\n    }\n  };\n\n  useEffect(() => {\n    if (updateAdminProfilePictureData) {\n      const imageDataReceived = setTimeout(() => {\n        if (imageLoading) {\n          dispatch(ACTION_IMAGE_LOADING_RESET());\n        }\n      }, 500);\n      getEmployeesRefetch();\n      employeeDataRefetch();\n      return () => {\n        clearTimeout(imageDataReceived);\n      };\n    }\n  }, [imageLoading, updateAdminProfilePictureData, dispatch, getEmployeesRefetch, employeeDataRefetch]);\n\n  const renderBarInContactInfo = () => {\n    if (!currentScreenSize) {\n      if (initialScreenSize >= 1200) {\n        return null;\n      } else {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"rgb(200, 200, 200)\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 16\n          }\n        }, \"|\");\n      }\n    } else {\n      if (currentScreenSize >= 1200) {\n        return null;\n      } else {\n        return /*#__PURE__*/React.createElement(\"p\", {\n          style: {\n            color: \"rgb(200, 200, 200)\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 16\n          }\n        }, \"|\");\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (getClientsLoading) {\n      dispatch(ACTION_LOADING_SPINNER_ACTIVE());\n    } else {\n      dispatch(ACTION_LOADING_SPINNER_RESET());\n    }\n  }, [dispatch, getClientsLoading]);\n  useEffect(() => {\n    if (getEmployeeError) {\n      employeeDataRefetch();\n    }\n  }, [getEmployeeError, employeeDataRefetch]);\n  useEffect(() => {\n    if (getEmployeesError) {\n      getEmployeesRefetch();\n    }\n  }, [getEmployeesError, getEmployeesRefetch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_clients_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 5\n    }\n  }, redirectToAdminLogInPage(), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: imageLoading || loadingSpinnerActive || getClientsLoading,\n    style: {\n      content: {\n        position: \"fixed\",\n        zIndex: \"10000\",\n        height: \"100%\",\n        backdropFilter: \"blur(5px)\",\n        WebkitBackdropFilter: \"blur(5px)\",\n        paddingBottom: \"10%\",\n        borderRadius: \"none\",\n        width: \"100vw\",\n        top: \"0\",\n        left: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        border: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"rgba(0, 0, 0, 0.5)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(BounceLoader, {\n    size: 100,\n    css: override,\n    color: \"rgb(44, 44, 52)\",\n    loading: imageLoading || loadingSpinnerActive || getClientsLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 534,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_clients_header\",\n    style: {\n      zIndex: logoutClicked || addProfilePhotoClicked || loadingSpinnerActive || imageLoading || cancelAppointmentClicked || getClientsLoading ? 0 : 5,\n      filter: cancelAppointmentClicked || getClientsLoading ? \"blur(5px)\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 541,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"admin_clients_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 565,\n      columnNumber: 9\n    }\n  }, \"STAFF\")), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_clients_searchbar_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"admin_clients_searchbar_input_field\",\n    placeholder: \"Filter by staff member's name or phone\",\n    onChange: handleChangeEmployeeFilter,\n    maxLength: 128,\n    onKeyDown: preventKeys,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 569,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"admin_clients_searchbar_icon\",\n    icon: faSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_clients_content_container\",\n    style: {\n      height: \"55vh\",\n      overflow: \"scroll\",\n      marginTop: \"2vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 582,\n      columnNumber: 7\n    }\n  }, getEmployeesData ? getEmployeesData.employees.length > 0 ? filteredAllEmployees.sort((a, b) => a.firstName.localeCompare(b.firstName)).map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_container\",\n      key: i,\n      onClick: e => {\n        if (addStaffMemberClicked) {\n          return null;\n        } else {\n          handleEmployeeToggled(e, item);\n        }\n      },\n      ref: individualEmployeeRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 592,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: addProfilePhotoClicked && employeeToggled === item._id,\n      className: \"admin_individual_client_add_photo_modal\",\n      style: {\n        content: {\n          position: \"fixed\",\n          zIndex: 10000,\n          opacity: 0.99,\n          height: \"100%\",\n          backdropFilter: \"blur(5px)\",\n          WebkitBackdropFilter: \"blur(5px)\",\n          paddingBottom: \"10%\",\n          borderRadius: \"none\",\n          width: \"100vw\",\n          top: \"0\",\n          left: \"0\",\n          right: \"0\",\n          bottom: \"0\",\n          border: \"none\",\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          background: \"rgba(0, 0, 0, 0.5)\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Transition, {\n      items: addProfilePhotoClicked,\n      from: {\n        transform: \"translate3d(0, -65%, 0)\"\n      },\n      enter: {\n        transform: \"translate3d(0, 0, 0)\"\n      },\n      leave: {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 633,\n        columnNumber: 25\n      }\n    }, addProfilePhotoClicked => addProfilePhotoClicked && (styleprops => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_add_photo_modal_content_container\",\n      style: styleprops,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 642,\n        columnNumber: 31\n      }\n    }, takeAPhotoSelected && !imagePreviewAvailable ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Camera, {\n      isSilentMode: true,\n      onTakePhotoAnimationDone: dataUri => {\n        handleImageUploaded(dataUri);\n        changeWebcamURI(dataUri);\n      },\n      imageType: IMAGE_TYPES.JPG,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_add_photo_modal_contents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 657,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"modal_x\",\n      icon: faTimes,\n      onClick: () => {\n        dispatch(ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET());\n        changeTakeAPhotoSelected(false);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 39\n      }\n    }))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_add_photo_modal_contents\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"modal_x\",\n      icon: faTimes,\n      onClick: () => {\n        dispatch(ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET());\n        changeTakeAPhotoSelected(false);\n        changeImageUploaded(\"\");\n        changeImagePreviewAvailable(false);\n        changeWebcamURI(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 672,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 685,\n        columnNumber: 37\n      }\n    }, \"Update employee profile picture\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"admin_individual_client_add_photo_modal_buttons_container\",\n      style: {\n        top: imageUploaded || imagePreviewAvailable ? \"35%\" : \"45%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(ImageUploader, {\n      withIcon: imageUploaded || imagePreviewAvailable ? false : true,\n      withLabel: false,\n      buttonStyles: {\n        display: imageUploaded || imagePreviewAvailable ? \"none\" : \"block\"\n      },\n      buttonText: \"Choose image\",\n      imgExtension: [\".jpg\", \".png\", \".jpeg\"],\n      maxFileSize: 5242880,\n      onChange: handleImageUploaded,\n      singleImage: true,\n      withPreview: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 39\n      }\n    }), (imageUploaded || imagePreviewAvailable) && takeAPhotoSelected ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fileContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 719,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"uploadPictureContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"deleteImage\",\n      onClick: () => {\n        changeWebcamURI(\"\");\n        changeImagePreviewAvailable(false);\n        dispatch(ACTION_IMAGE_LOADING_RESET());\n        changeImagePreviewAvailable(false);\n        changeTakeAPhotoSelected(false);\n        changeImageUploaded(\"\");\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 45\n      }\n    }, \"X\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: webcamURI,\n      className: \"uploadPicture\",\n      alt: \"preview\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 45\n      }\n    }))) : null, imageUploaded || imagePreviewAvailable ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_confirm_photo_button\",\n      onClick: handleConfirmPhotoSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 43\n      }\n    }, \"Confirm photo\")) : null, initialScreenSize >= 1200 && !imageUploaded && !imagePreviewAvailable || currentScreenSize >= 1200 && !imageUploaded && !imagePreviewAvailable ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        display: !currentScreenSize ? initialScreenSize >= 1200 ? \"block\" : \"none\" : currentScreenSize >= 1200 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 764,\n        columnNumber: 43\n      }\n    }, \"OR\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_take_a_photo_button\",\n      onClick: () => changeTakeAPhotoSelected(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 777,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 783,\n        columnNumber: 45\n      }\n    }, \"Take a photo\")), \" \") : null)))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_initials_square\",\n      style: {\n        background: randomColorArray ? randomColorArray[getEmployeesData.employees.sort((a, b) => a.firstName.localeCompare(b.firstName)).map(x => x.email).indexOf(item.email)] : \"rgb(0, 0, 0)\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 810,\n        columnNumber: 25\n      }\n    }, item.firstName[0].toUpperCase() + item.lastName[0].toUpperCase())), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_full_name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 815,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 25\n      }\n    }, item.firstName[0].toUpperCase() + item.firstName.slice(1).toLowerCase() + \" \" + item.lastName[0].toUpperCase() + item.lastName.slice(1).toLowerCase()), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 25\n      }\n    }, item.employeeRole.length > 0 ? item.employeeRole.join(\", \") : null), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 25\n      }\n    }, item.phoneNumber ? item.phoneNumber : null)), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"admin_individual_client_spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      style: {\n        zIndex: employeeToggled ? logoutClicked || addProfilePhotoClicked || loadingSpinnerActive || imageLoading || cancelAppointmentClicked ? -1 : 0 : loadingSpinnerActive ? -1 : logoutClicked || addProfilePhotoClicked || imageLoading || cancelAppointmentClicked ? 0 : 5,\n        transitionDelay: logoutClicked || loadingSpinnerActive ? \"initial\" : !employeeToggled ? \"0.5s\" : \"initial\"\n      },\n      icon: faEllipsisH,\n      className: \"admin_individual_client_expand_icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 23\n      }\n    }), addStaffMemberClicked ? /*#__PURE__*/React.createElement(AdminAddStaffMember, {\n      handleProfilePictureRender: handleProfilePictureRender,\n      renderBarInContactInfo: renderBarInContactInfo,\n      getClientsData: getClientsData,\n      getEmployeesRefetch: getEmployeesRefetch,\n      addStaffMemberClicked: addStaffMemberClicked,\n      changeAddStaffMemberClicked: changeAddStaffMemberClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 860,\n        columnNumber: 25\n      }\n    }) : null, /*#__PURE__*/React.createElement(Transition, {\n      items: employeeToggled,\n      from: {\n        transform: \"translateX(-100%)\"\n      },\n      enter: {\n        transform: \"translateX(0%)\"\n      },\n      leave: {\n        transform: \"translateX(-100%)\"\n      },\n      config: {\n        duration: 200\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 23\n      }\n    }, employeeToggled => employeeToggled === item._id && (styleprops => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_selected_client_container\",\n      style: _objectSpread(_objectSpread({}, styleprops), {\n        zIndex: logoutClicked || addProfilePhotoClicked || loadingSpinnerActive || imageLoading || cancelAppointmentClicked ? 0 : 1\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_selected_client_contents_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 899,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_selected_client_back_container\",\n      ref: selectedEmployeeBackRef,\n      onClick: e => {\n        adminClientSectionSelected === \"\" ? handleEmployeeUntoggled(e) : dispatch(ACTION_ADMIN_CLIENT_PROFILE_SELECTED());\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 900,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faLongArrowAltLeft,\n      className: \"admin_individual_selected_client_back_arrow_icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 35\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 35\n      }\n    }, adminClientSectionSelected === \"\" ? \"Back to all staff\" : \"Back to \" + item.firstName[0].toUpperCase() + item.firstName.slice(1).toLowerCase() + \" \" + item.lastName[0].toUpperCase() + item.lastName.slice(1).toLowerCase() + \"'s Profile\")), adminClientSectionSelected === \"\" ? /*#__PURE__*/React.createElement(AdminStaffIndividualProfile, {\n      item: item,\n      employeeToggled: employeeToggled,\n      changeEmployeeToggled: changeEmployeeToggled,\n      handleProfilePictureRender: handleProfilePictureRender,\n      renderBarInContactInfo: renderBarInContactInfo,\n      getEmployeesData: getEmployeesData,\n      getEmployeesRefetch: getEmployeesRefetch,\n      getEmployeeData: getEmployeeData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 928,\n        columnNumber: 35\n      }\n    }) : null, adminClientSectionSelected === \"UpcomingAppointments\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_side_my_appointments_content_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(AdminRenderUpcomingAppointments, {\n      data: selectedEmployeeAppointments,\n      getAllAppointmentsRefetch: getAllAppointmentsRefetch,\n      item: item,\n      override: override,\n      loadingSpinnerActive: loadingSpinnerActive,\n      currentScreenSize: currentScreenSize,\n      initialScreenSize: initialScreenSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 37\n      }\n    })) : adminClientSectionSelected === \"PastAppointments\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_side_my_appointments_content_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 964,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(AdminRenderPastAppointments, {\n      data: selectedEmployeePastAppointments,\n      item: item,\n      currentScreenSize: currentScreenSize,\n      initialScreenSize: initialScreenSize,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 37\n      }\n    })) : null)))));\n  }) : null : null, getEmployeeData ? getEmployeeData.employee ? getEmployeeData.employee.employeeRole.includes(\"Admin\") ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_staff_member_button_container\",\n    style: {\n      zIndex: employeeToggled ? logoutClicked || addProfilePhotoClicked || loadingSpinnerActive || imageLoading || cancelAppointmentClicked || addStaffMemberClicked || employeeToggled ? -1 : 0 : addStaffMemberClicked ? -1 : logoutClicked || addProfilePhotoClicked || loadingSpinnerActive || imageLoading || cancelAppointmentClicked || addStaffMemberClicked ? 0 : 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 986,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"add_staff_member_button\",\n    onClick: () => changeAddStaffMemberClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1011,\n      columnNumber: 17\n    }\n  }, \"Add Staff Member\")) : null : null : null));\n};\n\nexport default AdminStaff;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminStaff/AdminStaff.js"],"names":["React","useEffect","useState","useMemo","useRef","FontAwesomeIcon","faChevronLeft","faSearch","faEllipsisH","faLongArrowAltLeft","faTimes","useSelector","useDispatch","Redirect","Link","useLocation","FormGroup","Input","Modal","Transition","imageCompression","ImageUploader","Camera","IMAGE_TYPES","useMutation","updateAdminProfilePictureMutation","LZString","css","BounceLoader","AdminStaffIndividualProfile","AdminAddStaffMember","AdminRenderUpcomingAppointments","AdminRenderPastAppointments","moment","ACTION_SPLASH_SCREEN_COMPLETE","ACTION_SPLASH_SCREEN_HALFWAY","ACTION_LOGIN_IS_NOT_ACTIVE","ACTION_ADMIN_CLIENT_PROFILE_SELECTED","ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET","ACTION_LOADING_SPINNER_RESET","ACTION_LOADING_SPINNER_ACTIVE","ACTION_IMAGE_LOADING","ACTION_IMAGE_LOADING_RESET","ACTION_ON_ACTIVITY_PAGE_RESET","AdminStaff","props","getEmployeeData","getEmployeeError","getEmployeesError","getEmployeesRefetch","getEmployeesData","getAllAppointmentsData","currentScreenSize","initialScreenSize","getClientsData","getClientsLoading","getAllAppointmentsRefetch","employeeDataRefetch","randomColorArray","resetNotifications","dispatch","location","selectedEmployeeBackRef","backToClientsRef","individualEmployeeRef","splashScreenHalfway","state","splashScreenComplete","adminAuthenticated","admin_authenticated","logoutClicked","log_out_clicked","loginIsActive","login_is_active","adminClientSectionSelected","admin_client_section_selected","addProfilePhotoClicked","add_profile_photo_clicked","loadingSpinnerActive","loading_spinner","imageLoading","image_loading","cancelAppointmentClicked","onActivityPage","on_activity_page","adminNotifications","notifications","filteredAllEmployees","changeFilteredAllEmployees","employeeFilter","changeEmployeeFilter","employeeToggled","changeEmployeeToggled","employeeNameToggled","changeEmployeeNameToggled","addStaffMemberClicked","changeAddStaffMemberClicked","selectedEmployeeAppointments","changeSelectedEmployeeAppointments","selectedEmployeePastAppointments","changeSelectedEmployeePastAppointments","takeAPhotoSelected","changeTakeAPhotoSelected","webcamURI","changeWebcamURI","imageUploaded","changeImageUploaded","imagePreviewAvailable","changeImagePreviewAvailable","pdfLoading","changePDFLoading","updateAdminProfilePicture","updateAdminProfilePictureData","data","override","redirectToAdminLogInPage","handleChangeEmployeeFilter","e","currentTarget","value","length","some","item","new","employees","selectedEmployee","filter","x","_id","firstName","lastName","own_appointments","all_appointments","esthetician","date","startTime","morningOrEvening","isAfter","own_past_appointments","isBefore","handleDeletedPreviewImage","deleteImageClass","document","getElementsByClassName","uploadPictureClass","style","display","handleImageUploaded","picture","reader","FileReader","maxSizeMB","maxWidthOrHeight","compressedImage","fetch","then","res","blob","readAsDataURL","onloadend","base64data","result","compressedBase64data","compressToEncodedURIComponent","console","log","preventKeys","key","preventDefault","RegExp","test","email","phoneNumber","split","join","handleEmployeeToggled","current","className","innerText","includes","toUpperCase","slice","toLowerCase","handleEmployeeUntoggled","pathname","window","scrollTo","handleConfirmPhotoSubmit","variables","id","profilePicture","handleProfilePictureRender","decompressFromEncodedURIComponent","background","sort","a","b","localeCompare","map","indexOf","imageDataReceived","setTimeout","clearTimeout","renderBarInContactInfo","color","content","position","zIndex","height","backdropFilter","WebkitBackdropFilter","paddingBottom","borderRadius","width","top","left","right","bottom","border","flexDirection","alignItems","justifyContent","overflow","marginTop","i","opacity","transform","styleprops","dataUri","JPG","employeeRole","transitionDelay","duration","employee"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useMemo, useRef } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faSearch,\r\n  faEllipsisH,\r\n  faLongArrowAltLeft,\r\n  faTimes,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Redirect, Link, useLocation } from \"react-router-dom\";\r\nimport { FormGroup, Input } from \"reactstrap\";\r\nimport Modal from \"react-modal\";\r\nimport { Transition } from \"react-spring/renderprops\";\r\nimport imageCompression from \"browser-image-compression\";\r\nimport ImageUploader from \"react-images-upload\";\r\nimport Camera, { IMAGE_TYPES } from \"react-html5-camera-photo\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport updateAdminProfilePictureMutation from \"../../../graphql/mutations/updateAdminProfilePictureMutation\";\r\nimport LZString from \"lz-string\";\r\nimport { css } from \"@emotion/css\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport AdminStaffIndividualProfile from \"./AdminStaffIndividualProfile\";\r\nimport AdminAddStaffMember from \"./AdminAddStaffMember\";\r\nimport AdminRenderUpcomingAppointments from \"../AdminClients/AdminRenderUpcomingAppointments\";\r\nimport AdminRenderPastAppointments from \"../AdminClients/AdminRenderPastAppointments\";\r\nimport moment from \"moment\";\r\nimport ACTION_SPLASH_SCREEN_COMPLETE from \"../../../actions/SplashScreenComplete/ACTION_SPLASH_SCREEN_COMPLETE\";\r\nimport ACTION_SPLASH_SCREEN_HALFWAY from \"../../../actions/SplashScreenHalfway/ACTION_SPLASH_SCREEN_HALFWAY\";\r\nimport ACTION_LOGIN_IS_NOT_ACTIVE from \"../../../actions/Login/ACTION_LOGIN_IS_NOT_ACTIVE\";\r\nimport ACTION_ADMIN_CLIENT_PROFILE_SELECTED from \"../../../actions/Admin/AdminLogin/AdminClientSectionSelected/ACTION_ADMIN_CLIENT_PROFILE_SELECTED.js\";\r\nimport ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET from \"../../../actions/Admin/AddProfilePhotoClicked/ACTION_ADD_PROFILE_CLICKED_RESET\";\r\nimport ACTION_LOADING_SPINNER_RESET from \"../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_RESET\";\r\nimport ACTION_LOADING_SPINNER_ACTIVE from \"../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_ACTIVE\";\r\nimport ACTION_IMAGE_LOADING from \"../../../actions/Admin/ImageLoading/ACTION_IMAGE_LOADING\";\r\nimport ACTION_IMAGE_LOADING_RESET from \"../../../actions/Admin/ImageLoading/ACTION_IMAGE_LOADING_RESET\";\r\nimport ACTION_ON_ACTIVITY_PAGE_RESET from \"../../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE_RESET\";\r\nimport \"./AdminStaff.css\";\r\nimport \"react-html5-camera-photo/build/css/index.css\";\r\n\r\nconst AdminStaff = (props) => {\r\n  const {\r\n    getEmployeeData,\r\n    getEmployeeError,\r\n    getEmployeesError,\r\n    getEmployeesRefetch,\r\n    getEmployeesData,\r\n    getAllAppointmentsData,\r\n    currentScreenSize,\r\n    initialScreenSize,\r\n    getClientsData,\r\n    getClientsLoading,\r\n    getAllAppointmentsRefetch,\r\n    employeeDataRefetch,\r\n    randomColorArray,\r\n    resetNotifications,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const selectedEmployeeBackRef = useRef(null);\r\n  const backToClientsRef = useRef(null);\r\n  let individualEmployeeRef = useRef(null);\r\n\r\n  const splashScreenHalfway = useSelector(\r\n    (state) => state.splashScreenHalfway.splashScreenHalfway\r\n  );\r\n  const splashScreenComplete = useSelector(\r\n    (state) => state.splashScreenComplete.splashScreenComplete\r\n  );\r\n  const adminAuthenticated = useSelector(\r\n    (state) => state.adminAuthenticated.admin_authenticated\r\n  );\r\n  const logoutClicked = useSelector(\r\n    (state) => state.logoutClicked.log_out_clicked\r\n  );\r\n  const loginIsActive = useSelector(\r\n    (state) => state.loginIsActive.login_is_active\r\n  );\r\n  const adminClientSectionSelected = useSelector(\r\n    (state) => state.adminClientSectionSelected.admin_client_section_selected\r\n  );\r\n  const addProfilePhotoClicked = useSelector(\r\n    (state) => state.addProfilePhotoClicked.add_profile_photo_clicked\r\n  );\r\n  const loadingSpinnerActive = useSelector(\r\n    (state) => state.loadingSpinnerActive.loading_spinner\r\n  );\r\n  const imageLoading = useSelector((state) => state.imageLoading.image_loading);\r\n  const cancelAppointmentClicked = useSelector(\r\n    (state) => state.cancelAppointmentClicked.cancelAppointmentClicked\r\n  );\r\n  const onActivityPage = useSelector(\r\n    (state) => state.onActivityPage.on_activity_page\r\n  );\r\n  const adminNotifications = useSelector(\r\n    (state) => state.adminNotifications.notifications\r\n  );\r\n\r\n  const [filteredAllEmployees, changeFilteredAllEmployees] = useState([]);\r\n  const [employeeFilter, changeEmployeeFilter] = useState(\"\");\r\n  const [employeeToggled, changeEmployeeToggled] = useState(\"\");\r\n  const [employeeNameToggled, changeEmployeeNameToggled] = useState(\"\");\r\n  const [addStaffMemberClicked, changeAddStaffMemberClicked] = useState(false);\r\n  const [\r\n    selectedEmployeeAppointments,\r\n    changeSelectedEmployeeAppointments,\r\n  ] = useState([]);\r\n  const [\r\n    selectedEmployeePastAppointments,\r\n    changeSelectedEmployeePastAppointments,\r\n  ] = useState([]);\r\n\r\n  const [takeAPhotoSelected, changeTakeAPhotoSelected] = useState(false);\r\n  const [webcamURI, changeWebcamURI] = useState(\"\");\r\n  const [imageUploaded, changeImageUploaded] = useState(\"\");\r\n  const [imagePreviewAvailable, changeImagePreviewAvailable] = useState(false);\r\n  const [pdfLoading, changePDFLoading] = useState(false);\r\n\r\n  const [\r\n    updateAdminProfilePicture,\r\n    { data: updateAdminProfilePictureData },\r\n  ] = useMutation(updateAdminProfilePictureMutation);\r\n\r\n  const override = css`\r\n    display: block;\r\n    position: absolute;\r\n    left: 25%;\r\n    right: 25%;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (!splashScreenComplete) {\r\n      dispatch(ACTION_SPLASH_SCREEN_COMPLETE());\r\n    }\r\n    if (!splashScreenHalfway) {\r\n      dispatch(ACTION_SPLASH_SCREEN_HALFWAY());\r\n    }\r\n  }, [dispatch, splashScreenComplete, splashScreenHalfway]);\r\n\r\n  const redirectToAdminLogInPage = () => {\r\n    if (!adminAuthenticated) {\r\n      return <Redirect to=\"/admin\" />;\r\n    }\r\n  };\r\n\r\n  const handleChangeEmployeeFilter = (e) => {\r\n    changeEmployeeFilter(e.currentTarget.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (onActivityPage) {\r\n      if (adminNotifications) {\r\n        if (adminNotifications.length > 0) {\r\n          if (adminNotifications.some((item) => item.new)) {\r\n            resetNotifications();\r\n          }\r\n        }\r\n      }\r\n      dispatch(ACTION_ON_ACTIVITY_PAGE_RESET());\r\n    }\r\n  }, [onActivityPage, dispatch, resetNotifications, adminNotifications]);\r\n\r\n  useEffect(() => {\r\n    if (employeeToggled) {\r\n      if (getEmployeesData) {\r\n        if (getEmployeesData.employees.length > 0) {\r\n          const selectedEmployee = getEmployeesData.employees.filter(\r\n            (x) => x._id === employeeToggled\r\n          )[0];\r\n\r\n          if (!employeeNameToggled) {\r\n            changeEmployeeNameToggled(\r\n              selectedEmployee.firstName + \" \" + selectedEmployee.lastName\r\n            );\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      if (employeeNameToggled) {\r\n        changeEmployeeNameToggled(\"\");\r\n      }\r\n    }\r\n  }, [employeeToggled, employeeNameToggled, getEmployeesData]);\r\n\r\n  useEffect(() => {\r\n    if (employeeNameToggled) {\r\n      changeSelectedEmployeeAppointments({\r\n        own_appointments: getAllAppointmentsData.all_appointments.filter(\r\n          (x) =>\r\n            x.esthetician === employeeNameToggled &&\r\n            moment(\r\n              x.date + \" \" + x.startTime + \" \" + x.morningOrEvening,\r\n              \"MMMM D, YYYY h:mm A\"\r\n            ).isAfter(moment())\r\n        ),\r\n      });\r\n\r\n      changeSelectedEmployeePastAppointments({\r\n        own_past_appointments: getAllAppointmentsData.all_appointments.filter(\r\n          (x) =>\r\n            x.esthetician === employeeNameToggled &&\r\n            moment(\r\n              x.date + \" \" + x.startTime + \" \" + x.morningOrEvening,\r\n              \"MMMM D, YYYY h:mm A\"\r\n            ).isBefore(moment())\r\n        ),\r\n      });\r\n    } else {\r\n      changeSelectedEmployeeAppointments([]);\r\n    }\r\n  }, [employeeNameToggled, getAllAppointmentsData]);\r\n\r\n  const handleDeletedPreviewImage = () => {\r\n    const deleteImageClass = document.getElementsByClassName(\"deleteImage\");\r\n    const uploadPictureClass = document.getElementsByClassName(\"uploadPicture\");\r\n\r\n    if (deleteImageClass) {\r\n      if (deleteImageClass[0]) {\r\n        deleteImageClass[0].style.display = \"none\";\r\n      }\r\n    }\r\n    if (uploadPictureClass) {\r\n      if (uploadPictureClass[0]) {\r\n        uploadPictureClass[0].style.display = \"none\";\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleImageUploaded = async (picture) => {\r\n    dispatch(ACTION_IMAGE_LOADING());\r\n    if (picture[0] || typeof picture === \"string\") {\r\n      const reader = new FileReader();\r\n      changeImagePreviewAvailable(true);\r\n      try {\r\n        let compressedImage;\r\n\r\n        if (typeof picture === \"object\") {\r\n          compressedImage = await imageCompression(picture[0], {\r\n            maxSizeMB: 0.3,\r\n            maxWidthOrHeight: 300,\r\n          });\r\n        } else if (typeof picture === \"string\") {\r\n          await fetch(picture)\r\n            .then((res) => {\r\n              return res.blob();\r\n            })\r\n            .then(async (blob) => {\r\n              compressedImage = await imageCompression(blob, {\r\n                maxSizeMB: 0.3,\r\n                maxWidthOrHeight: 300,\r\n              });\r\n            });\r\n        }\r\n\r\n        reader.readAsDataURL(compressedImage);\r\n\r\n        reader.onloadend = async () => {\r\n          const base64data = reader.result;\r\n\r\n          const compressedBase64data = LZString.compressToEncodedURIComponent(\r\n            base64data\r\n          );\r\n          dispatch(ACTION_IMAGE_LOADING_RESET());\r\n          changeImageUploaded(compressedBase64data);\r\n        };\r\n      } catch (error) {\r\n        dispatch(ACTION_IMAGE_LOADING_RESET());\r\n        console.log(error);\r\n      }\r\n    } else {\r\n      dispatch(ACTION_IMAGE_LOADING_RESET());\r\n      changeImageUploaded(\"\");\r\n      changeImagePreviewAvailable(false);\r\n      handleDeletedPreviewImage();\r\n    }\r\n  };\r\n\r\n  const preventKeys = (e) => {\r\n    if (\r\n      e.key === \")\" ||\r\n      e.key === \"(\" ||\r\n      e.key === \"[\" ||\r\n      e.key === \"]\" ||\r\n      e.key === \"\\\\\" ||\r\n      e.key === \"/\"\r\n    ) {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  useMemo(() => {\r\n    if (getEmployeesData) {\r\n      if (getEmployeesData.employees.length > 0) {\r\n        if (changeEmployeeFilter) {\r\n          changeFilteredAllEmployees(\r\n            [...getEmployeesData.employees].filter((x) => {\r\n              return (\r\n                new RegExp(employeeFilter, \"gi\").test(\r\n                  x.firstName + \" \" + x.lastName\r\n                ) ||\r\n                new RegExp(employeeFilter, \"gi\").test(x.email) ||\r\n                new RegExp(employeeFilter, \"gi\").test(x.phoneNumber) ||\r\n                new RegExp(employeeFilter, \"gi\").test(\r\n                  x.phoneNumber.split(/[\\W_]+/g).join(\"\")\r\n                )\r\n              );\r\n            })\r\n          );\r\n        }\r\n      }\r\n    }\r\n  }, [employeeFilter, getEmployeesData]);\r\n\r\n  // Allows click only if selected employee modal is not active\r\n\r\n  const handleEmployeeToggled = (e, item) => {\r\n    if (e.currentTarget && individualEmployeeRef) {\r\n      if (individualEmployeeRef.current) {\r\n        if (\r\n          individualEmployeeRef.current.className === e.currentTarget.className\r\n        ) {\r\n          if (selectedEmployeeBackRef) {\r\n            if (!selectedEmployeeBackRef.current) {\r\n              if (item) {\r\n                if (item._id) {\r\n                  changeEmployeeToggled(item._id);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        if (\r\n          e.currentTarget.innerText.includes(\r\n            item.firstName[0].toUpperCase() +\r\n              item.firstName.slice(1).toLowerCase()\r\n          ) &&\r\n          e.currentTarget.innerText.includes(\r\n            item.lastName[0].toUpperCase() +\r\n              item.lastName.slice(1).toLowerCase()\r\n          )\r\n        ) {\r\n          if (selectedEmployeeBackRef) {\r\n            if (!selectedEmployeeBackRef.current) {\r\n              if (item) {\r\n                if (item._id) {\r\n                  changeEmployeeToggled(item._id);\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  // Function for back arrow click to reset selected toggled employee\r\n\r\n  const handleEmployeeUntoggled = (e) => {\r\n    if (\r\n      (e.currentTarget && selectedEmployeeBackRef) ||\r\n      (e.currentTarget && backToClientsRef)\r\n    ) {\r\n      if (selectedEmployeeBackRef.current || backToClientsRef.current) {\r\n        if (\r\n          selectedEmployeeBackRef.current.className ===\r\n            e.currentTarget.className ||\r\n          backToClientsRef.current.className === e.currentTarget.className\r\n        ) {\r\n          changeEmployeeToggled(\"\");\r\n\r\n          if (pdfLoading) {\r\n            changePDFLoading(false);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (location.pathname || addProfilePhotoClicked || loadingSpinnerActive) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n  }, [location.pathname, addProfilePhotoClicked, loadingSpinnerActive]);\r\n\r\n  // When account screen unmounts, allow navbar\r\n  useEffect(() => {\r\n    if (loginIsActive) {\r\n      dispatch(ACTION_LOGIN_IS_NOT_ACTIVE());\r\n    }\r\n  }, [dispatch, loginIsActive]);\r\n\r\n  const handleConfirmPhotoSubmit = () => {\r\n    updateAdminProfilePicture({\r\n      variables: {\r\n        id: employeeToggled,\r\n        profilePicture: imageUploaded,\r\n      },\r\n    });\r\n\r\n    dispatch(ACTION_IMAGE_LOADING());\r\n    changeImageUploaded(\"\");\r\n    dispatch(ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET());\r\n    changeImagePreviewAvailable(false);\r\n    changeTakeAPhotoSelected(false);\r\n    changeWebcamURI(\"\");\r\n  };\r\n\r\n  const handleProfilePictureRender = (item) => {\r\n    if (item.profilePicture) {\r\n      return (\r\n        <img\r\n          className=\"admin_individual_client_picture_profile_avatar\"\r\n          src={LZString.decompressFromEncodedURIComponent(item.profilePicture)}\r\n          alt={\r\n            item.firstName[0].toUpperCase() +\r\n            item.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            item.lastName[0].toUpperCase() +\r\n            item.lastName.slice(1).toLowerCase() +\r\n            \" Profile Picture\"\r\n          }\r\n        />\r\n      );\r\n    } else {\r\n      return (\r\n        <div\r\n          className=\"admin_individual_client_initials_profile_avatar\"\r\n          style={{\r\n            background:\r\n              randomColorArray[\r\n                getEmployeesData.employees\r\n                  .sort((a, b) => a.firstName.localeCompare(b.firstName))\r\n                  .map((x) => x.email)\r\n                  .indexOf(item.email)\r\n              ],\r\n          }}\r\n        >\r\n          <p>\r\n            {item.firstName[0].toUpperCase() + item.lastName[0].toUpperCase()}\r\n          </p>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (updateAdminProfilePictureData) {\r\n      const imageDataReceived = setTimeout(() => {\r\n        if (imageLoading) {\r\n          dispatch(ACTION_IMAGE_LOADING_RESET());\r\n        }\r\n      }, 500);\r\n      getEmployeesRefetch();\r\n      employeeDataRefetch();\r\n      return () => {\r\n        clearTimeout(imageDataReceived);\r\n      };\r\n    }\r\n  }, [\r\n    imageLoading,\r\n    updateAdminProfilePictureData,\r\n    dispatch,\r\n    getEmployeesRefetch,\r\n    employeeDataRefetch,\r\n  ]);\r\n\r\n  const renderBarInContactInfo = () => {\r\n    if (!currentScreenSize) {\r\n      if (initialScreenSize >= 1200) {\r\n        return null;\r\n      } else {\r\n        return <p style={{ color: \"rgb(200, 200, 200)\" }}>|</p>;\r\n      }\r\n    } else {\r\n      if (currentScreenSize >= 1200) {\r\n        return null;\r\n      } else {\r\n        return <p style={{ color: \"rgb(200, 200, 200)\" }}>|</p>;\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getClientsLoading) {\r\n      dispatch(ACTION_LOADING_SPINNER_ACTIVE());\r\n    } else {\r\n      dispatch(ACTION_LOADING_SPINNER_RESET());\r\n    }\r\n  }, [dispatch, getClientsLoading]);\r\n\r\n  useEffect(() => {\r\n    if (getEmployeeError) {\r\n      employeeDataRefetch();\r\n    }\r\n  }, [getEmployeeError, employeeDataRefetch]);\r\n\r\n  useEffect(() => {\r\n    if (getEmployeesError) {\r\n      getEmployeesRefetch();\r\n    }\r\n  }, [getEmployeesError, getEmployeesRefetch]);\r\n\r\n  return (\r\n    <div className=\"admin_clients_container\">\r\n      {redirectToAdminLogInPage()}\r\n      <Modal\r\n        isOpen={imageLoading || loadingSpinnerActive || getClientsLoading}\r\n        style={{\r\n          content: {\r\n            position: \"fixed\",\r\n            zIndex: \"10000\",\r\n            height: \"100%\",\r\n            backdropFilter: \"blur(5px)\",\r\n            WebkitBackdropFilter: \"blur(5px)\",\r\n            paddingBottom: \"10%\",\r\n            borderRadius: \"none\",\r\n            width: \"100vw\",\r\n            top: \"0\",\r\n            left: \"0\",\r\n            right: \"0\",\r\n            bottom: \"0\",\r\n            border: \"none\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            background: \"rgba(0, 0, 0, 0.5)\",\r\n          },\r\n        }}\r\n      >\r\n        <BounceLoader\r\n          size={100}\r\n          css={override}\r\n          color={\"rgb(44, 44, 52)\"}\r\n          loading={imageLoading || loadingSpinnerActive || getClientsLoading}\r\n        />\r\n      </Modal>\r\n      <div\r\n        className=\"admin_clients_header\"\r\n        style={{\r\n          zIndex:\r\n            logoutClicked ||\r\n            addProfilePhotoClicked ||\r\n            loadingSpinnerActive ||\r\n            imageLoading ||\r\n            cancelAppointmentClicked ||\r\n            getClientsLoading\r\n              ? 0\r\n              : 5,\r\n          filter:\r\n            cancelAppointmentClicked || getClientsLoading\r\n              ? \"blur(5px)\"\r\n              : \"none\",\r\n        }}\r\n      >\r\n        <Link to=\"/admin/menu\">\r\n          <FontAwesomeIcon\r\n            className=\"admin_clients_back_arrow\"\r\n            icon={faChevronLeft}\r\n          />\r\n        </Link>\r\n        <h1>STAFF</h1>\r\n      </div>\r\n      <FormGroup>\r\n        <div className=\"admin_clients_searchbar_container\">\r\n          <Input\r\n            className=\"admin_clients_searchbar_input_field\"\r\n            placeholder=\"Filter by staff member's name or phone\"\r\n            onChange={handleChangeEmployeeFilter}\r\n            maxLength={128}\r\n            onKeyDown={preventKeys}\r\n          />\r\n          <FontAwesomeIcon\r\n            className=\"admin_clients_searchbar_icon\"\r\n            icon={faSearch}\r\n          />\r\n        </div>\r\n      </FormGroup>\r\n      <div\r\n        className=\"admin_clients_content_container\"\r\n        style={{ height: \"55vh\", overflow: \"scroll\", marginTop: \"2vh\" }}\r\n      >\r\n        {getEmployeesData\r\n          ? getEmployeesData.employees.length > 0\r\n            ? filteredAllEmployees\r\n                .sort((a, b) => a.firstName.localeCompare(b.firstName))\r\n                .map((item, i) => {\r\n                  return (\r\n                    <div\r\n                      className=\"admin_individual_client_container\"\r\n                      key={i}\r\n                      onClick={(e) => {\r\n                        if (addStaffMemberClicked) {\r\n                          return null;\r\n                        } else {\r\n                          handleEmployeeToggled(e, item);\r\n                        }\r\n                      }}\r\n                      ref={individualEmployeeRef}\r\n                    >\r\n                      <Modal\r\n                        isOpen={\r\n                          addProfilePhotoClicked && employeeToggled === item._id\r\n                        }\r\n                        className=\"admin_individual_client_add_photo_modal\"\r\n                        style={{\r\n                          content: {\r\n                            position: \"fixed\",\r\n                            zIndex: 10000,\r\n                            opacity: 0.99,\r\n                            height: \"100%\",\r\n                            backdropFilter: \"blur(5px)\",\r\n                            WebkitBackdropFilter: \"blur(5px)\",\r\n                            paddingBottom: \"10%\",\r\n                            borderRadius: \"none\",\r\n                            width: \"100vw\",\r\n                            top: \"0\",\r\n                            left: \"0\",\r\n                            right: \"0\",\r\n                            bottom: \"0\",\r\n                            border: \"none\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                            background: \"rgba(0, 0, 0, 0.5)\",\r\n                          },\r\n                        }}\r\n                      >\r\n                        <Transition\r\n                          items={addProfilePhotoClicked}\r\n                          from={{ transform: \"translate3d(0, -65%, 0)\" }}\r\n                          enter={{ transform: \"translate3d(0, 0, 0)\" }}\r\n                          leave={{ display: \"none\" }}\r\n                        >\r\n                          {(addProfilePhotoClicked) =>\r\n                            addProfilePhotoClicked &&\r\n                            ((styleprops) => (\r\n                              <div\r\n                                className=\"admin_individual_client_add_photo_modal_content_container\"\r\n                                style={styleprops}\r\n                              >\r\n                                {takeAPhotoSelected &&\r\n                                !imagePreviewAvailable ? (\r\n                                  <>\r\n                                    <Camera\r\n                                      isSilentMode={true}\r\n                                      onTakePhotoAnimationDone={(dataUri) => {\r\n                                        handleImageUploaded(dataUri);\r\n                                        changeWebcamURI(dataUri);\r\n                                      }}\r\n                                      imageType={IMAGE_TYPES.JPG}\r\n                                    />\r\n                                    <div className=\"admin_individual_client_add_photo_modal_contents\">\r\n                                      <FontAwesomeIcon\r\n                                        className=\"modal_x\"\r\n                                        icon={faTimes}\r\n                                        onClick={() => {\r\n                                          dispatch(\r\n                                            ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET()\r\n                                          );\r\n                                          changeTakeAPhotoSelected(false);\r\n                                        }}\r\n                                      />\r\n                                    </div>\r\n                                  </>\r\n                                ) : (\r\n                                  <div className=\"admin_individual_client_add_photo_modal_contents\">\r\n                                    <FontAwesomeIcon\r\n                                      className=\"modal_x\"\r\n                                      icon={faTimes}\r\n                                      onClick={() => {\r\n                                        dispatch(\r\n                                          ACTION_ADD_PROFILE_PHOTO_CLICKED_RESET()\r\n                                        );\r\n                                        changeTakeAPhotoSelected(false);\r\n                                        changeImageUploaded(\"\");\r\n                                        changeImagePreviewAvailable(false);\r\n                                        changeWebcamURI(\"\");\r\n                                      }}\r\n                                    />\r\n                                    <h2>Update employee profile picture</h2>\r\n                                    <span\r\n                                      className=\"admin_individual_client_add_photo_modal_buttons_container\"\r\n                                      style={{\r\n                                        top:\r\n                                          imageUploaded || imagePreviewAvailable\r\n                                            ? \"35%\"\r\n                                            : \"45%\",\r\n                                      }}\r\n                                    >\r\n                                      <ImageUploader\r\n                                        withIcon={\r\n                                          imageUploaded || imagePreviewAvailable\r\n                                            ? false\r\n                                            : true\r\n                                        }\r\n                                        withLabel={false}\r\n                                        buttonStyles={{\r\n                                          display:\r\n                                            imageUploaded ||\r\n                                            imagePreviewAvailable\r\n                                              ? \"none\"\r\n                                              : \"block\",\r\n                                        }}\r\n                                        buttonText=\"Choose image\"\r\n                                        imgExtension={[\".jpg\", \".png\", \".jpeg\"]}\r\n                                        maxFileSize={5242880}\r\n                                        onChange={handleImageUploaded}\r\n                                        singleImage={true}\r\n                                        withPreview={true}\r\n                                      />\r\n                                      {(imageUploaded ||\r\n                                        imagePreviewAvailable) &&\r\n                                      takeAPhotoSelected ? (\r\n                                        <div className=\"fileContainer\">\r\n                                          <div className=\"uploadPictureContainer\">\r\n                                            <div\r\n                                              className=\"deleteImage\"\r\n                                              onClick={() => {\r\n                                                changeWebcamURI(\"\");\r\n                                                changeImagePreviewAvailable(\r\n                                                  false\r\n                                                );\r\n                                                dispatch(\r\n                                                  ACTION_IMAGE_LOADING_RESET()\r\n                                                );\r\n                                                changeImagePreviewAvailable(\r\n                                                  false\r\n                                                );\r\n                                                changeTakeAPhotoSelected(false);\r\n                                                changeImageUploaded(\"\");\r\n                                              }}\r\n                                            >\r\n                                              X\r\n                                            </div>\r\n                                            <img\r\n                                              src={webcamURI}\r\n                                              className=\"uploadPicture\"\r\n                                              alt=\"preview\"\r\n                                            />\r\n                                          </div>\r\n                                        </div>\r\n                                      ) : null}\r\n                                      {imageUploaded ||\r\n                                      imagePreviewAvailable ? (\r\n                                        <div\r\n                                          className=\"admin_individual_client_confirm_photo_button\"\r\n                                          onClick={handleConfirmPhotoSubmit}\r\n                                        >\r\n                                          <p>Confirm photo</p>\r\n                                        </div>\r\n                                      ) : null}\r\n                                      {(initialScreenSize >= 1200 &&\r\n                                        !imageUploaded &&\r\n                                        !imagePreviewAvailable) ||\r\n                                      (currentScreenSize >= 1200 &&\r\n                                        !imageUploaded &&\r\n                                        !imagePreviewAvailable) ? (\r\n                                        <>\r\n                                          <p\r\n                                            style={{\r\n                                              display: !currentScreenSize\r\n                                                ? initialScreenSize >= 1200\r\n                                                  ? \"block\"\r\n                                                  : \"none\"\r\n                                                : currentScreenSize >= 1200\r\n                                                ? \"block\"\r\n                                                : \"none\",\r\n                                            }}\r\n                                          >\r\n                                            OR\r\n                                          </p>\r\n                                          <div\r\n                                            className=\"admin_individual_client_take_a_photo_button\"\r\n                                            onClick={() =>\r\n                                              changeTakeAPhotoSelected(true)\r\n                                            }\r\n                                          >\r\n                                            <p>Take a photo</p>\r\n                                          </div>{\" \"}\r\n                                        </>\r\n                                      ) : null}\r\n                                    </span>\r\n                                  </div>\r\n                                )}\r\n                              </div>\r\n                            ))\r\n                          }\r\n                        </Transition>\r\n                      </Modal>\r\n                      <div\r\n                        className=\"admin_individual_client_initials_square\"\r\n                        style={{\r\n                          background: randomColorArray\r\n                            ? randomColorArray[\r\n                                getEmployeesData.employees\r\n                                  .sort((a, b) =>\r\n                                    a.firstName.localeCompare(b.firstName)\r\n                                  )\r\n                                  .map((x) => x.email)\r\n                                  .indexOf(item.email)\r\n                              ]\r\n                            : \"rgb(0, 0, 0)\",\r\n                        }}\r\n                      >\r\n                        <p>\r\n                          {item.firstName[0].toUpperCase() +\r\n                            item.lastName[0].toUpperCase()}\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"admin_individual_client_full_name\">\r\n                        <p>\r\n                          {item.firstName[0].toUpperCase() +\r\n                            item.firstName.slice(1).toLowerCase() +\r\n                            \" \" +\r\n                            item.lastName[0].toUpperCase() +\r\n                            item.lastName.slice(1).toLowerCase()}\r\n                        </p>\r\n                        <p>\r\n                          {item.employeeRole.length > 0\r\n                            ? item.employeeRole.join(\", \")\r\n                            : null}\r\n                        </p>\r\n                        <p>{item.phoneNumber ? item.phoneNumber : null}</p>\r\n                      </div>\r\n                      <span className=\"admin_individual_client_spacer\" />\r\n                      <FontAwesomeIcon\r\n                        style={{\r\n                          zIndex: employeeToggled\r\n                            ? logoutClicked ||\r\n                              addProfilePhotoClicked ||\r\n                              loadingSpinnerActive ||\r\n                              imageLoading ||\r\n                              cancelAppointmentClicked\r\n                              ? -1\r\n                              : 0\r\n                            : loadingSpinnerActive\r\n                            ? -1\r\n                            : logoutClicked ||\r\n                              addProfilePhotoClicked ||\r\n                              imageLoading ||\r\n                              cancelAppointmentClicked\r\n                            ? 0\r\n                            : 5,\r\n                          transitionDelay:\r\n                            logoutClicked || loadingSpinnerActive\r\n                              ? \"initial\"\r\n                              : !employeeToggled\r\n                              ? \"0.5s\"\r\n                              : \"initial\",\r\n                        }}\r\n                        icon={faEllipsisH}\r\n                        className=\"admin_individual_client_expand_icon\"\r\n                      />\r\n                      {addStaffMemberClicked ? (\r\n                        <AdminAddStaffMember\r\n                          handleProfilePictureRender={\r\n                            handleProfilePictureRender\r\n                          }\r\n                          renderBarInContactInfo={renderBarInContactInfo}\r\n                          getClientsData={getClientsData}\r\n                          getEmployeesRefetch={getEmployeesRefetch}\r\n                          addStaffMemberClicked={addStaffMemberClicked}\r\n                          changeAddStaffMemberClicked={\r\n                            changeAddStaffMemberClicked\r\n                          }\r\n                        />\r\n                      ) : null}\r\n                      <Transition\r\n                        items={employeeToggled}\r\n                        from={{ transform: \"translateX(-100%)\" }}\r\n                        enter={{ transform: \"translateX(0%)\" }}\r\n                        leave={{ transform: \"translateX(-100%)\" }}\r\n                        config={{ duration: 200 }}\r\n                      >\r\n                        {(employeeToggled) =>\r\n                          employeeToggled === item._id &&\r\n                          ((styleprops) => (\r\n                            <div\r\n                              className=\"admin_individual_selected_client_container\"\r\n                              style={{\r\n                                ...styleprops,\r\n                                ...{\r\n                                  zIndex:\r\n                                    logoutClicked ||\r\n                                    addProfilePhotoClicked ||\r\n                                    loadingSpinnerActive ||\r\n                                    imageLoading ||\r\n                                    cancelAppointmentClicked\r\n                                      ? 0\r\n                                      : 1,\r\n                                },\r\n                              }}\r\n                            >\r\n                              <div className=\"admin_individual_selected_client_contents_container\">\r\n                                <div\r\n                                  className=\"admin_individual_selected_client_back_container\"\r\n                                  ref={selectedEmployeeBackRef}\r\n                                  onClick={(e) => {\r\n                                    adminClientSectionSelected === \"\"\r\n                                      ? handleEmployeeUntoggled(e)\r\n                                      : dispatch(\r\n                                          ACTION_ADMIN_CLIENT_PROFILE_SELECTED()\r\n                                        );\r\n                                  }}\r\n                                >\r\n                                  <FontAwesomeIcon\r\n                                    icon={faLongArrowAltLeft}\r\n                                    className=\"admin_individual_selected_client_back_arrow_icon\"\r\n                                  />\r\n                                  <p>\r\n                                    {adminClientSectionSelected === \"\"\r\n                                      ? \"Back to all staff\"\r\n                                      : \"Back to \" +\r\n                                        item.firstName[0].toUpperCase() +\r\n                                        item.firstName.slice(1).toLowerCase() +\r\n                                        \" \" +\r\n                                        item.lastName[0].toUpperCase() +\r\n                                        item.lastName.slice(1).toLowerCase() +\r\n                                        \"'s Profile\"}\r\n                                  </p>\r\n                                </div>\r\n                                {adminClientSectionSelected === \"\" ? (\r\n                                  <AdminStaffIndividualProfile\r\n                                    item={item}\r\n                                    employeeToggled={employeeToggled}\r\n                                    changeEmployeeToggled={\r\n                                      changeEmployeeToggled\r\n                                    }\r\n                                    handleProfilePictureRender={\r\n                                      handleProfilePictureRender\r\n                                    }\r\n                                    renderBarInContactInfo={\r\n                                      renderBarInContactInfo\r\n                                    }\r\n                                    getEmployeesData={getEmployeesData}\r\n                                    getEmployeesRefetch={getEmployeesRefetch}\r\n                                    getEmployeeData={getEmployeeData}\r\n                                  />\r\n                                ) : null}\r\n                                {adminClientSectionSelected ===\r\n                                \"UpcomingAppointments\" ? (\r\n                                  <div className=\"admin_side_my_appointments_content_container\">\r\n                                    <AdminRenderUpcomingAppointments\r\n                                      data={selectedEmployeeAppointments}\r\n                                      getAllAppointmentsRefetch={\r\n                                        getAllAppointmentsRefetch\r\n                                      }\r\n                                      item={item}\r\n                                      override={override}\r\n                                      loadingSpinnerActive={\r\n                                        loadingSpinnerActive\r\n                                      }\r\n                                      currentScreenSize={currentScreenSize}\r\n                                      initialScreenSize={initialScreenSize}\r\n                                    />\r\n                                  </div>\r\n                                ) : adminClientSectionSelected ===\r\n                                  \"PastAppointments\" ? (\r\n                                  <div className=\"admin_side_my_appointments_content_container\">\r\n                                    <AdminRenderPastAppointments\r\n                                      data={selectedEmployeePastAppointments}\r\n                                      item={item}\r\n                                      currentScreenSize={currentScreenSize}\r\n                                      initialScreenSize={initialScreenSize}\r\n                                    />\r\n                                  </div>\r\n                                ) : null}\r\n                              </div>\r\n                            </div>\r\n                          ))\r\n                        }\r\n                      </Transition>\r\n                    </div>\r\n                  );\r\n                })\r\n            : null\r\n          : null}\r\n        {getEmployeeData ? (\r\n          getEmployeeData.employee ? (\r\n            getEmployeeData.employee.employeeRole.includes(\"Admin\") ? (\r\n              <div\r\n                className=\"add_staff_member_button_container\"\r\n                style={{\r\n                  zIndex: employeeToggled\r\n                    ? logoutClicked ||\r\n                      addProfilePhotoClicked ||\r\n                      loadingSpinnerActive ||\r\n                      imageLoading ||\r\n                      cancelAppointmentClicked ||\r\n                      addStaffMemberClicked ||\r\n                      employeeToggled\r\n                      ? -1\r\n                      : 0\r\n                    : addStaffMemberClicked\r\n                    ? -1\r\n                    : logoutClicked ||\r\n                      addProfilePhotoClicked ||\r\n                      loadingSpinnerActive ||\r\n                      imageLoading ||\r\n                      cancelAppointmentClicked ||\r\n                      addStaffMemberClicked\r\n                    ? 0\r\n                    : 5,\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"add_staff_member_button\"\r\n                  onClick={() => changeAddStaffMemberClicked(true)}\r\n                >\r\n                  Add Staff Member\r\n                </div>\r\n              </div>\r\n            ) : null\r\n          ) : null\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminStaff;\r\n"]},"metadata":{},"sourceType":"module"}