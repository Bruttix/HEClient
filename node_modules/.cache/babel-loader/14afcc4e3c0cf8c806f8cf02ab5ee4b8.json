{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useMemo,useState}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import{useQuery}from\"@apollo/react-hooks\";import getClientsQuery from\"../../../graphql/queries/getClientsQuery\";import ACTION_PHONE_NUMBER_RESET from\"../../../actions/GuestCheckoutForm/PhoneNumber/ACTION_PHONE_NUMBER_RESET\";import ACTION_PHONE_NUMBER from\"../../../actions/GuestCheckoutForm/PhoneNumber/ACTION_PHONE_NUMBER\";import ACTION_PHONE_VALID from\"../../../actions/PhoneNumberValidation/Valid/ACTION_PHONE_VALID\";import ACTION_PHONE_NOT_INVALID from\"../../../actions/PhoneNumberValidation/Invalid/ACTION_PHONE_NOT_INVALID\";import ACTION_PHONE_NOT_VALID from\"../../../actions/PhoneNumberValidation/Valid/ACTION_PHONE_NOT_VALID\";import ACTION_PHONE_INVALID from\"../../../actions/PhoneNumberValidation/Invalid/ACTION_PHONE_INVALID\";import ACTION_BOOKING_SUMMARY_NOT_ACTIVE from\"../../../actions/ContinueToBookingSummaryButtonActive/ACTION_BOOKING_SUMMARY_NOT_ACTIVE\";import\"../GuestCheckout.css\";const PhoneNumber=()=>{const dispatch=useDispatch();// Phone Number States\nconst phoneNumber=useSelector(state=>state.phoneNumber.phone_number);const phoneIsValid=useSelector(state=>state.phoneIsValid.phone_valid);const phoneIsInvalid=useSelector(state=>state.phoneIsInvalid.phone_invalid);const _useState=useState(false),_useState2=_slicedToArray(_useState,2),phoneNumberAlreadyRegistered=_useState2[0],changePhoneNumberAlreadyRegistered=_useState2[1];// Regular Expression for Phone Number Validation - allows only phone numbers in the format (xxx) xxx - xxx, with x values being digits\nconst phoneNumberReg=/^(\\(\\d\\d\\d\\))+\\s+(\\d\\d\\d)+\\s+(-)+\\s+(\\d\\d\\d\\d)$/g;// Regular Expression for Autocompleted Phone Numbers - allows phone numbers in the format 1xxxxxxxxxx, with x values being digits and the leading 1 country code being optional.\nconst phoneNumberAutocompleteReg=/^(1*\\d{10})$/g;const _useQuery=useQuery(getClientsQuery,{fetchPolicy:\"no-cache\"}),data=_useQuery.data;const validatePhoneNumber=number=>{const validPhoneNumber=phoneNumberReg.test(number);const validPhoneAutocomplete=phoneNumberAutocompleteReg.test(number);if(!phoneNumberAlreadyRegistered){if(validPhoneNumber||validPhoneAutocomplete){dispatch(ACTION_PHONE_VALID());dispatch(ACTION_PHONE_NOT_INVALID());}else{dispatch(ACTION_PHONE_NOT_VALID());dispatch(ACTION_PHONE_INVALID());dispatch(ACTION_BOOKING_SUMMARY_NOT_ACTIVE());}}else{dispatch(ACTION_PHONE_NOT_VALID());dispatch(ACTION_PHONE_INVALID());dispatch(ACTION_BOOKING_SUMMARY_NOT_ACTIVE());}};const handlePhoneNumber=e=>{validatePhoneNumber(e.currentTarget.value);dispatch(ACTION_PHONE_NUMBER(e.currentTarget.value));};useMemo(()=>{if(phoneNumber){if(data){for(let i=0;i<data.clients.length;i++){if(data.clients[i].phoneNumber===phoneNumber&&(data.clients[i].password!==null||data.clients[i].tokenCount>0)){changePhoneNumberAlreadyRegistered(true);dispatch(ACTION_PHONE_NOT_VALID());dispatch(ACTION_PHONE_INVALID());dispatch(ACTION_BOOKING_SUMMARY_NOT_ACTIVE());}}}}},[data,phoneNumber,dispatch]);const phoneNumberTyping=e=>{let currentTyping=e.currentTarget.value;changePhoneNumberAlreadyRegistered(false);dispatch(ACTION_PHONE_NUMBER_RESET());// Formatting for US Phone Numbers\nif(currentTyping.length===3){currentTyping=currentTyping.split(\"\");currentTyping.unshift(\"(\");currentTyping.push(\") \");currentTyping=currentTyping.join(\"\");}else{if(currentTyping.length===4){if(currentTyping.indexOf(\"(\")===0&&currentTyping.indexOf(\")\")<0){currentTyping=currentTyping.split(\"\");currentTyping.splice(currentTyping.indexOf(\"(\"),1);currentTyping=currentTyping.join(\"\");}else{if(currentTyping.indexOf(\"(\")<0&&currentTyping.indexOf(\")\")<0){currentTyping=currentTyping.split(\"\");currentTyping.unshift(\"(\");currentTyping.splice(4,0,\") \");currentTyping=currentTyping.join(\"\");}}}else{if(currentTyping.length===6){if(currentTyping.indexOf(\" \")<0){currentTyping=currentTyping.split(\"\");currentTyping.splice(5,0,\" \");currentTyping=currentTyping.join(\"\");}}else{if(currentTyping.length===10){if(currentTyping.lastIndexOf(\" \")===5){currentTyping=currentTyping.split(\"\");currentTyping.splice(9,0,\" - \");currentTyping=currentTyping.join(\"\");}else{if(currentTyping.indexOf(\"(\")<0){currentTyping=currentTyping.split(\"\");currentTyping.unshift(\"(\");currentTyping.splice(4,0,\") \");currentTyping.splice(8,0,\" - \");currentTyping=currentTyping.join(\"\");}}}else{if(currentTyping.length===11){if(currentTyping.lastIndexOf(\" \")===9&&currentTyping.indexOf(\"-\")<0){currentTyping=currentTyping.split(\"\");currentTyping.splice(9,0,\" -\");currentTyping=currentTyping.join(\"\");}}else{if(currentTyping.length===12){if(currentTyping.lastIndexOf(\" \")===9){currentTyping=currentTyping.split(\"\");currentTyping.splice(11,0,\" \");currentTyping=currentTyping.join(\"\");}}}}}}}e.currentTarget.value=currentTyping;};const phoneNumberKeyTyping=e=>{if(e.keyCode>=8&&e.keyCode<32||e.keyCode>=37&&e.keyCode<=40||e.keyCode>=96&&e.keyCode<=105||e.keyCode>=48&&e.keyCode<=57){return e.keyCode;}else{e.preventDefault();}};return/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,{for:\"phoneNumber\"},/*#__PURE__*/React.createElement(\"div\",{className:\"required_label\"},\"Phone Number\",/*#__PURE__*/React.createElement(\"p\",{className:\"required_label red_asterisk\"},\"* \"))),/*#__PURE__*/React.createElement(Input,{type:\"tel\",name:\"phoneNumber\",maxLength:16,onKeyDown:phoneNumberKeyTyping,defaultValue:phoneNumber,placeholder:\"Phone number\",onChange:phoneNumberTyping,onBlur:handlePhoneNumber,className:\"input_field\",invalid:phoneNumber===\"\"?false:phoneIsInvalid?true:false,valid:phoneNumber===\"\"?false:phoneIsValid?true:false}),phoneNumberAlreadyRegistered?/*#__PURE__*/React.createElement(FormFeedback,{invalid:\"true\"},\"This phone number has already been registered.\"):/*#__PURE__*/React.createElement(FormFeedback,{invalid:\"true\"},\"Please enter a valid phone number.\"));};export default PhoneNumber;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/checkout/Form/PhoneNumber.js"],"names":["React","useMemo","useState","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","useQuery","getClientsQuery","ACTION_PHONE_NUMBER_RESET","ACTION_PHONE_NUMBER","ACTION_PHONE_VALID","ACTION_PHONE_NOT_INVALID","ACTION_PHONE_NOT_VALID","ACTION_PHONE_INVALID","ACTION_BOOKING_SUMMARY_NOT_ACTIVE","PhoneNumber","dispatch","phoneNumber","state","phone_number","phoneIsValid","phone_valid","phoneIsInvalid","phone_invalid","phoneNumberAlreadyRegistered","changePhoneNumberAlreadyRegistered","phoneNumberReg","phoneNumberAutocompleteReg","fetchPolicy","data","validatePhoneNumber","number","validPhoneNumber","test","validPhoneAutocomplete","handlePhoneNumber","e","currentTarget","value","i","clients","length","password","tokenCount","phoneNumberTyping","currentTyping","split","unshift","push","join","indexOf","splice","lastIndexOf","phoneNumberKeyTyping","keyCode","preventDefault"],"mappings":"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","sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport getClientsQuery from \"../../../graphql/queries/getClientsQuery\";\r\nimport ACTION_PHONE_NUMBER_RESET from \"../../../actions/GuestCheckoutForm/PhoneNumber/ACTION_PHONE_NUMBER_RESET\";\r\nimport ACTION_PHONE_NUMBER from \"../../../actions/GuestCheckoutForm/PhoneNumber/ACTION_PHONE_NUMBER\";\r\nimport ACTION_PHONE_VALID from \"../../../actions/PhoneNumberValidation/Valid/ACTION_PHONE_VALID\";\r\nimport ACTION_PHONE_NOT_INVALID from \"../../../actions/PhoneNumberValidation/Invalid/ACTION_PHONE_NOT_INVALID\";\r\nimport ACTION_PHONE_NOT_VALID from \"../../../actions/PhoneNumberValidation/Valid/ACTION_PHONE_NOT_VALID\";\r\nimport ACTION_PHONE_INVALID from \"../../../actions/PhoneNumberValidation/Invalid/ACTION_PHONE_INVALID\";\r\nimport ACTION_BOOKING_SUMMARY_NOT_ACTIVE from \"../../../actions/ContinueToBookingSummaryButtonActive/ACTION_BOOKING_SUMMARY_NOT_ACTIVE\";\r\nimport \"../GuestCheckout.css\";\r\n\r\nconst PhoneNumber = () => {\r\n  const dispatch = useDispatch();\r\n  // Phone Number States\r\n  const phoneNumber = useSelector((state) => state.phoneNumber.phone_number);\r\n  const phoneIsValid = useSelector((state) => state.phoneIsValid.phone_valid);\r\n  const phoneIsInvalid = useSelector(\r\n    (state) => state.phoneIsInvalid.phone_invalid\r\n  );\r\n  const [\r\n    phoneNumberAlreadyRegistered,\r\n    changePhoneNumberAlreadyRegistered,\r\n  ] = useState(false);\r\n\r\n  // Regular Expression for Phone Number Validation - allows only phone numbers in the format (xxx) xxx - xxx, with x values being digits\r\n  const phoneNumberReg = /^(\\(\\d\\d\\d\\))+\\s+(\\d\\d\\d)+\\s+(-)+\\s+(\\d\\d\\d\\d)$/g;\r\n\r\n  // Regular Expression for Autocompleted Phone Numbers - allows phone numbers in the format 1xxxxxxxxxx, with x values being digits and the leading 1 country code being optional.\r\n  const phoneNumberAutocompleteReg = /^(1*\\d{10})$/g;\r\n\r\n  const { data } = useQuery(getClientsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const validatePhoneNumber = (number) => {\r\n    const validPhoneNumber = phoneNumberReg.test(number);\r\n    const validPhoneAutocomplete = phoneNumberAutocompleteReg.test(number);\r\n\r\n    if (!phoneNumberAlreadyRegistered) {\r\n      if (validPhoneNumber || validPhoneAutocomplete) {\r\n        dispatch(ACTION_PHONE_VALID());\r\n        dispatch(ACTION_PHONE_NOT_INVALID());\r\n      } else {\r\n        dispatch(ACTION_PHONE_NOT_VALID());\r\n        dispatch(ACTION_PHONE_INVALID());\r\n        dispatch(ACTION_BOOKING_SUMMARY_NOT_ACTIVE());\r\n      }\r\n    } else {\r\n      dispatch(ACTION_PHONE_NOT_VALID());\r\n      dispatch(ACTION_PHONE_INVALID());\r\n      dispatch(ACTION_BOOKING_SUMMARY_NOT_ACTIVE());\r\n    }\r\n  };\r\n\r\n  const handlePhoneNumber = (e) => {\r\n    validatePhoneNumber(e.currentTarget.value);\r\n    dispatch(ACTION_PHONE_NUMBER(e.currentTarget.value));\r\n  };\r\n\r\n  useMemo(() => {\r\n    if (phoneNumber) {\r\n      if (data) {\r\n        for (let i = 0; i < data.clients.length; i++) {\r\n          if (\r\n            data.clients[i].phoneNumber === phoneNumber &&\r\n            (data.clients[i].password !== null ||\r\n              data.clients[i].tokenCount > 0)\r\n          ) {\r\n            changePhoneNumberAlreadyRegistered(true);\r\n            dispatch(ACTION_PHONE_NOT_VALID());\r\n            dispatch(ACTION_PHONE_INVALID());\r\n            dispatch(ACTION_BOOKING_SUMMARY_NOT_ACTIVE());\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [data, phoneNumber, dispatch]);\r\n\r\n  const phoneNumberTyping = (e) => {\r\n    let currentTyping = e.currentTarget.value;\r\n\r\n    changePhoneNumberAlreadyRegistered(false);\r\n    dispatch(ACTION_PHONE_NUMBER_RESET());\r\n\r\n    // Formatting for US Phone Numbers\r\n    if (currentTyping.length === 3) {\r\n      currentTyping = currentTyping.split(\"\");\r\n      currentTyping.unshift(\"(\");\r\n      currentTyping.push(\") \");\r\n\r\n      currentTyping = currentTyping.join(\"\");\r\n    } else {\r\n      if (currentTyping.length === 4) {\r\n        if (\r\n          currentTyping.indexOf(\"(\") === 0 &&\r\n          currentTyping.indexOf(\")\") < 0\r\n        ) {\r\n          currentTyping = currentTyping.split(\"\");\r\n          currentTyping.splice(currentTyping.indexOf(\"(\"), 1);\r\n\r\n          currentTyping = currentTyping.join(\"\");\r\n        } else {\r\n          if (\r\n            currentTyping.indexOf(\"(\") < 0 &&\r\n            currentTyping.indexOf(\")\") < 0\r\n          ) {\r\n            currentTyping = currentTyping.split(\"\");\r\n            currentTyping.unshift(\"(\");\r\n            currentTyping.splice(4, 0, \") \");\r\n\r\n            currentTyping = currentTyping.join(\"\");\r\n          }\r\n        }\r\n      } else {\r\n        if (currentTyping.length === 6) {\r\n          if (currentTyping.indexOf(\" \") < 0) {\r\n            currentTyping = currentTyping.split(\"\");\r\n            currentTyping.splice(5, 0, \" \");\r\n\r\n            currentTyping = currentTyping.join(\"\");\r\n          }\r\n        } else {\r\n          if (currentTyping.length === 10) {\r\n            if (currentTyping.lastIndexOf(\" \") === 5) {\r\n              currentTyping = currentTyping.split(\"\");\r\n              currentTyping.splice(9, 0, \" - \");\r\n\r\n              currentTyping = currentTyping.join(\"\");\r\n            } else {\r\n              if (currentTyping.indexOf(\"(\") < 0) {\r\n                currentTyping = currentTyping.split(\"\");\r\n                currentTyping.unshift(\"(\");\r\n                currentTyping.splice(4, 0, \") \");\r\n                currentTyping.splice(8, 0, \" - \");\r\n                currentTyping = currentTyping.join(\"\");\r\n              }\r\n            }\r\n          } else {\r\n            if (currentTyping.length === 11) {\r\n              if (\r\n                currentTyping.lastIndexOf(\" \") === 9 &&\r\n                currentTyping.indexOf(\"-\") < 0\r\n              ) {\r\n                currentTyping = currentTyping.split(\"\");\r\n                currentTyping.splice(9, 0, \" -\");\r\n\r\n                currentTyping = currentTyping.join(\"\");\r\n              }\r\n            } else {\r\n              if (currentTyping.length === 12) {\r\n                if (currentTyping.lastIndexOf(\" \") === 9) {\r\n                  currentTyping = currentTyping.split(\"\");\r\n                  currentTyping.splice(11, 0, \" \");\r\n\r\n                  currentTyping = currentTyping.join(\"\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    e.currentTarget.value = currentTyping;\r\n  };\r\n\r\n  const phoneNumberKeyTyping = (e) => {\r\n    if (\r\n      (e.keyCode >= 8 && e.keyCode < 32) ||\r\n      (e.keyCode >= 37 && e.keyCode <= 40) ||\r\n      (e.keyCode >= 96 && e.keyCode <= 105) ||\r\n      (e.keyCode >= 48 && e.keyCode <= 57)\r\n    ) {\r\n      return e.keyCode;\r\n    } else {\r\n      e.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Label for=\"phoneNumber\">\r\n        <div className=\"required_label\">\r\n          Phone Number<p className=\"required_label red_asterisk\">* </p>\r\n        </div>\r\n      </Label>\r\n      <Input\r\n        type=\"tel\"\r\n        name=\"phoneNumber\"\r\n        maxLength={16}\r\n        onKeyDown={phoneNumberKeyTyping}\r\n        defaultValue={phoneNumber}\r\n        placeholder=\"Phone number\"\r\n        onChange={phoneNumberTyping}\r\n        onBlur={handlePhoneNumber}\r\n        className=\"input_field\"\r\n        invalid={phoneNumber === \"\" ? false : phoneIsInvalid ? true : false}\r\n        valid={phoneNumber === \"\" ? false : phoneIsValid ? true : false}\r\n      />\r\n      {phoneNumberAlreadyRegistered ? (\r\n        <FormFeedback invalid=\"true\">\r\n          This phone number has already been registered.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback invalid=\"true\">\r\n          Please enter a valid phone number.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default PhoneNumber;\r\n"]},"metadata":{},"sourceType":"module"}