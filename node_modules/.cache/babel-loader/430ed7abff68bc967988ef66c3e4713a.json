{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import Autosuggest from\"react-autosuggest\";import{useDispatch,useSelector}from\"react-redux\";import moment from\"moment\";import saltCaveSuggestions from\"../SaltCaveSuggestions\";import ACTION_ADMIN_APPOINTMENT_DURATION from\"../../../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDuration/ACTION_ADMIN_APPOINTMENT_DURATION\";import ACTION_ADMIN_SELECTED_TREATMENTS from\"../../../../../actions/Admin/AdminCreateAppointment/AdminSelectedTreatments/ACTION_ADMIN_SELECTED_TREATMENTS\";const SaltCaveAutosuggest=props=>{const dispatch=useDispatch();const _useState=useState([]),_useState2=_slicedToArray(_useState,2),saltCaveInputSuggestions=_useState2[0],changeSaltCaveInputSuggestions=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),saltCaveInput=_useState4[0],changeSaltCaveInput=_useState4[1];const adminAppointmentDuration=useSelector(state=>state.adminAppointmentDuration.admin_appointment_duration);const adminAppointmentDate=useSelector(state=>state.adminAppointmentDate.admin_appointment_date);const adminAppointmentTime=useSelector(state=>state.adminAppointmentTime.admin_appointment_time);const adminSelectedTreatments=useSelector(state=>state.adminSelectedTreatments.admin_selected_treatments);const saltCaveInputChange=(event,{newValue})=>{changeSaltCaveInput(newValue);};const renderSaltCaveSuggestion=suggestion=>{return/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_client_treatment_suggestion_container\"},suggestion.props.children[3].props.children?/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_client_treatment_suggestion_picture\"},suggestion.props.children[3].props.children):null,/*#__PURE__*/React.createElement(\"p\",{style:{color:suggestion.props.children[0].props.children?suggestion.props.children[0].props.children.includes(\"Unavailable\")?\"rgb(177, 177, 177)\":\"#000\":\"#000\"}},suggestion.props.children[0].props.children),/*#__PURE__*/React.createElement(\"p\",null,suggestion.props.children[2].props.children?\"$\"+suggestion.props.children[2].props.children+\".00\":null));};const _renderSectionTitle=section=>{if(section.sectionTitle){return/*#__PURE__*/React.createElement(\"span\",{className:\"react_autosuggest_section_title_header\"},section.sectionTitle);}else{return null;}};const _getSectionSuggestions=section=>{if(section.suggestions){return section.suggestions.map((x,i)=>{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"span\",{key:i},x.name),/*#__PURE__*/React.createElement(\"span\",{key:i},x.duration),/*#__PURE__*/React.createElement(\"span\",{key:i},x.price),/*#__PURE__*/React.createElement(\"span\",{key:i},x.picture));});}};const onSaltCaveSuggestionsFetchRequested=({value})=>{changeSaltCaveInputSuggestions(getSaltCaveSuggestions(value));};const onSaltCaveSuggestionsClearRequested=()=>{changeSaltCaveInputSuggestions([]);};const saltCaveInputProps={placeholder:\"Add Salt Cave\",value:saltCaveInput,onChange:saltCaveInputChange,style:{borderRight:\"1px solid transparent\"}};const getSaltCaveSuggestionValue=suggestion=>{dispatch(ACTION_ADMIN_APPOINTMENT_DURATION(adminAppointmentDuration+suggestion.props.children[1].props.children));dispatch(ACTION_ADMIN_SELECTED_TREATMENTS([...adminSelectedTreatments,suggestion]));return\"\";};const getSaltCaveSuggestions=value=>{const inputValue=value?value.trim().toLowerCase():\"\";const inputLength=inputValue.length;const date=moment(adminAppointmentDate,\"L\").format(\"MMMM D, YYYY\");const startTime=adminAppointmentTime;const fifteenMinutesPrior=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").subtract(15,\"minutes\").format(\"MMMM D, YYYY h:mm A\");const thirtyMinutesPrior=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").subtract(30,\"minutes\").format(\"MMMM D, YYYY h:mm A\");const fortyFiveMinutesPrior=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").subtract(45,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const hourPrior=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").subtract(1,\"hours\").format(\"MMMM D, YYYY hh:mm A\");const fifteenMinutesAfter=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(15+adminAppointmentDuration,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const actualAppointmentStartTime=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").format(\"MMMM D, YYYY hh:mm A\");const fifteenMinutesIntoAppointment=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(15,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const thirtyMinutesIntoAppointment=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(30,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const fortyFiveMinutesIntoAppointment=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(45,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const hourIntoAppointment=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(60,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const actualAppointmentEndTime=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(adminAppointmentDuration,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const thirtyMinutesAfter=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(30+adminAppointmentDuration,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const fortyFiveMinutesAfter=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(45+adminAppointmentDuration,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const hourAfter=moment(date+\" \"+startTime,\"MMMM D, YYYY hh:mm A\").add(60+adminAppointmentDuration,\"minutes\").format(\"MMMM D, YYYY hh:mm A\");const filteredApps=props.getAllAppointmentsData?props.getAllAppointmentsData.all_appointments.filter(x=>{if(x.esthetician===\"Salt Cave\"){return x.esthetician===\"Salt Cave\";}else{return null;}}):null;const sameDayApps=filteredApps.filter(x=>{if(x.date===date){return x.date===date;}else{return null;}});const bookedTimes=sameDayApps.map(x=>{const interval=x.duration/5;const bookedArr=[];for(let i=0;i<interval+1;i++){const start=x.date+\" \"+x.startTime+\" \"+x.morningOrEvening;bookedArr.push(moment(start,\"MMMM D, YYYY hh:mm A\").add(i*5,\"minutes\").format(\"MMMM D, YYYY hh:mm A\"));}return bookedArr;});const bookedTimesArr=bookedTimes.flat();const saltCaveSuggestionsArguments=saltCaveSuggestions(adminAppointmentDuration,adminAppointmentDate,adminAppointmentTime,adminSelectedTreatments?adminSelectedTreatments:[],bookedTimesArr.includes(actualAppointmentStartTime)||bookedTimesArr.includes(fifteenMinutesPrior)||bookedTimesArr.includes(thirtyMinutesPrior),bookedTimesArr.includes(actualAppointmentStartTime)||bookedTimesArr.includes(fifteenMinutesPrior)||bookedTimesArr.includes(thirtyMinutesPrior)||bookedTimesArr.includes(fortyFiveMinutesPrior),bookedTimesArr.includes(actualAppointmentStartTime)||bookedTimesArr.includes(fifteenMinutesPrior)||bookedTimesArr.includes(thirtyMinutesPrior)||bookedTimesArr.includes(fortyFiveMinutesPrior)||bookedTimesArr.includes(hourPrior),bookedTimes.includes(actualAppointmentStartTime)||bookedTimesArr.includes(fifteenMinutesIntoAppointment)||bookedTimesArr.includes(thirtyMinutesIntoAppointment),bookedTimes.includes(actualAppointmentStartTime)||bookedTimesArr.includes(fifteenMinutesIntoAppointment)||bookedTimesArr.includes(thirtyMinutesIntoAppointment)||bookedTimesArr.includes(fortyFiveMinutesIntoAppointment),bookedTimes.includes(actualAppointmentStartTime)||bookedTimesArr.includes(fifteenMinutesIntoAppointment)||bookedTimesArr.includes(thirtyMinutesIntoAppointment)||bookedTimesArr.includes(fortyFiveMinutesIntoAppointment)||bookedTimesArr.includes(hourIntoAppointment),adminAppointmentDuration===0?true:bookedTimesArr.includes(actualAppointmentEndTime)||bookedTimesArr.includes(fifteenMinutesAfter)||bookedTimesArr.includes(thirtyMinutesAfter),adminAppointmentDuration===0?true:bookedTimesArr.includes(actualAppointmentEndTime)||bookedTimesArr.includes(fifteenMinutesAfter)||bookedTimesArr.includes(thirtyMinutesAfter)||bookedTimesArr.includes(fortyFiveMinutesAfter),adminAppointmentDuration===0?true:bookedTimesArr.includes(actualAppointmentEndTime)||bookedTimesArr.includes(fifteenMinutesAfter)||bookedTimesArr.includes(thirtyMinutesAfter)||bookedTimesArr.includes(fortyFiveMinutesAfter)||bookedTimesArr.includes(hourAfter));if(inputLength===0){const sortedArr=[];for(let i=0;i<saltCaveSuggestionsArguments.length;i++){sortedArr.push({sectionTitle:saltCaveSuggestionsArguments[i]?saltCaveSuggestionsArguments[i].sectionTitle?saltCaveSuggestionsArguments[i].sectionTitle:null:null,suggestions:saltCaveSuggestionsArguments[i]?saltCaveSuggestionsArguments[i].suggestions?saltCaveSuggestionsArguments[i].suggestions.sort((a,b)=>a.name?a.name.localeCompare(b.name):null):null:null});}return sortedArr;}else{const sortedArr=[];for(let i=0;i<saltCaveSuggestionsArguments.length;i++){sortedArr.push({sectionTitle:saltCaveSuggestionsArguments[i]?saltCaveSuggestionsArguments[i].sectionTitle?saltCaveSuggestionsArguments[i].sectionTitle:null:null,suggestions:saltCaveSuggestionsArguments[i]?saltCaveSuggestionsArguments[i].suggestions.sort((a,b)=>a.name?a.name.localeCompare(b.name):null).filter(x=>{const treatmentName=x.name;if(treatmentName.toLowerCase().slice(0,inputLength)===inputValue){return treatmentName.toLowerCase().slice(0,inputLength)===inputValue;}else{return null;}}):null});return sortedArr;}}};return/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\",style:{borderLeft:\"1px solid rgb(211, 211, 211)\"}},/*#__PURE__*/React.createElement(\"div\",{role:\"combobox\",\"aria-haspopup\":\"listbox\",\"aria-owns\":\"react-autowhatever-1\",\"aria-controls\":\"react-autowhatever-1\",\"aria-expanded\":\"false\",className:\"react-autosuggest__container\"},/*#__PURE__*/React.createElement(Autosuggest,{suggestions:saltCaveInputSuggestions,onSuggestionsFetchRequested:onSaltCaveSuggestionsFetchRequested,onSuggestionsClearRequested:onSaltCaveSuggestionsClearRequested,getSuggestionValue:getSaltCaveSuggestionValue,renderSuggestion:renderSaltCaveSuggestion,inputProps:saltCaveInputProps,shouldRenderSuggestions:()=>true,focusInputOnSuggestionClick:false,multiSection:true,renderSectionTitle:section=>_renderSectionTitle(section),getSectionSuggestions:section=>_getSectionSuggestions(section)})),/*#__PURE__*/React.createElement(\"div\",{role:\"combobox\",\"aria-haspopup\":\"listbox\",\"aria-owns\":\"react-autowhatever-1\",\"aria-controls\":\"react-autowhatever-1\",\"aria-expanded\":\"false\",className:\"react-autosuggest__container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",disabled:true,autoComplete:\"off\",\"aria-autocomplete\":\"list\",\"aria-controls\":\"react-autowhatever-1\",className:\"react-autosuggest__input\",style:{borderLeft:\"1px solid transparent\",borderRight:\"1px solid transparent\"}})),/*#__PURE__*/React.createElement(\"div\",{role:\"combobox\",\"aria-haspopup\":\"listbox\",\"aria-owns\":\"react-autowhatever-1\",\"aria-controls\":\"react-autowhatever-1\",\"aria-expanded\":\"false\",className:\"react-autosuggest__container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",disabled:true,autoComplete:\"off\",\"aria-autocomplete\":\"list\",\"aria-controls\":\"react-autowhatever-1\",className:\"react-autosuggest__input\",style:{borderLeft:\"1px solid transparent\"}})));};export default SaltCaveAutosuggest;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminSchedule/AdminCreateAppointment/Autosuggest/SaltCaveAutosuggest.js"],"names":["React","useState","Autosuggest","useDispatch","useSelector","moment","saltCaveSuggestions","ACTION_ADMIN_APPOINTMENT_DURATION","ACTION_ADMIN_SELECTED_TREATMENTS","SaltCaveAutosuggest","props","dispatch","saltCaveInputSuggestions","changeSaltCaveInputSuggestions","saltCaveInput","changeSaltCaveInput","adminAppointmentDuration","state","admin_appointment_duration","adminAppointmentDate","admin_appointment_date","adminAppointmentTime","admin_appointment_time","adminSelectedTreatments","admin_selected_treatments","saltCaveInputChange","event","newValue","renderSaltCaveSuggestion","suggestion","children","color","includes","renderSectionTitle","section","sectionTitle","getSectionSuggestions","suggestions","map","x","i","name","duration","price","picture","onSaltCaveSuggestionsFetchRequested","value","getSaltCaveSuggestions","onSaltCaveSuggestionsClearRequested","saltCaveInputProps","placeholder","onChange","style","borderRight","getSaltCaveSuggestionValue","inputValue","trim","toLowerCase","inputLength","length","date","format","startTime","fifteenMinutesPrior","subtract","thirtyMinutesPrior","fortyFiveMinutesPrior","hourPrior","fifteenMinutesAfter","add","actualAppointmentStartTime","fifteenMinutesIntoAppointment","thirtyMinutesIntoAppointment","fortyFiveMinutesIntoAppointment","hourIntoAppointment","actualAppointmentEndTime","thirtyMinutesAfter","fortyFiveMinutesAfter","hourAfter","filteredApps","getAllAppointmentsData","all_appointments","filter","esthetician","sameDayApps","bookedTimes","interval","bookedArr","start","morningOrEvening","push","bookedTimesArr","flat","saltCaveSuggestionsArguments","sortedArr","sort","a","b","localeCompare","treatmentName","slice","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport saltCaveSuggestions from \"../SaltCaveSuggestions\";\r\nimport ACTION_ADMIN_APPOINTMENT_DURATION from \"../../../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDuration/ACTION_ADMIN_APPOINTMENT_DURATION\";\r\nimport ACTION_ADMIN_SELECTED_TREATMENTS from \"../../../../../actions/Admin/AdminCreateAppointment/AdminSelectedTreatments/ACTION_ADMIN_SELECTED_TREATMENTS\";\r\n\r\nconst SaltCaveAutosuggest = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [saltCaveInputSuggestions, changeSaltCaveInputSuggestions] = useState(\r\n    []\r\n  );\r\n  const [saltCaveInput, changeSaltCaveInput] = useState(\"\");\r\n\r\n  const adminAppointmentDuration = useSelector(\r\n    (state) => state.adminAppointmentDuration.admin_appointment_duration\r\n  );\r\n  const adminAppointmentDate = useSelector(\r\n    (state) => state.adminAppointmentDate.admin_appointment_date\r\n  );\r\n  const adminAppointmentTime = useSelector(\r\n    (state) => state.adminAppointmentTime.admin_appointment_time\r\n  );\r\n  const adminSelectedTreatments = useSelector(\r\n    (state) => state.adminSelectedTreatments.admin_selected_treatments\r\n  );\r\n\r\n  const saltCaveInputChange = (event, { newValue }) => {\r\n    changeSaltCaveInput(newValue);\r\n  };\r\n\r\n  const renderSaltCaveSuggestion = (suggestion) => {\r\n    return (\r\n      <div className=\"admin_individual_client_treatment_suggestion_container\">\r\n        {suggestion.props.children[3].props.children ? (\r\n          <div className=\"admin_individual_client_treatment_suggestion_picture\">\r\n            {suggestion.props.children[3].props.children}\r\n          </div>\r\n        ) : null}\r\n\r\n        <p\r\n          style={{\r\n            color: suggestion.props.children[0].props.children\r\n              ? suggestion.props.children[0].props.children.includes(\r\n                  \"Unavailable\"\r\n                )\r\n                ? \"rgb(177, 177, 177)\"\r\n                : \"#000\"\r\n              : \"#000\",\r\n          }}\r\n        >\r\n          {suggestion.props.children[0].props.children}\r\n        </p>\r\n        <p>\r\n          {suggestion.props.children[2].props.children\r\n            ? \"$\" + suggestion.props.children[2].props.children + \".00\"\r\n            : null}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSectionTitle = (section) => {\r\n    if (section.sectionTitle) {\r\n      return (\r\n        <span className=\"react_autosuggest_section_title_header\">\r\n          {section.sectionTitle}\r\n        </span>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getSectionSuggestions = (section) => {\r\n    if (section.suggestions) {\r\n      return section.suggestions.map((x, i) => {\r\n        return (\r\n          <>\r\n            <span key={i}>{x.name}</span>\r\n            <span key={i}>{x.duration}</span>\r\n            <span key={i}>{x.price}</span>\r\n            <span key={i}>{x.picture}</span>\r\n          </>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSaltCaveSuggestionsFetchRequested = ({ value }) => {\r\n    changeSaltCaveInputSuggestions(getSaltCaveSuggestions(value));\r\n  };\r\n\r\n  const onSaltCaveSuggestionsClearRequested = () => {\r\n    changeSaltCaveInputSuggestions([]);\r\n  };\r\n\r\n  const saltCaveInputProps = {\r\n    placeholder: \"Add Salt Cave\",\r\n    value: saltCaveInput,\r\n    onChange: saltCaveInputChange,\r\n    style: { borderRight: \"1px solid transparent\" },\r\n  };\r\n\r\n  const getSaltCaveSuggestionValue = (suggestion) => {\r\n    dispatch(\r\n      ACTION_ADMIN_APPOINTMENT_DURATION(\r\n        adminAppointmentDuration + suggestion.props.children[1].props.children\r\n      )\r\n    );\r\n    dispatch(\r\n      ACTION_ADMIN_SELECTED_TREATMENTS([...adminSelectedTreatments, suggestion])\r\n    );\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const getSaltCaveSuggestions = (value) => {\r\n    const inputValue = value ? value.trim().toLowerCase() : \"\";\r\n    const inputLength = inputValue.length;\r\n\r\n    const date = moment(adminAppointmentDate, \"L\").format(\"MMMM D, YYYY\");\r\n\r\n    const startTime = adminAppointmentTime;\r\n\r\n    const fifteenMinutesPrior = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .subtract(15, \"minutes\")\r\n      .format(\"MMMM D, YYYY h:mm A\");\r\n\r\n    const thirtyMinutesPrior = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .subtract(30, \"minutes\")\r\n      .format(\"MMMM D, YYYY h:mm A\");\r\n\r\n    const fortyFiveMinutesPrior = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .subtract(45, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const hourPrior = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\")\r\n      .subtract(1, \"hours\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fifteenMinutesAfter = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(15 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const actualAppointmentStartTime = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    ).format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fifteenMinutesIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(15, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const thirtyMinutesIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(30, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fortyFiveMinutesIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(45, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const hourIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(60, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const actualAppointmentEndTime = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const thirtyMinutesAfter = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(30 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fortyFiveMinutesAfter = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(45 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const hourAfter = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\")\r\n      .add(60 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const filteredApps = props.getAllAppointmentsData\r\n      ? props.getAllAppointmentsData.all_appointments.filter((x) => {\r\n          if (x.esthetician === \"Salt Cave\") {\r\n            return x.esthetician === \"Salt Cave\";\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n      : null;\r\n\r\n    const sameDayApps = filteredApps.filter((x) => {\r\n      if (x.date === date) {\r\n        return x.date === date;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    const bookedTimes = sameDayApps.map((x) => {\r\n      const interval = x.duration / 5;\r\n      const bookedArr = [];\r\n\r\n      for (let i = 0; i < interval + 1; i++) {\r\n        const start = x.date + \" \" + x.startTime + \" \" + x.morningOrEvening;\r\n\r\n        bookedArr.push(\r\n          moment(start, \"MMMM D, YYYY hh:mm A\")\r\n            .add(i * 5, \"minutes\")\r\n            .format(\"MMMM D, YYYY hh:mm A\")\r\n        );\r\n      }\r\n\r\n      return bookedArr;\r\n    });\r\n\r\n    const bookedTimesArr = bookedTimes.flat();\r\n\r\n    const saltCaveSuggestionsArguments = saltCaveSuggestions(\r\n      adminAppointmentDuration,\r\n      adminAppointmentDate,\r\n      adminAppointmentTime,\r\n      adminSelectedTreatments ? adminSelectedTreatments : [],\r\n      bookedTimesArr.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesPrior) ||\r\n        bookedTimesArr.includes(thirtyMinutesPrior),\r\n      bookedTimesArr.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesPrior) ||\r\n        bookedTimesArr.includes(thirtyMinutesPrior) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesPrior),\r\n      bookedTimesArr.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesPrior) ||\r\n        bookedTimesArr.includes(thirtyMinutesPrior) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesPrior) ||\r\n        bookedTimesArr.includes(hourPrior),\r\n      bookedTimes.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(thirtyMinutesIntoAppointment),\r\n      bookedTimes.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(thirtyMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesIntoAppointment),\r\n      bookedTimes.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(thirtyMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(hourIntoAppointment),\r\n      adminAppointmentDuration === 0\r\n        ? true\r\n        : bookedTimesArr.includes(actualAppointmentEndTime) ||\r\n            bookedTimesArr.includes(fifteenMinutesAfter) ||\r\n            bookedTimesArr.includes(thirtyMinutesAfter),\r\n      adminAppointmentDuration === 0\r\n        ? true\r\n        : bookedTimesArr.includes(actualAppointmentEndTime) ||\r\n            bookedTimesArr.includes(fifteenMinutesAfter) ||\r\n            bookedTimesArr.includes(thirtyMinutesAfter) ||\r\n            bookedTimesArr.includes(fortyFiveMinutesAfter),\r\n      adminAppointmentDuration === 0\r\n        ? true\r\n        : bookedTimesArr.includes(actualAppointmentEndTime) ||\r\n            bookedTimesArr.includes(fifteenMinutesAfter) ||\r\n            bookedTimesArr.includes(thirtyMinutesAfter) ||\r\n            bookedTimesArr.includes(fortyFiveMinutesAfter) ||\r\n            bookedTimesArr.includes(hourAfter)\r\n    );\r\n\r\n    if (inputLength === 0) {\r\n      const sortedArr = [];\r\n\r\n      for (let i = 0; i < saltCaveSuggestionsArguments.length; i++) {\r\n        sortedArr.push({\r\n          sectionTitle: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              : null\r\n            : null,\r\n          suggestions: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].suggestions\r\n              ? saltCaveSuggestionsArguments[i].suggestions.sort((a, b) =>\r\n                  a.name ? a.name.localeCompare(b.name) : null\r\n                )\r\n              : null\r\n            : null,\r\n        });\r\n      }\r\n      return sortedArr;\r\n    } else {\r\n      const sortedArr = [];\r\n\r\n      for (let i = 0; i < saltCaveSuggestionsArguments.length; i++) {\r\n        sortedArr.push({\r\n          sectionTitle: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              : null\r\n            : null,\r\n          suggestions: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].suggestions\r\n                .sort((a, b) => (a.name ? a.name.localeCompare(b.name) : null))\r\n                .filter((x) => {\r\n                  const treatmentName = x.name;\r\n\r\n                  if (\r\n                    treatmentName.toLowerCase().slice(0, inputLength) ===\r\n                    inputValue\r\n                  ) {\r\n                    return (\r\n                      treatmentName.toLowerCase().slice(0, inputLength) ===\r\n                      inputValue\r\n                    );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n            : null,\r\n        });\r\n        return sortedArr;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"admin_create_appointment_input_information_container\"\r\n      style={{\r\n        borderLeft: \"1px solid rgb(211, 211, 211)\",\r\n      }}\r\n    >\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <Autosuggest\r\n          suggestions={saltCaveInputSuggestions}\r\n          onSuggestionsFetchRequested={onSaltCaveSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSaltCaveSuggestionsClearRequested}\r\n          getSuggestionValue={getSaltCaveSuggestionValue}\r\n          renderSuggestion={renderSaltCaveSuggestion}\r\n          inputProps={saltCaveInputProps}\r\n          shouldRenderSuggestions={() => true}\r\n          focusInputOnSuggestionClick={false}\r\n          multiSection={true}\r\n          renderSectionTitle={(section) => renderSectionTitle(section)}\r\n          getSectionSuggestions={(section) => getSectionSuggestions(section)}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          autoComplete=\"off\"\r\n          aria-autocomplete=\"list\"\r\n          aria-controls=\"react-autowhatever-1\"\r\n          className=\"react-autosuggest__input\"\r\n          style={{\r\n            borderLeft: \"1px solid transparent\",\r\n            borderRight: \"1px solid transparent\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          autoComplete=\"off\"\r\n          aria-autocomplete=\"list\"\r\n          aria-controls=\"react-autowhatever-1\"\r\n          className=\"react-autosuggest__input\"\r\n          style={{\r\n            borderLeft: \"1px solid transparent\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaltCaveAutosuggest;\r\n"]},"metadata":{},"sourceType":"module"}