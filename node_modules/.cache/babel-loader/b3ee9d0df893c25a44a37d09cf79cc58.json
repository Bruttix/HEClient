{"ast":null,"code":"import _taggedTemplateLiteral from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _regeneratorRuntime from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject(){const data=_taggedTemplateLiteral([\"\\n    display: block;\\n    position: absolute;\\n    left: 25%;\\n    right: 25%;\\n  \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useState,useEffect,useCallback}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import{SquarePaymentForm,CreditCardNumberInput,CreditCardExpirationDateInput,CreditCardPostalCodeInput,CreditCardCVVInput,CreditCardSubmitButton}from\"react-square-payment-form\";import{faChevronLeft,faChevronRight,faChevronCircleDown,faSquare}from\"@fortawesome/free-solid-svg-icons\";import{Redirect,Link}from\"react-router-dom\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import axios from\"axios\";import getClientsQuery from\"../../graphql/queries/getClientsQuery\";import removeOneUnsavedSquareCardIDsMutation from\"../../graphql/mutations/removeOneUnsavedSquareCardIDsMutation\";import updateUnsavedSquareCardIDsMutation from\"../../graphql/mutations/updateUnsavedSquareCardIDsMutation\";import updateClientSquareIDMutation from\"../../graphql/mutations/updateClientSquareIDMutation\";import{useMutation,useQuery}from\"@apollo/react-hooks\";import{FormGroup,Label,Input}from\"reactstrap\";import{css}from\"@emotion/css\";import ClipLoader from\"react-spinners/ClipLoader\";import{Spring}from\"react-spring/renderprops\";import ACTION_SAVE_CARD_UNCHECKED from\"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_UNCHECKED\";import ACTION_SAVE_CARD_CHECKED from\"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_CHECKED\";import ACTION_SQUARE_CUSTOMER_ID_RESET from\"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID_RESET\";import ACTION_SQUARE_CUSTOMER_ID from\"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID\";import ACTION_BOOKED_WITH_CARD_ID_RESET from\"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID_RESET\";import ACTION_BOOKED_WITH_CARD_ID from\"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID\";import ACTION_CONFIRMATION_PAGE_OPENED from\"../../actions/InCart/CartPageOpened/ACTION_CONFIRMATION_PAGE_OPENED\";import ACTION_TIME_PREFERENCE_PAGE_OPENED from\"../../actions/InCart/CartPageOpened/ACTION_TIME_PREFERENCE_PAGE_OPENED\";import ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED from\"../../actions/InCart/CartPageOpened/ACTION_GUEST_CHECKOUT_FORM_PAGE_OPENED\";import\"./PaymentInfo.css\";import\"../account/clientprofile/ConsentForm/ConsentForm.css\";const PaymentInfo=props=>{const dispatch=useDispatch();const userAuthenticated=useSelector(state=>state.userAuthenticated.user_authenticated);const saveCardChecked=useSelector(state=>state.saveCardChecked.save_card_checked);const squareCustomerID=useSelector(state=>state.squareCustomerID.square_customer_id);const bookedWithCardID=useSelector(state=>state.bookedWithCardID.booked_with_card_id);// Checkout Form States\nconst firstName=useSelector(state=>state.firstName.first_name);const lastName=useSelector(state=>state.lastName.last_name);const email=useSelector(state=>state.email.email);const phoneNumber=useSelector(state=>state.phoneNumber.phone_number);const splashScreenComplete=useSelector(state=>state.splashScreenComplete.splashScreenComplete);const _useState=useState([]),_useState2=_slicedToArray(_useState,2),errorMessages=_useState2[0],changeErrorMessage=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),cardHolderFirstName=_useState4[0],changeCardHolderFirstName=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),cardHolderLastName=_useState6[0],changeCardHolderLastName=_useState6[1];const _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),successfulCardNonce=_useState8[0],changeSuccessfulCardNonce=_useState8[1];const _useState9=useState(\"\"),_useState10=_slicedToArray(_useState9,2),squareStoredCreditCards=_useState10[0],changeSquareStoredCreditCards=_useState10[1];const _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),squareCustomerInfo=_useState12[0],changeSquareCustomerInfo=_useState12[1];const _useState13=useState({name:\"\",id:\"\"}),_useState14=_slicedToArray(_useState13,2),selectedCreditCard=_useState14[0],changeSelectedCreditCard=_useState14[1];const _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),selectedCreditCardFullData=_useState16[0],changeSelectedCreditCardFullData=_useState16[1];const _useState17=useState(true),_useState18=_slicedToArray(_useState17,2),squareFormLoading=_useState18[0],changeSquareFormLoading=_useState18[1];const _useState19=useState(false),_useState20=_slicedToArray(_useState19,2),pageOpened=_useState20[0],changePageOpened=_useState20[1];const _useState21=useState(false),_useState22=_slicedToArray(_useState21,2),clipLoaderActive=_useState22[0],changeClipLoaderActive=_useState22[1];const _useMutation=useMutation(updateUnsavedSquareCardIDsMutation),_useMutation2=_slicedToArray(_useMutation,1),updateUnsavedSquareCardIDs=_useMutation2[0];const _useMutation3=useMutation(updateClientSquareIDMutation),_useMutation4=_slicedToArray(_useMutation3,1),updateClientSquareID=_useMutation4[0];const _useMutation5=useMutation(removeOneUnsavedSquareCardIDsMutation),_useMutation6=_slicedToArray(_useMutation5,1),removeOneUnsavedSquareCardIDs=_useMutation6[0];const _useQuery=useQuery(getClientsQuery,{fetchPolicy:\"no-cache\"}),getClientsData=_useQuery.data,getClientsDataRefetch=_useQuery.refetch;useEffect(()=>{changePageOpened(true);const pageNowOpen=setTimeout(()=>{changePageOpened(false);},500);return()=>{clearTimeout(pageNowOpen);};},[]);useEffect(()=>{if(userAuthenticated){if(bookedWithCardID){if(squareStoredCreditCards){const cardFullData=squareStoredCreditCards.filter(x=>x.id===bookedWithCardID)[0];if(!selectedCreditCard.name){changeSelectedCreditCard({name:cardFullData.cardBrand.split(\"_\").join(\" \")+\" - \"+cardFullData.last4,id:cardFullData.id});changeCardHolderFirstName(squareCustomerInfo.givenName.toUpperCase());changeCardHolderLastName(squareCustomerInfo.familyName.toUpperCase());changeSelectedCreditCardFullData(cardFullData);}}}}},[squareCustomerInfo,bookedWithCardID,squareStoredCreditCards,userAuthenticated,pageOpened,selectedCreditCard]);const deleteSquareCustomerFunction=useCallback(()=>{return axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/delete_customer\"),{data:{squareCustomerId:squareCustomerID}},{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}});},[squareCustomerID]);useEffect(()=>{if(!userAuthenticated){if(pageOpened&&squareCustomerID){let matchedClient;const deleteCustomer=setTimeout(()=>{if(getClientsData){for(let i=0;i<getClientsData.clients.length;i++){if(getClientsData.clients[i].email===email){matchedClient=getClientsData.clients[i];}}}if(!matchedClient){const deleteCustomerData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return deleteSquareCustomerFunction();case 2:dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());dispatch(ACTION_SQUARE_CUSTOMER_ID_RESET());case 4:case\"end\":return _context.stop();}},_callee);}));return function deleteCustomerData(){return _ref.apply(this,arguments);};}();deleteCustomerData();}},500);return()=>{clearTimeout(deleteCustomer);};}}},[deleteSquareCustomerFunction,email,getClientsData,pageOpened,userAuthenticated,squareCustomerID,dispatch]);useEffect(()=>{if(userAuthenticated){props.clientDataRefetch();}},[props,userAuthenticated]);useEffect(()=>{if(!squareFormLoading){if(!props.currentScreenSize){if(!props.initialScreenSize>=1200){window.scrollTo(0,0);}else{window.scrollTo(0,props.largeScreenFrozenScrollPosition);}}else{if(!props.currentScreenSize>=1200){window.scrollTo(0,0);}else{window.scrollTo(0,props.largeScreenFrozenScrollPosition);}}}},[squareFormLoading,props.currentScreenSize,props.initialScreenSize,props.largeScreenFrozenScrollPosition]);const override=css(_templateObject());useEffect(()=>{if(squareStoredCreditCards){if(selectedCreditCard&&selectedCreditCard.name&&selectedCreditCard.id){const creditCardSplitArr=selectedCreditCard.name.split(\" -\");const fullData=squareStoredCreditCards.find(x=>{return x.cardBrand===creditCardSplitArr[0].replace(\" \",\"_\").trim()&&x.last4===creditCardSplitArr[creditCardSplitArr.length-1].trim()&&x.id===selectedCreditCard.id;});if(fullData){changeSelectedCreditCardFullData(fullData);}}}},[selectedCreditCard,squareStoredCreditCards]);const retrieveSquareCustomerFunction=useCallback(matchedClient=>{return axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/retrieve_customer\"),{data:{squareCustomerId:userAuthenticated?props.getClientData?props.getClientData.client?props.getClientData.client.squareCustomerId:matchedClient?matchedClient.squareCustomerId:null:matchedClient?matchedClient.squareCustomerId:null:matchedClient?matchedClient.squareCustomerId:null}},{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}});},[props.getClientData,userAuthenticated]);useEffect(()=>{if(userAuthenticated){if(!squareStoredCreditCards){const fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var customerData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return retrieveSquareCustomerFunction();case 2:customerData=_context2.sent;if(customerData){if(customerData.data){if(customerData.data.customer){changeSquareStoredCreditCards(customerData.data.customer.cards);changeSquareCustomerInfo(customerData.data.customer);}}}case 4:case\"end\":return _context2.stop();}},_callee2);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();}}},[userAuthenticated,retrieveSquareCustomerFunction,squareStoredCreditCards]);const renderStoredCreditCardOptions=()=>{if(squareStoredCreditCards){return squareStoredCreditCards.filter(x=>!props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).map((x,i)=>{return/*#__PURE__*/React.createElement(\"option\",{value:JSON.stringify({name:x.cardBrand.split(\"_\").join(\" \")+\" - \"+x.last4,id:x.id}),key:i},x.cardBrand.split(\"_\").join(\" \")+\" - \"+x.last4);});}};const cardNonceResponseReceived=(errors,nonce,cardData,buyerVerificationToken)=>{changeClipLoaderActive(true);if(errors){changeClipLoaderActive(false);return changeErrorMessage(errors.map(error=>error?error.message:null));}else{changeErrorMessage([]);let matchedClient;if(getClientsData){for(let i=0;i<getClientsData.clients.length;i++){if(getClientsData.clients[i].email===email){matchedClient=getClientsData.clients[i];}}}const squareCustomerData={family_name:props.getClientData?props.getClientData.client.lastName:lastName,given_name:props.getClientData?props.getClientData.client.firstName:firstName,email_address:props.getClientData?props.getClientData.client.email:email,phone_number:props.getClientData?props.getClientData.client.phoneNumber:phoneNumber};const squarePostRequestFunction=()=>{axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/customers\"),squareCustomerData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}}).then((res,err)=>{const squareData={card_nonce:nonce,billingAddress:{postalCode:cardData.billing_postal_code},cardholderName:(userAuthenticated?cardHolderFirstName?cardHolderFirstName:props.getClientData.client.firstName:cardHolderFirstName?cardHolderFirstName:firstName).trim()+\" \"+(userAuthenticated?cardHolderLastName?cardHolderLastName:props.getClientData.client.lastName:cardHolderLastName?cardHolderLastName:lastName).trim(),verification_token:buyerVerificationToken,customerId:JSON.parse(res.request.response).customer.id};if(userAuthenticated){updateClientSquareID({variables:{squareCustomerId:JSON.parse(res.request.response).customer.id,firstName:props.getClientData.client.firstName,lastName:props.getClientData.client.lastName,email:props.getClientData.client.email}});props.clientDataRefetch();}else{if(matchedClient){if(!matchedClient.squareCustomerId){updateClientSquareID({variables:{squareCustomerId:JSON.parse(res.request.response).customer.id,firstName:firstName,lastName:lastName,email:email}});getClientsDataRefetch();}}else{dispatch(ACTION_SQUARE_CUSTOMER_ID(JSON.parse(res.request.response).customer.id));}}if(!saveCardChecked&&userAuthenticated){updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:cardData.id,firstName:userAuthenticated?props.getClientData.client.firstName:firstName,lastName:userAuthenticated?props.getClientData.client.lastName:lastName,email:userAuthenticated?props.getClientData.client.email:email}});props.clientDataRefetch();}return axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/customers/card\"),squareData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}});}).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res){var deleteCardData,matchedDuplicateCard;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(!res.data.error){_context3.next=5;break;}changeClipLoaderActive(false);return _context3.abrupt(\"return\",changeErrorMessage(res.data.error.map(error=>error.detail)));case 5:changeErrorMessage([]);if(!squareStoredCreditCards){_context3.next=17;break;}if(!squareStoredCreditCards.some(x=>x.billingAddress.postalCode===res.data.card.billingAddress.postalCode&&x.cardBrand===res.data.card.cardBrand&&x.cardholderName===res.data.card.cardholderName&&x.expMonth===res.data.card.expMonth&&x.expYear===res.data.card.expYear&&x.last4===res.data.card.last4)){_context3.next=17;break;}deleteCardData={customerId:userAuthenticated?props.getClientData.client.squareCustomerId:matchedClient.squareCustomerId,cardId:res.data.card.id};matchedDuplicateCard=squareStoredCreditCards.filter(x=>x.billingAddress.postalCode===res.data.card.billingAddress.postalCode&&x.cardBrand===res.data.card.cardBrand&&x.cardholderName===res.data.card.cardholderName&&x.expMonth===res.data.card.expMonth&&x.expYear===res.data.card.expYear&&x.last4===res.data.card.last4)[0];dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));changeClipLoaderActive(false);changeSuccessfulCardNonce(true);if(saveCardChecked){if(userAuthenticated){if(props.getClientData.client.unsavedSquareCardIDs.includes(matchedDuplicateCard.id)){removeOneUnsavedSquareCardIDs({variables:{unsavedSquareCardID:matchedDuplicateCard.id,firstName:props.getClientData.client.firstName,lastName:props.getClientData.client.lastName,email:props.getClientData.client.email}});}}}_context3.next=16;return axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/customers/delete_card\"),deleteCardData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}});case 16:return _context3.abrupt(\"return\",_context3.sent);case 17:dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));changeSuccessfulCardNonce(true);changeClipLoaderActive(false);if(!saveCardChecked&&userAuthenticated){updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:res.data.card.id,firstName:userAuthenticated?props.getClientData.client.firstName:firstName,lastName:userAuthenticated?props.getClientData.client.lastName:lastName,email:userAuthenticated?props.getClientData.client.email:email}});props.clientDataRefetch();}case 21:case\"end\":return _context3.stop();}},_callee3);}));return function(_x){return _ref3.apply(this,arguments);};}()).catch(err=>{console.error(err);});};const returningClientSquarePostRequestFunction=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var squareData;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:squareData={card_nonce:nonce,billingAddress:{postalCode:cardData.billing_postal_code},cardholderName:(userAuthenticated?cardHolderFirstName?cardHolderFirstName:props.getClientData.client.firstName.toUpperCase():cardHolderFirstName?cardHolderFirstName:firstName.toUpperCase()).trim()+\" \"+(userAuthenticated?cardHolderLastName?cardHolderLastName:props.getClientData.client.lastName.toUpperCase():cardHolderLastName?cardHolderLastName:lastName.toUpperCase()).trim(),verification_token:buyerVerificationToken,customerId:userAuthenticated?props.getClientData.client.squareCustomerId:matchedClient.squareCustomerId};changeSuccessfulCardNonce(true);changeClipLoaderActive(false);_context5.next=5;return axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/customers/card\"),squareData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}}).then(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res){var deleteCardData,matchedDuplicateCard;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(!squareStoredCreditCards){_context4.next=11;break;}if(!squareStoredCreditCards.some(x=>x.billingAddress.postalCode===res.data.card.billingAddress.postalCode&&x.cardBrand===res.data.card.cardBrand&&x.cardholderName===res.data.card.cardholderName&&x.expMonth===res.data.card.expMonth&&x.expYear===res.data.card.expYear&&x.last4===res.data.card.last4)){_context4.next=11;break;}deleteCardData={customerId:userAuthenticated?props.getClientData.client.squareCustomerId:matchedClient.squareCustomerId,cardId:res.data.card.id};matchedDuplicateCard=squareStoredCreditCards.filter(x=>x.billingAddress.postalCode===res.data.card.billingAddress.postalCode&&x.cardBrand===res.data.card.cardBrand&&x.cardholderName===res.data.card.cardholderName&&x.expMonth===res.data.card.expMonth&&x.expYear===res.data.card.expYear&&x.last4===res.data.card.last4)[0];dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));changeSuccessfulCardNonce(true);changeClipLoaderActive(false);if(saveCardChecked){if(userAuthenticated){if(props.getClientData.client.unsavedSquareCardIDs.includes(matchedDuplicateCard.id)){removeOneUnsavedSquareCardIDs({variables:{unsavedSquareCardID:matchedDuplicateCard.id,firstName:props.getClientData.client.firstName,lastName:props.getClientData.client.lastName,email:props.getClientData.client.email}});}}}_context4.next=10;return axios.post(\"\".concat(process.env.REACT_APP_ENV===\"production\"?process.env.REACT_APP_PRODUCTION_SERVER_URL:\"http://localhost:4000\",\"/api/customers/delete_card\"),deleteCardData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,Accept:\"application/json\",\"Content-Type\":\"application/json\"}});case 10:return _context4.abrupt(\"return\",_context4.sent);case 11:dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));changeSuccessfulCardNonce(true);changeClipLoaderActive(false);if(!saveCardChecked&&userAuthenticated){updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:res.data.card.id,firstName:props.getClientData?props.getClientData.client.firstName:firstName,lastName:props.getClientData?props.getClientData.client.lastName:lastName,email:props.getClientData?props.getClientData.client.email:email}});props.clientDataRefetch();}else if(!userAuthenticated){updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:res.data.card.id,firstName:matchedClient.firstName,lastName:matchedClient.lastName,email:matchedClient.email}});getClientsDataRefetch();}case 15:case\"end\":return _context4.stop();}},_callee4);}));return function(_x2){return _ref5.apply(this,arguments);};}()).catch(err=>{console.error(err);});case 5:return _context5.abrupt(\"return\",_context5.sent);case 6:case\"end\":return _context5.stop();}},_callee5);}));return function returningClientSquarePostRequestFunction(){return _ref4.apply(this,arguments);};}();userAuthenticated?props.getClientData.client.squareCustomerId?cardHolderFirstName&&cardHolderLastName&&!selectedCreditCard.name?returningClientSquarePostRequestFunction():retrieveSquareCustomerFunction():squarePostRequestFunction():matchedClient?matchedClient.squareCustomerId?returningClientSquarePostRequestFunction():squarePostRequestFunction():squarePostRequestFunction();}};const createVerificationDetails=()=>{return{amount:\"\",currencyCode:\"\",intent:\"STORE\",billingContact:{familyName:userAuthenticated?cardHolderLastName?cardHolderLastName:props.getClientData.client.lastName:cardHolderLastName?cardHolderLastName:lastName,givenName:userAuthenticated?cardHolderFirstName?cardHolderFirstName:props.getClientData.client.firstName:cardHolderFirstName?cardHolderFirstName:firstName,email:userAuthenticated?props.getClientData.client.email:email,phone:userAuthenticated?props.getClientData.client.phoneNumber:phoneNumber}};};const redirectToHome=()=>{if(!splashScreenComplete){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}else if(!props.currentScreenSize){if(props.initialScreenSize>=1200){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}}else if(props.currentScreenSize>=1200){return/*#__PURE__*/React.createElement(Redirect,{to:\"/\"});}};const redirectToCheckout=()=>{if(successfulCardNonce){if(!props.currentScreenSize){if(props.initialScreenSize>=1200){dispatch(ACTION_CONFIRMATION_PAGE_OPENED());}else{dispatch(ACTION_CONFIRMATION_PAGE_OPENED());return/*#__PURE__*/React.createElement(Redirect,{to:\"/checkout/confirmation\"});}}else{if(props.currentScreenSize>=1200){dispatch(ACTION_CONFIRMATION_PAGE_OPENED());}else{dispatch(ACTION_CONFIRMATION_PAGE_OPENED());return/*#__PURE__*/React.createElement(Redirect,{to:\"/checkout/confirmation\"});}}}};const handleCardHolderFirstName=e=>{changeCardHolderFirstName(e.currentTarget.value.toUpperCase().trim());};const handleCardHolderLastName=e=>{changeCardHolderLastName(e.currentTarget.value.toUpperCase().trim());};useEffect(()=>{const iFrameLabel=[...document.getElementsByClassName(\"sq-label\")].filter(x=>x.innerText===\"CREDIT CARD\"||x.innerText===\"EXPIRATION\"||x.innerText===\"ZIP CODE\"||x.innerText===\"CVC\");const iFrameLabelHidden=[...document.getElementsByClassName(\"sq-label\")].filter(x=>x.className.includes(\"sq-payment-form-hidden\"));if(selectedCreditCardFullData){document.getElementById(\"sq-payment-form-sq-card-number\").classList.add(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-expiration-date\").classList.add(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-postal-code\").classList.add(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-cvv\").classList.add(\"sq-payment-form-hidden\");if(iFrameLabel){if(iFrameLabel.length>0){iFrameLabel.forEach(x=>x.classList.add(\"sq-payment-form-hidden\"));}}}else{document.getElementById(\"sq-payment-form-sq-card-number\").classList.remove(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-expiration-date\").classList.remove(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-postal-code\").classList.remove(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-cvv\").classList.remove(\"sq-payment-form-hidden\");if(iFrameLabelHidden){if(iFrameLabelHidden.length>0){iFrameLabelHidden.forEach(x=>{x.classList.remove(\"sq-payment-form-hidden\");});}}}},[selectedCreditCardFullData]);const checkMark=()=>{return/*#__PURE__*/React.createElement(Spring,{from:{x:100},to:{x:0},config:{duration:2000}},styles=>/*#__PURE__*/React.createElement(\"svg\",{width:props.currentScreenSize===\"\"?props.initialScreenSize>=1800?\"2rem\":props.initialScreenSize>=1600?\"1rem\":props.initialScreenSize>=1200?\"0.5rem\":\"100%\":props.currentScreenSize>=1800?\"2rem\":props.currentScreenSize>=1600?\"1rem\":props.currentScreenSize>=1200?\"0.5rem\":\"100%\",height:props.currentScreenSize===\"\"?props.initialScreenSize>=1800?\"2rem\":props.initialScreenSize>=1600?\"1.3rem\":props.initialScreenSize>=1200?\"0.5rem\":props.initialScreenSize>=360?\"2rem\":\"1rem\":props.currentScreenSize>=1800?\"2rem\":props.currentScreenSize>=1600?\"1.3rem\":props.currentScreenSize>=1200?\"0.5rem\":props.currentScreenSize>=360?\"2rem\":\"1rem\",style:{display:\"block\"},viewBox:\"0 0 13.229 13.229\"},/*#__PURE__*/React.createElement(\"path\",{d:\"M2.851 7.56l2.45 2.482 5.36-6.958\",fill:\"none\",stroke:\"#000\",strokeDasharray:\"100\",strokeDashoffset:pageOpened?0:\"\".concat(styles.x),strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"3\"})));};const handleSaveCardChecked=()=>{if(saveCardChecked){dispatch(ACTION_SAVE_CARD_UNCHECKED());}else{dispatch(ACTION_SAVE_CARD_CHECKED());}};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"payment_info_container\"},redirectToHome(),redirectToCheckout(),/*#__PURE__*/React.createElement(\"div\",{className:\"clip_loader_spinner_container\",style:{display:clipLoaderActive||squareFormLoading?\"flex\":\"none\"}},/*#__PURE__*/React.createElement(ClipLoader,{size:100,css:override,color:\"rgb(44, 44, 52)\",loading:clipLoaderActive||squareFormLoading})),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_info_container_header\"},/*#__PURE__*/React.createElement(Link,{to:()=>{if(!props.currentScreenSize){if(props.initialScreenSize>=1200){return\"/\";}else{if(userAuthenticated){return\"/availability/timepreference\";}else{return\"/checkout\";}}}else{if(props.currentScreenSize>=1200){return\"/\";}else{if(userAuthenticated){return\"/availability/timepreference\";}else{return\"/checkout\";}}}},onClick:()=>{if(userAuthenticated){dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED());}else{dispatch(ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED());}}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"payment_info_back_arrow\",icon:faChevronLeft})),/*#__PURE__*/React.createElement(\"h1\",null,\"PAYMENT INFO\"),userAuthenticated&&bookedWithCardID?/*#__PURE__*/React.createElement(Link,{to:()=>{if(!props.currentScreenSize){if(props.initialScreenSize>=1200){return\"/\";}else{return\"/checkout/confirmation\";}}else{if(props.currentScreenSize>=1200){return\"/\";}else{return\"/checkout/confirmation\";}}},onClick:()=>{dispatch(ACTION_CONFIRMATION_PAGE_OPENED());}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"payment_info_forward_arrow\",icon:faChevronRight})):null),/*#__PURE__*/React.createElement(\"div\",{className:\"payment_info_header\"},/*#__PURE__*/React.createElement(\"h2\",null,\"ENTER\",\" \",!props.currentScreenSize?props.initialScreenSize<=360?null:\"YOUR\":props.currentScreenSize<=360?null:\"YOUR\",\" \",\"PAYMENT INFORMATION\")),/*#__PURE__*/React.createElement(\"p\",{className:\"payment_info_statement\"},\"Your credit card will be used to hold your time slot and will not be charged until after your appointment. You may change your payment method after your service.\"),/*#__PURE__*/React.createElement(\"div\",{className:\"square_payment_form_container\"},/*#__PURE__*/React.createElement(SquarePaymentForm,{sandbox:true,applicationId:process.env.REACT_APP_SQUARE_SANDBOX_APPLICATION_ID,locationId:process.env.REACT_APP_SQUARE_SANDBOX_LOCATION_ID,cardNonceResponseReceived:cardNonceResponseReceived,createVerificationDetails:createVerificationDetails,paymentFormLoaded:()=>changeSquareFormLoading(false),className:\"square_payment_form\",placeholderCVV:\"CVC\"},/*#__PURE__*/React.createElement(\"fieldset\",{className:\"sq-fieldset\"},!userAuthenticated||userAuthenticated&&!squareStoredCreditCards||(userAuthenticated&&squareStoredCreditCards?squareStoredCreditCards.filter(x=>!props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).length===0:false)?null:/*#__PURE__*/React.createElement(FormGroup,{className:\"choose_a_credit_card_formgroup\"},/*#__PURE__*/React.createElement(Label,{className:\"sq-label\",for:\"select\"},\"CHOOSE A CREDIT CARD\"),/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"choose_a_credit_card_dropdown_icon\",icon:faChevronCircleDown}),/*#__PURE__*/React.createElement(Input,{className:\"sq-cardholder-input\",type:\"select\",name:\"select\",id:\"select\",disabled:!userAuthenticated||userAuthenticated&&!squareStoredCreditCards||(userAuthenticated&&squareStoredCreditCards?squareStoredCreditCards.filter(x=>!props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).length===0:false),value:userAuthenticated?bookedWithCardID?squareStoredCreditCards?JSON.stringify({name:squareStoredCreditCards.filter(x=>x.id===bookedWithCardID)[0].cardBrand.split(\"_\").join(\" \")+\" - \"+squareStoredCreditCards.filter(x=>x.id===bookedWithCardID)[0].last4,id:bookedWithCardID}):JSON.stringify({name:selectedCreditCard.name,id:selectedCreditCard.id}):JSON.stringify({name:selectedCreditCard.name,id:selectedCreditCard.id}):JSON.stringify({name:selectedCreditCard.name,id:selectedCreditCard.id}),onChange:e=>{const optionsArr=[{name:\"\",id:\"\",index:0}].concat(squareStoredCreditCards.filter(x=>!props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).map((x,i)=>{return{name:x.cardBrand.split(\"_\").join(\" \")+\" - \"+x.last4,id:x.id,index:i};}));let chosenItem=optionsArr.filter((item,index)=>index===e.target.options.selectedIndex)[0];if(selectedCreditCard.name){dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());changeSelectedCreditCard({name:chosenItem.name,id:chosenItem.id});changeCardHolderFirstName(squareCustomerInfo.givenName.toUpperCase());changeCardHolderLastName(squareCustomerInfo.familyName.toUpperCase());if(e.target.value===\"NEW CARD\"){dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());changeSelectedCreditCard({name:\"\",id:\"\"});changeSelectedCreditCardFullData(\"\");changeCardHolderFirstName(\"\");changeCardHolderLastName(\"\");}}else{dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());changeSelectedCreditCard({name:chosenItem.name,id:chosenItem.id});changeCardHolderFirstName(squareCustomerInfo.givenName.toUpperCase());changeCardHolderLastName(squareCustomerInfo.familyName.toUpperCase());}}},/*#__PURE__*/React.createElement(\"option\",null,\"NEW CARD\"),renderStoredCreditCardOptions())),/*#__PURE__*/React.createElement(\"div\",{className:\"sq_card_holder_container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"CARDHOLDER FIRST NAME\"),/*#__PURE__*/React.createElement(\"input\",{name:\"first_name\",type:\"text\",maxLength:\"100\",placeholder:\"Enter cardholder first name here\",className:\"sq-cardholder-input\",disabled:selectedCreditCardFullData?true:false,onChange:handleCardHolderFirstName,value:cardHolderFirstName})),/*#__PURE__*/React.createElement(\"div\",{className:\"sq_card_holder_container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"CARDHOLDER LAST NAME\"),/*#__PURE__*/React.createElement(\"input\",{name:\"last_name\",type:\"text\",maxLength:\"100\",placeholder:\"Enter cardholder last name here\",className:\"sq-cardholder-input\",disabled:selectedCreditCardFullData?true:false,onChange:handleCardHolderLastName,value:cardHolderLastName})),selectedCreditCardFullData?/*#__PURE__*/React.createElement(\"div\",{className:\"sq_card_holder_container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"CREDIT CARD \"),/*#__PURE__*/React.createElement(\"input\",{name:\"credit_card\",type:\"text\",maxLength:\"100\",className:\"sq-cardholder-input\",disabled:selectedCreditCardFullData?true:false,value:selectedCreditCardFullData.cardBrand.toLowerCase()===\"american_express\"?\"•••• •••••• •\"+selectedCreditCardFullData.last4:\"•••• •••• •••• \"+selectedCreditCardFullData.last4})):null,/*#__PURE__*/React.createElement(CreditCardNumberInput,null),/*#__PURE__*/React.createElement(\"div\",{className:\"sq_third_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sq-form-third_credit_card\"},/*#__PURE__*/React.createElement(CreditCardExpirationDateInput,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"sq-form-third_postal\"},/*#__PURE__*/React.createElement(CreditCardPostalCodeInput,{label:\"ZIP CODE\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"sq-form-third_cvv\"},/*#__PURE__*/React.createElement(CreditCardCVVInput,{label:\"CVC\"}))),selectedCreditCardFullData?/*#__PURE__*/React.createElement(\"div\",{className:\"sq_third_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sq-form-third_credit_card\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"EXPIRATION \"),/*#__PURE__*/React.createElement(\"input\",{name:\"expiration_date\",type:\"text\",className:\"sq-cardholder-input\",disabled:selectedCreditCardFullData?true:false,value:selectedCreditCardFullData.expMonth>=10?selectedCreditCardFullData.expMonth.toString()+\"/\"+selectedCreditCardFullData.expYear.toString().substr(-2):\"0\"+selectedCreditCardFullData.expMonth.toString()+\"/\"+selectedCreditCardFullData.expYear.toString().substr(-2)})),/*#__PURE__*/React.createElement(\"div\",{className:\"sq-form-third_postal\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"ZIP CODE \"),/*#__PURE__*/React.createElement(\"input\",{name:\"postalCode\",type:\"text\",className:\"sq-cardholder-input\",disabled:selectedCreditCardFullData?true:false,value:\"•••••\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"sq-form-third_cvv\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"CVC \"),/*#__PURE__*/React.createElement(\"input\",{name:\"cvc_code\",type:\"text\",className:\"sq-cardholder-input\",disabled:selectedCreditCardFullData?true:false,value:selectedCreditCardFullData.cardBrand.toLowerCase()===\"american_express\"?\"••••\":\"•••\"}))):null,!selectedCreditCard.name&&!selectedCreditCard.id&&userAuthenticated?/*#__PURE__*/React.createElement(\"div\",{className:\"sq_save_card_information_container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"fa-layers fa-fw client_consent_form_checkbox\",style:{transform:!props.currentScreenSize?props.initialScreenSize>=1200?\"scale(1.5) translate(0%, -26%)\":null:props.currentScreenSize>=1200?\"scale(1.5) translate(0%, -26%)\":null},onClick:handleSaveCardChecked},/*#__PURE__*/React.createElement(FontAwesomeIcon,{color:\"rgba(155, 155, 155, 0.4)\",transform:!props.currentScreenSize?props.initialScreenSize>=360?\"grow-20\":\"grow-10\":props.currentScreenSize>=360?\"grow-20\":\"grow-10\",icon:faSquare}),saveCardChecked?checkMark():null),/*#__PURE__*/React.createElement(\"p\",null,\"Save this card information for future bookings?\")):null),selectedCreditCardFullData||!selectedCreditCard.name&&(!cardHolderFirstName||!cardHolderLastName)&&errorMessages.length===0?/*#__PURE__*/React.createElement(Link,{to:()=>{if(!props.currentScreenSize){if(props.initialScreenSize>=1200){return\"/\";}else{return\"/checkout/confirmation\";}}else{if(props.currentScreenSize>=1200){return\"/\";}else{return\"/checkout/confirmation\";}}},style:{display:\"block\",pointerEvents:!selectedCreditCard.name&&(!cardHolderFirstName||!cardHolderLastName)?\"none\":\"auto\",cursor:\"pointer\"},onClick:()=>{if(userAuthenticated){if(selectedCreditCardFullData){dispatch(ACTION_BOOKED_WITH_CARD_ID(selectedCreditCardFullData.id));dispatch(ACTION_CONFIRMATION_PAGE_OPENED());}}}},/*#__PURE__*/React.createElement(\"div\",{className:\"sq-creditcard\"},\"Submit Card Information\")):/*#__PURE__*/React.createElement(CreditCardSubmitButton,{style:{cursor:\"pointer\"}},\"Submit Card Information\")),selectedCreditCardFullData&&errorMessages.length===0?null:/*#__PURE__*/React.createElement(\"div\",{className:\"sq-error-message\"},errorMessages.map(errorMessage=>/*#__PURE__*/React.createElement(\"li\",{key:\"sq-error-\".concat(errorMessage)},errorMessage))))));};export default PaymentInfo;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/payment_info/PaymentInfo.js"],"names":["React","useState","useEffect","useCallback","useSelector","useDispatch","SquarePaymentForm","CreditCardNumberInput","CreditCardExpirationDateInput","CreditCardPostalCodeInput","CreditCardCVVInput","CreditCardSubmitButton","faChevronLeft","faChevronRight","faChevronCircleDown","faSquare","Redirect","Link","FontAwesomeIcon","axios","getClientsQuery","removeOneUnsavedSquareCardIDsMutation","updateUnsavedSquareCardIDsMutation","updateClientSquareIDMutation","useMutation","useQuery","FormGroup","Label","Input","css","ClipLoader","Spring","ACTION_SAVE_CARD_UNCHECKED","ACTION_SAVE_CARD_CHECKED","ACTION_SQUARE_CUSTOMER_ID_RESET","ACTION_SQUARE_CUSTOMER_ID","ACTION_BOOKED_WITH_CARD_ID_RESET","ACTION_BOOKED_WITH_CARD_ID","ACTION_CONFIRMATION_PAGE_OPENED","ACTION_TIME_PREFERENCE_PAGE_OPENED","ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED","PaymentInfo","props","dispatch","userAuthenticated","state","user_authenticated","saveCardChecked","save_card_checked","squareCustomerID","square_customer_id","bookedWithCardID","booked_with_card_id","firstName","first_name","lastName","last_name","email","phoneNumber","phone_number","splashScreenComplete","errorMessages","changeErrorMessage","cardHolderFirstName","changeCardHolderFirstName","cardHolderLastName","changeCardHolderLastName","successfulCardNonce","changeSuccessfulCardNonce","squareStoredCreditCards","changeSquareStoredCreditCards","squareCustomerInfo","changeSquareCustomerInfo","name","id","selectedCreditCard","changeSelectedCreditCard","selectedCreditCardFullData","changeSelectedCreditCardFullData","squareFormLoading","changeSquareFormLoading","pageOpened","changePageOpened","clipLoaderActive","changeClipLoaderActive","updateUnsavedSquareCardIDs","updateClientSquareID","removeOneUnsavedSquareCardIDs","fetchPolicy","getClientsData","data","getClientsDataRefetch","refetch","pageNowOpen","setTimeout","clearTimeout","cardFullData","filter","x","cardBrand","split","join","last4","givenName","toUpperCase","familyName","deleteSquareCustomerFunction","post","process","env","REACT_APP_ENV","REACT_APP_PRODUCTION_SERVER_URL","squareCustomerId","headers","Authorization","REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN","Accept","matchedClient","deleteCustomer","i","clients","length","deleteCustomerData","clientDataRefetch","currentScreenSize","initialScreenSize","window","scrollTo","largeScreenFrozenScrollPosition","override","creditCardSplitArr","fullData","find","replace","trim","retrieveSquareCustomerFunction","getClientData","client","fetchData","customerData","customer","cards","renderStoredCreditCardOptions","unsavedSquareCardIDs","includes","map","JSON","stringify","cardNonceResponseReceived","errors","nonce","cardData","buyerVerificationToken","error","message","squareCustomerData","family_name","given_name","email_address","squarePostRequestFunction","then","res","err","squareData","card_nonce","billingAddress","postalCode","billing_postal_code","cardholderName","verification_token","customerId","parse","request","response","variables","unsavedSquareCardID","detail","some","card","expMonth","expYear","deleteCardData","cardId","matchedDuplicateCard","catch","console","returningClientSquarePostRequestFunction","createVerificationDetails","amount","currencyCode","intent","billingContact","phone","redirectToHome","redirectToCheckout","handleCardHolderFirstName","e","currentTarget","value","handleCardHolderLastName","iFrameLabel","document","getElementsByClassName","innerText","iFrameLabelHidden","className","getElementById","classList","add","forEach","remove","checkMark","duration","styles","display","handleSaveCardChecked","REACT_APP_SQUARE_SANDBOX_APPLICATION_ID","REACT_APP_SQUARE_SANDBOX_LOCATION_ID","optionsArr","index","concat","chosenItem","item","target","options","selectedIndex","toLowerCase","toString","substr","transform","pointerEvents","cursor","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  SquarePaymentForm,\r\n  CreditCardNumberInput,\r\n  CreditCardExpirationDateInput,\r\n  CreditCardPostalCodeInput,\r\n  CreditCardCVVInput,\r\n  CreditCardSubmitButton,\r\n} from \"react-square-payment-form\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faChevronCircleDown,\r\n  faSquare,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport getClientsQuery from \"../../graphql/queries/getClientsQuery\";\r\nimport removeOneUnsavedSquareCardIDsMutation from \"../../graphql/mutations/removeOneUnsavedSquareCardIDsMutation\";\r\nimport updateUnsavedSquareCardIDsMutation from \"../../graphql/mutations/updateUnsavedSquareCardIDsMutation\";\r\nimport updateClientSquareIDMutation from \"../../graphql/mutations/updateClientSquareIDMutation\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { css } from \"@emotion/css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport ACTION_SAVE_CARD_UNCHECKED from \"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_UNCHECKED\";\r\nimport ACTION_SAVE_CARD_CHECKED from \"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_CHECKED\";\r\nimport ACTION_SQUARE_CUSTOMER_ID_RESET from \"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID_RESET\";\r\nimport ACTION_SQUARE_CUSTOMER_ID from \"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID\";\r\nimport ACTION_BOOKED_WITH_CARD_ID_RESET from \"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID_RESET\";\r\nimport ACTION_BOOKED_WITH_CARD_ID from \"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID\";\r\nimport ACTION_CONFIRMATION_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_CONFIRMATION_PAGE_OPENED\";\r\nimport ACTION_TIME_PREFERENCE_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_TIME_PREFERENCE_PAGE_OPENED\";\r\nimport ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_GUEST_CHECKOUT_FORM_PAGE_OPENED\";\r\nimport \"./PaymentInfo.css\";\r\nimport \"../account/clientprofile/ConsentForm/ConsentForm.css\";\r\n\r\nconst PaymentInfo = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userAuthenticated = useSelector(\r\n    (state) => state.userAuthenticated.user_authenticated\r\n  );\r\n  const saveCardChecked = useSelector(\r\n    (state) => state.saveCardChecked.save_card_checked\r\n  );\r\n  const squareCustomerID = useSelector(\r\n    (state) => state.squareCustomerID.square_customer_id\r\n  );\r\n  const bookedWithCardID = useSelector(\r\n    (state) => state.bookedWithCardID.booked_with_card_id\r\n  );\r\n\r\n  // Checkout Form States\r\n  const firstName = useSelector((state) => state.firstName.first_name);\r\n  const lastName = useSelector((state) => state.lastName.last_name);\r\n  const email = useSelector((state) => state.email.email);\r\n  const phoneNumber = useSelector((state) => state.phoneNumber.phone_number);\r\n\r\n  const splashScreenComplete = useSelector(\r\n    (state) => state.splashScreenComplete.splashScreenComplete\r\n  );\r\n\r\n  const [errorMessages, changeErrorMessage] = useState([]);\r\n  const [cardHolderFirstName, changeCardHolderFirstName] = useState(\"\");\r\n  const [cardHolderLastName, changeCardHolderLastName] = useState(\"\");\r\n  const [successfulCardNonce, changeSuccessfulCardNonce] = useState(false);\r\n  const [squareStoredCreditCards, changeSquareStoredCreditCards] = useState(\"\");\r\n  const [squareCustomerInfo, changeSquareCustomerInfo] = useState(\"\");\r\n  const [selectedCreditCard, changeSelectedCreditCard] = useState({\r\n    name: \"\",\r\n    id: \"\",\r\n  });\r\n  const [\r\n    selectedCreditCardFullData,\r\n    changeSelectedCreditCardFullData,\r\n  ] = useState(\"\");\r\n  const [squareFormLoading, changeSquareFormLoading] = useState(true);\r\n  const [pageOpened, changePageOpened] = useState(false);\r\n  const [clipLoaderActive, changeClipLoaderActive] = useState(false);\r\n\r\n  const [updateUnsavedSquareCardIDs] = useMutation(\r\n    updateUnsavedSquareCardIDsMutation\r\n  );\r\n\r\n  const [updateClientSquareID] = useMutation(updateClientSquareIDMutation);\r\n\r\n  const [removeOneUnsavedSquareCardIDs] = useMutation(\r\n    removeOneUnsavedSquareCardIDsMutation\r\n  );\r\n\r\n  const { data: getClientsData, refetch: getClientsDataRefetch } = useQuery(\r\n    getClientsQuery,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    changePageOpened(true);\r\n    const pageNowOpen = setTimeout(() => {\r\n      changePageOpened(false);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(pageNowOpen);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userAuthenticated) {\r\n      if (bookedWithCardID) {\r\n        if (squareStoredCreditCards) {\r\n          const cardFullData = squareStoredCreditCards.filter(\r\n            (x) => x.id === bookedWithCardID\r\n          )[0];\r\n\r\n          if (!selectedCreditCard.name) {\r\n            changeSelectedCreditCard({\r\n              name:\r\n                cardFullData.cardBrand.split(\"_\").join(\" \") +\r\n                \" - \" +\r\n                cardFullData.last4,\r\n              id: cardFullData.id,\r\n            });\r\n\r\n            changeCardHolderFirstName(\r\n              squareCustomerInfo.givenName.toUpperCase()\r\n            );\r\n            changeCardHolderLastName(\r\n              squareCustomerInfo.familyName.toUpperCase()\r\n            );\r\n\r\n            changeSelectedCreditCardFullData(cardFullData);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    squareCustomerInfo,\r\n    bookedWithCardID,\r\n    squareStoredCreditCards,\r\n    userAuthenticated,\r\n    pageOpened,\r\n    selectedCreditCard,\r\n  ]);\r\n\r\n  const deleteSquareCustomerFunction = useCallback(() => {\r\n    return axios.post(\r\n      `${\r\n        process.env.REACT_APP_ENV === \"production\"\r\n          ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n          : \"http://localhost:4000\"\r\n      }/api/delete_customer`,\r\n      {\r\n        data: {\r\n          squareCustomerId: squareCustomerID,\r\n        },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  }, [squareCustomerID]);\r\n\r\n  useEffect(() => {\r\n    if (!userAuthenticated) {\r\n      if (pageOpened && squareCustomerID) {\r\n        let matchedClient;\r\n\r\n        const deleteCustomer = setTimeout(() => {\r\n          if (getClientsData) {\r\n            for (let i = 0; i < getClientsData.clients.length; i++) {\r\n              if (getClientsData.clients[i].email === email) {\r\n                matchedClient = getClientsData.clients[i];\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!matchedClient) {\r\n            const deleteCustomerData = async () => {\r\n              await deleteSquareCustomerFunction();\r\n\r\n              dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n              dispatch(ACTION_SQUARE_CUSTOMER_ID_RESET());\r\n            };\r\n            deleteCustomerData();\r\n          }\r\n        }, 500);\r\n\r\n        return () => {\r\n          clearTimeout(deleteCustomer);\r\n        };\r\n      }\r\n    }\r\n  }, [\r\n    deleteSquareCustomerFunction,\r\n    email,\r\n    getClientsData,\r\n    pageOpened,\r\n    userAuthenticated,\r\n    squareCustomerID,\r\n    dispatch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (userAuthenticated) {\r\n      props.clientDataRefetch();\r\n    }\r\n  }, [props, userAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (!squareFormLoading) {\r\n      if (!props.currentScreenSize) {\r\n        if (!props.initialScreenSize >= 1200) {\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          window.scrollTo(0, props.largeScreenFrozenScrollPosition);\r\n        }\r\n      } else {\r\n        if (!props.currentScreenSize >= 1200) {\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          window.scrollTo(0, props.largeScreenFrozenScrollPosition);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    squareFormLoading,\r\n    props.currentScreenSize,\r\n    props.initialScreenSize,\r\n    props.largeScreenFrozenScrollPosition,\r\n  ]);\r\n\r\n  const override = css`\r\n    display: block;\r\n    position: absolute;\r\n    left: 25%;\r\n    right: 25%;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (squareStoredCreditCards) {\r\n      if (\r\n        selectedCreditCard &&\r\n        selectedCreditCard.name &&\r\n        selectedCreditCard.id\r\n      ) {\r\n        const creditCardSplitArr = selectedCreditCard.name.split(\" -\");\r\n\r\n        const fullData = squareStoredCreditCards.find((x) => {\r\n          return (\r\n            x.cardBrand === creditCardSplitArr[0].replace(\" \", \"_\").trim() &&\r\n            x.last4 ===\r\n              creditCardSplitArr[creditCardSplitArr.length - 1].trim() &&\r\n            x.id === selectedCreditCard.id\r\n          );\r\n        });\r\n\r\n        if (fullData) {\r\n          changeSelectedCreditCardFullData(fullData);\r\n        }\r\n      }\r\n    }\r\n  }, [selectedCreditCard, squareStoredCreditCards]);\r\n\r\n  const retrieveSquareCustomerFunction = useCallback(\r\n    (matchedClient) => {\r\n      return axios.post(\r\n        `${\r\n          process.env.REACT_APP_ENV === \"production\"\r\n            ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n            : \"http://localhost:4000\"\r\n        }/api/retrieve_customer`,\r\n        {\r\n          data: {\r\n            squareCustomerId: userAuthenticated\r\n              ? props.getClientData\r\n                ? props.getClientData.client\r\n                  ? props.getClientData.client.squareCustomerId\r\n                  : matchedClient\r\n                  ? matchedClient.squareCustomerId\r\n                  : null\r\n                : matchedClient\r\n                ? matchedClient.squareCustomerId\r\n                : null\r\n              : matchedClient\r\n              ? matchedClient.squareCustomerId\r\n              : null,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [props.getClientData, userAuthenticated]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userAuthenticated) {\r\n      if (!squareStoredCreditCards) {\r\n        const fetchData = async () => {\r\n          const customerData = await retrieveSquareCustomerFunction();\r\n\r\n          if (customerData) {\r\n            if (customerData.data) {\r\n              if (customerData.data.customer) {\r\n                changeSquareStoredCreditCards(customerData.data.customer.cards);\r\n                changeSquareCustomerInfo(customerData.data.customer);\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        fetchData();\r\n      }\r\n    }\r\n  }, [\r\n    userAuthenticated,\r\n    retrieveSquareCustomerFunction,\r\n    squareStoredCreditCards,\r\n  ]);\r\n\r\n  const renderStoredCreditCardOptions = () => {\r\n    if (squareStoredCreditCards) {\r\n      return squareStoredCreditCards\r\n        .filter(\r\n          (x) => !props.getClientData.client.unsavedSquareCardIDs.includes(x.id)\r\n        )\r\n        .map((x, i) => {\r\n          return (\r\n            <option\r\n              value={JSON.stringify({\r\n                name: x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4,\r\n                id: x.id,\r\n              })}\r\n              key={i}\r\n            >\r\n              {x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4}\r\n            </option>\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const cardNonceResponseReceived = (\r\n    errors,\r\n    nonce,\r\n    cardData,\r\n    buyerVerificationToken\r\n  ) => {\r\n    changeClipLoaderActive(true);\r\n    if (errors) {\r\n      changeClipLoaderActive(false);\r\n      return changeErrorMessage(\r\n        errors.map((error) => (error ? error.message : null))\r\n      );\r\n    } else {\r\n      changeErrorMessage([]);\r\n\r\n      let matchedClient;\r\n\r\n      if (getClientsData) {\r\n        for (let i = 0; i < getClientsData.clients.length; i++) {\r\n          if (getClientsData.clients[i].email === email) {\r\n            matchedClient = getClientsData.clients[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      const squareCustomerData = {\r\n        family_name: props.getClientData\r\n          ? props.getClientData.client.lastName\r\n          : lastName,\r\n        given_name: props.getClientData\r\n          ? props.getClientData.client.firstName\r\n          : firstName,\r\n        email_address: props.getClientData\r\n          ? props.getClientData.client.email\r\n          : email,\r\n        phone_number: props.getClientData\r\n          ? props.getClientData.client.phoneNumber\r\n          : phoneNumber,\r\n      };\r\n\r\n      const squarePostRequestFunction = () => {\r\n        axios\r\n          .post(\r\n            `${\r\n              process.env.REACT_APP_ENV === \"production\"\r\n                ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                : \"http://localhost:4000\"\r\n            }/api/customers`,\r\n            squareCustomerData,\r\n            {\r\n              headers: {\r\n                Authorization:\r\n                  \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          )\r\n          .then((res, err) => {\r\n            const squareData = {\r\n              card_nonce: nonce,\r\n              billingAddress: { postalCode: cardData.billing_postal_code },\r\n              cardholderName:\r\n                (userAuthenticated\r\n                  ? cardHolderFirstName\r\n                    ? cardHolderFirstName\r\n                    : props.getClientData.client.firstName\r\n                  : cardHolderFirstName\r\n                  ? cardHolderFirstName\r\n                  : firstName\r\n                ).trim() +\r\n                \" \" +\r\n                (userAuthenticated\r\n                  ? cardHolderLastName\r\n                    ? cardHolderLastName\r\n                    : props.getClientData.client.lastName\r\n                  : cardHolderLastName\r\n                  ? cardHolderLastName\r\n                  : lastName\r\n                ).trim(),\r\n              verification_token: buyerVerificationToken,\r\n              customerId: JSON.parse(res.request.response).customer.id,\r\n            };\r\n\r\n            if (userAuthenticated) {\r\n              updateClientSquareID({\r\n                variables: {\r\n                  squareCustomerId: JSON.parse(res.request.response).customer\r\n                    .id,\r\n                  firstName: props.getClientData.client.firstName,\r\n                  lastName: props.getClientData.client.lastName,\r\n                  email: props.getClientData.client.email,\r\n                },\r\n              });\r\n\r\n              props.clientDataRefetch();\r\n            } else {\r\n              if (matchedClient) {\r\n                if (!matchedClient.squareCustomerId) {\r\n                  updateClientSquareID({\r\n                    variables: {\r\n                      squareCustomerId: JSON.parse(res.request.response)\r\n                        .customer.id,\r\n                      firstName: firstName,\r\n                      lastName: lastName,\r\n                      email: email,\r\n                    },\r\n                  });\r\n\r\n                  getClientsDataRefetch();\r\n                }\r\n              } else {\r\n                dispatch(\r\n                  ACTION_SQUARE_CUSTOMER_ID(\r\n                    JSON.parse(res.request.response).customer.id\r\n                  )\r\n                );\r\n              }\r\n            }\r\n\r\n            if (!saveCardChecked && userAuthenticated) {\r\n              updateUnsavedSquareCardIDs({\r\n                variables: {\r\n                  unsavedSquareCardID: cardData.id,\r\n                  firstName: userAuthenticated\r\n                    ? props.getClientData.client.firstName\r\n                    : firstName,\r\n                  lastName: userAuthenticated\r\n                    ? props.getClientData.client.lastName\r\n                    : lastName,\r\n                  email: userAuthenticated\r\n                    ? props.getClientData.client.email\r\n                    : email,\r\n                },\r\n              });\r\n\r\n              props.clientDataRefetch();\r\n            }\r\n\r\n            return axios.post(\r\n              `${\r\n                process.env.REACT_APP_ENV === \"production\"\r\n                  ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                  : \"http://localhost:4000\"\r\n              }/api/customers/card`,\r\n              squareData,\r\n              {\r\n                headers: {\r\n                  Authorization:\r\n                    \"Bearer \" +\r\n                    process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            );\r\n          })\r\n          .then(async (res) => {\r\n            if (res.data.error) {\r\n              changeClipLoaderActive(false);\r\n              return changeErrorMessage(\r\n                res.data.error.map((error) => error.detail)\r\n              );\r\n            } else {\r\n              changeErrorMessage([]);\r\n              if (squareStoredCreditCards) {\r\n                if (\r\n                  squareStoredCreditCards.some(\r\n                    (x) =>\r\n                      x.billingAddress.postalCode ===\r\n                        res.data.card.billingAddress.postalCode &&\r\n                      x.cardBrand === res.data.card.cardBrand &&\r\n                      x.cardholderName === res.data.card.cardholderName &&\r\n                      x.expMonth === res.data.card.expMonth &&\r\n                      x.expYear === res.data.card.expYear &&\r\n                      x.last4 === res.data.card.last4\r\n                  )\r\n                ) {\r\n                  const deleteCardData = {\r\n                    customerId: userAuthenticated\r\n                      ? props.getClientData.client.squareCustomerId\r\n                      : matchedClient.squareCustomerId,\r\n                    cardId: res.data.card.id,\r\n                  };\r\n\r\n                  const matchedDuplicateCard = squareStoredCreditCards.filter(\r\n                    (x) =>\r\n                      x.billingAddress.postalCode ===\r\n                        res.data.card.billingAddress.postalCode &&\r\n                      x.cardBrand === res.data.card.cardBrand &&\r\n                      x.cardholderName === res.data.card.cardholderName &&\r\n                      x.expMonth === res.data.card.expMonth &&\r\n                      x.expYear === res.data.card.expYear &&\r\n                      x.last4 === res.data.card.last4\r\n                  )[0];\r\n\r\n                  dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\r\n                  changeClipLoaderActive(false);\r\n                  changeSuccessfulCardNonce(true);\r\n\r\n                  if (saveCardChecked) {\r\n                    if (userAuthenticated) {\r\n                      if (\r\n                        props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                          matchedDuplicateCard.id\r\n                        )\r\n                      ) {\r\n                        removeOneUnsavedSquareCardIDs({\r\n                          variables: {\r\n                            unsavedSquareCardID: matchedDuplicateCard.id,\r\n                            firstName: props.getClientData.client.firstName,\r\n                            lastName: props.getClientData.client.lastName,\r\n                            email: props.getClientData.client.email,\r\n                          },\r\n                        });\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  return await axios.post(\r\n                    `${\r\n                      process.env.REACT_APP_ENV === \"production\"\r\n                        ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                        : \"http://localhost:4000\"\r\n                    }/api/customers/delete_card`,\r\n                    deleteCardData,\r\n                    {\r\n                      headers: {\r\n                        Authorization:\r\n                          \"Bearer \" +\r\n                          process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                      },\r\n                    }\r\n                  );\r\n                }\r\n              }\r\n\r\n              dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\r\n              changeSuccessfulCardNonce(true);\r\n              changeClipLoaderActive(false);\r\n              if (!saveCardChecked && userAuthenticated) {\r\n                updateUnsavedSquareCardIDs({\r\n                  variables: {\r\n                    unsavedSquareCardID: res.data.card.id,\r\n                    firstName: userAuthenticated\r\n                      ? props.getClientData.client.firstName\r\n                      : firstName,\r\n                    lastName: userAuthenticated\r\n                      ? props.getClientData.client.lastName\r\n                      : lastName,\r\n                    email: userAuthenticated\r\n                      ? props.getClientData.client.email\r\n                      : email,\r\n                  },\r\n                });\r\n\r\n                props.clientDataRefetch();\r\n              }\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      };\r\n\r\n      const returningClientSquarePostRequestFunction = async () => {\r\n        const squareData = {\r\n          card_nonce: nonce,\r\n          billingAddress: { postalCode: cardData.billing_postal_code },\r\n          cardholderName:\r\n            (userAuthenticated\r\n              ? cardHolderFirstName\r\n                ? cardHolderFirstName\r\n                : props.getClientData.client.firstName.toUpperCase()\r\n              : cardHolderFirstName\r\n              ? cardHolderFirstName\r\n              : firstName.toUpperCase()\r\n            ).trim() +\r\n            \" \" +\r\n            (userAuthenticated\r\n              ? cardHolderLastName\r\n                ? cardHolderLastName\r\n                : props.getClientData.client.lastName.toUpperCase()\r\n              : cardHolderLastName\r\n              ? cardHolderLastName\r\n              : lastName.toUpperCase()\r\n            ).trim(),\r\n          verification_token: buyerVerificationToken,\r\n          customerId: userAuthenticated\r\n            ? props.getClientData.client.squareCustomerId\r\n            : matchedClient.squareCustomerId,\r\n        };\r\n\r\n        changeSuccessfulCardNonce(true);\r\n        changeClipLoaderActive(false);\r\n\r\n        return await axios\r\n          .post(\r\n            `${\r\n              process.env.REACT_APP_ENV === \"production\"\r\n                ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                : \"http://localhost:4000\"\r\n            }/api/customers/card`,\r\n            squareData,\r\n            {\r\n              headers: {\r\n                Authorization:\r\n                  \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          )\r\n          .then(async (res) => {\r\n            if (squareStoredCreditCards) {\r\n              if (\r\n                squareStoredCreditCards.some(\r\n                  (x) =>\r\n                    x.billingAddress.postalCode ===\r\n                      res.data.card.billingAddress.postalCode &&\r\n                    x.cardBrand === res.data.card.cardBrand &&\r\n                    x.cardholderName === res.data.card.cardholderName &&\r\n                    x.expMonth === res.data.card.expMonth &&\r\n                    x.expYear === res.data.card.expYear &&\r\n                    x.last4 === res.data.card.last4\r\n                )\r\n              ) {\r\n                const deleteCardData = {\r\n                  customerId: userAuthenticated\r\n                    ? props.getClientData.client.squareCustomerId\r\n                    : matchedClient.squareCustomerId,\r\n                  cardId: res.data.card.id,\r\n                };\r\n\r\n                const matchedDuplicateCard = squareStoredCreditCards.filter(\r\n                  (x) =>\r\n                    x.billingAddress.postalCode ===\r\n                      res.data.card.billingAddress.postalCode &&\r\n                    x.cardBrand === res.data.card.cardBrand &&\r\n                    x.cardholderName === res.data.card.cardholderName &&\r\n                    x.expMonth === res.data.card.expMonth &&\r\n                    x.expYear === res.data.card.expYear &&\r\n                    x.last4 === res.data.card.last4\r\n                )[0];\r\n\r\n                dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\r\n                changeSuccessfulCardNonce(true);\r\n                changeClipLoaderActive(false);\r\n\r\n                if (saveCardChecked) {\r\n                  if (userAuthenticated) {\r\n                    if (\r\n                      props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                        matchedDuplicateCard.id\r\n                      )\r\n                    ) {\r\n                      removeOneUnsavedSquareCardIDs({\r\n                        variables: {\r\n                          unsavedSquareCardID: matchedDuplicateCard.id,\r\n                          firstName: props.getClientData.client.firstName,\r\n                          lastName: props.getClientData.client.lastName,\r\n                          email: props.getClientData.client.email,\r\n                        },\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n\r\n                return await axios.post(\r\n                  `${\r\n                    process.env.REACT_APP_ENV === \"production\"\r\n                      ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                      : \"http://localhost:4000\"\r\n                  }/api/customers/delete_card`,\r\n                  deleteCardData,\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"Bearer \" +\r\n                        process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                      Accept: \"application/json\",\r\n                      \"Content-Type\": \"application/json\",\r\n                    },\r\n                  }\r\n                );\r\n              }\r\n            }\r\n\r\n            dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\r\n            changeSuccessfulCardNonce(true);\r\n            changeClipLoaderActive(false);\r\n\r\n            if (!saveCardChecked && userAuthenticated) {\r\n              updateUnsavedSquareCardIDs({\r\n                variables: {\r\n                  unsavedSquareCardID: res.data.card.id,\r\n                  firstName: props.getClientData\r\n                    ? props.getClientData.client.firstName\r\n                    : firstName,\r\n                  lastName: props.getClientData\r\n                    ? props.getClientData.client.lastName\r\n                    : lastName,\r\n                  email: props.getClientData\r\n                    ? props.getClientData.client.email\r\n                    : email,\r\n                },\r\n              });\r\n\r\n              props.clientDataRefetch();\r\n            } else if (!userAuthenticated) {\r\n              updateUnsavedSquareCardIDs({\r\n                variables: {\r\n                  unsavedSquareCardID: res.data.card.id,\r\n                  firstName: matchedClient.firstName,\r\n                  lastName: matchedClient.lastName,\r\n                  email: matchedClient.email,\r\n                },\r\n              });\r\n\r\n              getClientsDataRefetch();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      };\r\n\r\n      userAuthenticated\r\n        ? props.getClientData.client.squareCustomerId\r\n          ? cardHolderFirstName &&\r\n            cardHolderLastName &&\r\n            !selectedCreditCard.name\r\n            ? returningClientSquarePostRequestFunction()\r\n            : retrieveSquareCustomerFunction()\r\n          : squarePostRequestFunction()\r\n        : matchedClient\r\n        ? matchedClient.squareCustomerId\r\n          ? returningClientSquarePostRequestFunction()\r\n          : squarePostRequestFunction()\r\n        : squarePostRequestFunction();\r\n    }\r\n  };\r\n\r\n  const createVerificationDetails = () => {\r\n    return {\r\n      amount: \"\",\r\n      currencyCode: \"\",\r\n      intent: \"STORE\",\r\n      billingContact: {\r\n        familyName: userAuthenticated\r\n          ? cardHolderLastName\r\n            ? cardHolderLastName\r\n            : props.getClientData.client.lastName\r\n          : cardHolderLastName\r\n          ? cardHolderLastName\r\n          : lastName,\r\n        givenName: userAuthenticated\r\n          ? cardHolderFirstName\r\n            ? cardHolderFirstName\r\n            : props.getClientData.client.firstName\r\n          : cardHolderFirstName\r\n          ? cardHolderFirstName\r\n          : firstName,\r\n        email: userAuthenticated ? props.getClientData.client.email : email,\r\n        phone: userAuthenticated\r\n          ? props.getClientData.client.phoneNumber\r\n          : phoneNumber,\r\n      },\r\n    };\r\n  };\r\n\r\n  const redirectToHome = () => {\r\n    if (!splashScreenComplete) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (!props.currentScreenSize) {\r\n      if (props.initialScreenSize >= 1200) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n    } else if (props.currentScreenSize >= 1200) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  const redirectToCheckout = () => {\r\n    if (successfulCardNonce) {\r\n      if (!props.currentScreenSize) {\r\n        if (props.initialScreenSize >= 1200) {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n        } else {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n          return <Redirect to=\"/checkout/confirmation\" />;\r\n        }\r\n      } else {\r\n        if (props.currentScreenSize >= 1200) {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n        } else {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n          return <Redirect to=\"/checkout/confirmation\" />;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCardHolderFirstName = (e) => {\r\n    changeCardHolderFirstName(e.currentTarget.value.toUpperCase().trim());\r\n  };\r\n\r\n  const handleCardHolderLastName = (e) => {\r\n    changeCardHolderLastName(e.currentTarget.value.toUpperCase().trim());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const iFrameLabel = [...document.getElementsByClassName(\"sq-label\")].filter(\r\n      (x) =>\r\n        x.innerText === \"CREDIT CARD\" ||\r\n        x.innerText === \"EXPIRATION\" ||\r\n        x.innerText === \"ZIP CODE\" ||\r\n        x.innerText === \"CVC\"\r\n    );\r\n    const iFrameLabelHidden = [\r\n      ...document.getElementsByClassName(\"sq-label\"),\r\n    ].filter((x) => x.className.includes(\"sq-payment-form-hidden\"));\r\n\r\n    if (selectedCreditCardFullData) {\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-card-number\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-expiration-date\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-postal-code\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-cvv\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n\r\n      if (iFrameLabel) {\r\n        if (iFrameLabel.length > 0) {\r\n          iFrameLabel.forEach((x) => x.classList.add(\"sq-payment-form-hidden\"));\r\n        }\r\n      }\r\n    } else {\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-card-number\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-expiration-date\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-postal-code\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-cvv\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n\r\n      if (iFrameLabelHidden) {\r\n        if (iFrameLabelHidden.length > 0) {\r\n          iFrameLabelHidden.forEach((x) => {\r\n            x.classList.remove(\"sq-payment-form-hidden\");\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [selectedCreditCardFullData]);\r\n\r\n  const checkMark = () => {\r\n    return (\r\n      <Spring from={{ x: 100 }} to={{ x: 0 }} config={{ duration: 2000 }}>\r\n        {(styles) => (\r\n          <svg\r\n            width={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"0.5rem\"\r\n                  : \"100%\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"0.5rem\"\r\n                : \"100%\"\r\n            }\r\n            height={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1.3rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"0.5rem\"\r\n                  : props.initialScreenSize >= 360\r\n                  ? \"2rem\"\r\n                  : \"1rem\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1.3rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"0.5rem\"\r\n                : props.currentScreenSize >= 360\r\n                ? \"2rem\"\r\n                : \"1rem\"\r\n            }\r\n            style={{\r\n              display: \"block\",\r\n            }}\r\n            viewBox=\"0 0 13.229 13.229\"\r\n          >\r\n            <path\r\n              d=\"M2.851 7.56l2.45 2.482 5.36-6.958\"\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeDasharray=\"100\"\r\n              strokeDashoffset={pageOpened ? 0 : `${styles.x}`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"3\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </Spring>\r\n    );\r\n  };\r\n\r\n  const handleSaveCardChecked = () => {\r\n    if (saveCardChecked) {\r\n      dispatch(ACTION_SAVE_CARD_UNCHECKED());\r\n    } else {\r\n      dispatch(ACTION_SAVE_CARD_CHECKED());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"payment_info_container\">\r\n        {redirectToHome()}\r\n        {redirectToCheckout()}\r\n        <div\r\n          className=\"clip_loader_spinner_container\"\r\n          style={{\r\n            display: clipLoaderActive || squareFormLoading ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <ClipLoader\r\n            size={100}\r\n            css={override}\r\n            color={\"rgb(44, 44, 52)\"}\r\n            loading={clipLoaderActive || squareFormLoading}\r\n          />\r\n        </div>\r\n        <div className=\"payment_info_container_header\">\r\n          <Link\r\n            to={() => {\r\n              if (!props.currentScreenSize) {\r\n                if (props.initialScreenSize >= 1200) {\r\n                  return \"/\";\r\n                } else {\r\n                  if (userAuthenticated) {\r\n                    return \"/availability/timepreference\";\r\n                  } else {\r\n                    return \"/checkout\";\r\n                  }\r\n                }\r\n              } else {\r\n                if (props.currentScreenSize >= 1200) {\r\n                  return \"/\";\r\n                } else {\r\n                  if (userAuthenticated) {\r\n                    return \"/availability/timepreference\";\r\n                  } else {\r\n                    return \"/checkout\";\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n            onClick={() => {\r\n              if (userAuthenticated) {\r\n                dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED());\r\n              } else {\r\n                dispatch(ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED());\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              className=\"payment_info_back_arrow\"\r\n              icon={faChevronLeft}\r\n            />\r\n          </Link>\r\n          <h1>PAYMENT INFO</h1>\r\n          {userAuthenticated && bookedWithCardID ? (\r\n            <Link\r\n              to={() => {\r\n                if (!props.currentScreenSize) {\r\n                  if (props.initialScreenSize >= 1200) {\r\n                    return \"/\";\r\n                  } else {\r\n                    return \"/checkout/confirmation\";\r\n                  }\r\n                } else {\r\n                  if (props.currentScreenSize >= 1200) {\r\n                    return \"/\";\r\n                  } else {\r\n                    return \"/checkout/confirmation\";\r\n                  }\r\n                }\r\n              }}\r\n              onClick={() => {\r\n                dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"payment_info_forward_arrow\"\r\n                icon={faChevronRight}\r\n              />\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"payment_info_header\">\r\n          <h2>\r\n            ENTER{\" \"}\r\n            {!props.currentScreenSize\r\n              ? props.initialScreenSize <= 360\r\n                ? null\r\n                : \"YOUR\"\r\n              : props.currentScreenSize <= 360\r\n              ? null\r\n              : \"YOUR\"}{\" \"}\r\n            PAYMENT INFORMATION\r\n          </h2>\r\n        </div>\r\n        <p className=\"payment_info_statement\">\r\n          Your credit card will be used to hold your time slot and will not be\r\n          charged until after your appointment. You may change your payment\r\n          method after your service.\r\n        </p>\r\n        <div className=\"square_payment_form_container\">\r\n          <SquarePaymentForm\r\n            sandbox={true}\r\n            applicationId={process.env.REACT_APP_SQUARE_SANDBOX_APPLICATION_ID}\r\n            locationId={process.env.REACT_APP_SQUARE_SANDBOX_LOCATION_ID}\r\n            cardNonceResponseReceived={cardNonceResponseReceived}\r\n            createVerificationDetails={createVerificationDetails}\r\n            paymentFormLoaded={() => changeSquareFormLoading(false)}\r\n            className=\"square_payment_form\"\r\n            placeholderCVV=\"CVC\"\r\n          >\r\n            <fieldset className=\"sq-fieldset\">\r\n              {!userAuthenticated ||\r\n              (userAuthenticated && !squareStoredCreditCards) ||\r\n              (userAuthenticated && squareStoredCreditCards\r\n                ? squareStoredCreditCards.filter(\r\n                    (x) =>\r\n                      !props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                        x.id\r\n                      )\r\n                  ).length === 0\r\n                : false) ? null : (\r\n                <FormGroup className=\"choose_a_credit_card_formgroup\">\r\n                  <Label className=\"sq-label\" for=\"select\">\r\n                    CHOOSE A CREDIT CARD\r\n                  </Label>\r\n                  <FontAwesomeIcon\r\n                    className=\"choose_a_credit_card_dropdown_icon\"\r\n                    icon={faChevronCircleDown}\r\n                  />\r\n                  <Input\r\n                    className=\"sq-cardholder-input\"\r\n                    type=\"select\"\r\n                    name=\"select\"\r\n                    id=\"select\"\r\n                    disabled={\r\n                      !userAuthenticated ||\r\n                      (userAuthenticated && !squareStoredCreditCards) ||\r\n                      (userAuthenticated && squareStoredCreditCards\r\n                        ? squareStoredCreditCards.filter(\r\n                            (x) =>\r\n                              !props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                                x.id\r\n                              )\r\n                          ).length === 0\r\n                        : false)\r\n                    }\r\n                    value={\r\n                      userAuthenticated\r\n                        ? bookedWithCardID\r\n                          ? squareStoredCreditCards\r\n                            ? JSON.stringify({\r\n                                name:\r\n                                  squareStoredCreditCards\r\n                                    .filter((x) => x.id === bookedWithCardID)[0]\r\n                                    .cardBrand.split(\"_\")\r\n                                    .join(\" \") +\r\n                                  \" - \" +\r\n                                  squareStoredCreditCards.filter(\r\n                                    (x) => x.id === bookedWithCardID\r\n                                  )[0].last4,\r\n                                id: bookedWithCardID,\r\n                              })\r\n                            : JSON.stringify({\r\n                                name: selectedCreditCard.name,\r\n                                id: selectedCreditCard.id,\r\n                              })\r\n                          : JSON.stringify({\r\n                              name: selectedCreditCard.name,\r\n                              id: selectedCreditCard.id,\r\n                            })\r\n                        : JSON.stringify({\r\n                            name: selectedCreditCard.name,\r\n                            id: selectedCreditCard.id,\r\n                          })\r\n                    }\r\n                    onChange={(e) => {\r\n                      const optionsArr = [\r\n                        { name: \"\", id: \"\", index: 0 },\r\n                      ].concat(\r\n                        squareStoredCreditCards\r\n                          .filter(\r\n                            (x) =>\r\n                              !props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                                x.id\r\n                              )\r\n                          )\r\n                          .map((x, i) => {\r\n                            return {\r\n                              name:\r\n                                x.cardBrand.split(\"_\").join(\" \") +\r\n                                \" - \" +\r\n                                x.last4,\r\n                              id: x.id,\r\n                              index: i,\r\n                            };\r\n                          })\r\n                      );\r\n\r\n                      let chosenItem = optionsArr.filter(\r\n                        (item, index) =>\r\n                          index === e.target.options.selectedIndex\r\n                      )[0];\r\n\r\n                      if (selectedCreditCard.name) {\r\n                        dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                        changeSelectedCreditCard({\r\n                          name: chosenItem.name,\r\n                          id: chosenItem.id,\r\n                        });\r\n\r\n                        changeCardHolderFirstName(\r\n                          squareCustomerInfo.givenName.toUpperCase()\r\n                        );\r\n                        changeCardHolderLastName(\r\n                          squareCustomerInfo.familyName.toUpperCase()\r\n                        );\r\n                        if (e.target.value === \"NEW CARD\") {\r\n                          dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                          changeSelectedCreditCard({ name: \"\", id: \"\" });\r\n                          changeSelectedCreditCardFullData(\"\");\r\n                          changeCardHolderFirstName(\"\");\r\n                          changeCardHolderLastName(\"\");\r\n                        }\r\n                      } else {\r\n                        dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                        changeSelectedCreditCard({\r\n                          name: chosenItem.name,\r\n                          id: chosenItem.id,\r\n                        });\r\n\r\n                        changeCardHolderFirstName(\r\n                          squareCustomerInfo.givenName.toUpperCase()\r\n                        );\r\n                        changeCardHolderLastName(\r\n                          squareCustomerInfo.familyName.toUpperCase()\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    <option>NEW CARD</option>\r\n                    {renderStoredCreditCardOptions()}\r\n                  </Input>\r\n                </FormGroup>\r\n              )}\r\n              <div className=\"sq_card_holder_container\">\r\n                <span className=\"sq-label\">CARDHOLDER FIRST NAME</span>\r\n                <input\r\n                  name=\"first_name\"\r\n                  type=\"text\"\r\n                  maxLength=\"100\"\r\n                  placeholder=\"Enter cardholder first name here\"\r\n                  className=\"sq-cardholder-input\"\r\n                  disabled={selectedCreditCardFullData ? true : false}\r\n                  onChange={handleCardHolderFirstName}\r\n                  value={cardHolderFirstName}\r\n                />\r\n              </div>\r\n              <div className=\"sq_card_holder_container\">\r\n                <span className=\"sq-label\">CARDHOLDER LAST NAME</span>\r\n                <input\r\n                  name=\"last_name\"\r\n                  type=\"text\"\r\n                  maxLength=\"100\"\r\n                  placeholder=\"Enter cardholder last name here\"\r\n                  className=\"sq-cardholder-input\"\r\n                  disabled={selectedCreditCardFullData ? true : false}\r\n                  onChange={handleCardHolderLastName}\r\n                  value={cardHolderLastName}\r\n                />\r\n              </div>\r\n              {selectedCreditCardFullData ? (\r\n                <div className=\"sq_card_holder_container\">\r\n                  {/* Space in \"CREDIT CARD \" important to distinguish between new card and toggled card form inputs */}\r\n                  <span className=\"sq-label\">CREDIT CARD </span>\r\n                  <input\r\n                    name=\"credit_card\"\r\n                    type=\"text\"\r\n                    maxLength=\"100\"\r\n                    className=\"sq-cardholder-input\"\r\n                    disabled={selectedCreditCardFullData ? true : false}\r\n                    value={\r\n                      selectedCreditCardFullData.cardBrand.toLowerCase() ===\r\n                      \"american_express\"\r\n                        ? \"•••• •••••• •\" + selectedCreditCardFullData.last4\r\n                        : \"•••• •••• •••• \" + selectedCreditCardFullData.last4\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              <CreditCardNumberInput />\r\n              <div className=\"sq_third_container\">\r\n                <div className=\"sq-form-third_credit_card\">\r\n                  <CreditCardExpirationDateInput />\r\n                </div>\r\n                <div className=\"sq-form-third_postal\">\r\n                  <CreditCardPostalCodeInput label=\"ZIP CODE\" />\r\n                </div>\r\n\r\n                <div className=\"sq-form-third_cvv\">\r\n                  <CreditCardCVVInput label=\"CVC\" />\r\n                </div>\r\n              </div>\r\n\r\n              {selectedCreditCardFullData ? (\r\n                <div className=\"sq_third_container\">\r\n                  <div className=\"sq-form-third_credit_card\">\r\n                    {/* Space in \"EXPIRATION \" important to distinguish between new card and toggled card form inputs */}\r\n                    <span className=\"sq-label\">EXPIRATION </span>\r\n                    <input\r\n                      name=\"expiration_date\"\r\n                      type=\"text\"\r\n                      className=\"sq-cardholder-input\"\r\n                      disabled={selectedCreditCardFullData ? true : false}\r\n                      value={\r\n                        selectedCreditCardFullData.expMonth >= 10\r\n                          ? selectedCreditCardFullData.expMonth.toString() +\r\n                            \"/\" +\r\n                            selectedCreditCardFullData.expYear\r\n                              .toString()\r\n                              .substr(-2)\r\n                          : \"0\" +\r\n                            selectedCreditCardFullData.expMonth.toString() +\r\n                            \"/\" +\r\n                            selectedCreditCardFullData.expYear\r\n                              .toString()\r\n                              .substr(-2)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"sq-form-third_postal\">\r\n                    {/* Space in \"ZIP CODE \" important to distinguish between new card and toggled card form inputs */}\r\n                    <span className=\"sq-label\">ZIP CODE </span>\r\n                    <input\r\n                      name=\"postalCode\"\r\n                      type=\"text\"\r\n                      className=\"sq-cardholder-input\"\r\n                      disabled={selectedCreditCardFullData ? true : false}\r\n                      value={\"•••••\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"sq-form-third_cvv\">\r\n                    {/* Space in \"CVC \" important to distinguish between new card and toggled card form inputs */}\r\n                    <span className=\"sq-label\">CVC </span>\r\n                    <input\r\n                      name=\"cvc_code\"\r\n                      type=\"text\"\r\n                      className=\"sq-cardholder-input\"\r\n                      disabled={selectedCreditCardFullData ? true : false}\r\n                      value={\r\n                        selectedCreditCardFullData.cardBrand.toLowerCase() ===\r\n                        \"american_express\"\r\n                          ? \"••••\"\r\n                          : \"•••\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n              {!selectedCreditCard.name &&\r\n              !selectedCreditCard.id &&\r\n              userAuthenticated ? (\r\n                <div className=\"sq_save_card_information_container\">\r\n                  <span\r\n                    className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n                    style={{\r\n                      transform: !props.currentScreenSize\r\n                        ? props.initialScreenSize >= 1200\r\n                          ? \"scale(1.5) translate(0%, -26%)\"\r\n                          : null\r\n                        : props.currentScreenSize >= 1200\r\n                        ? \"scale(1.5) translate(0%, -26%)\"\r\n                        : null,\r\n                    }}\r\n                    onClick={handleSaveCardChecked}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      color=\"rgba(155, 155, 155, 0.4)\"\r\n                      transform={\r\n                        !props.currentScreenSize\r\n                          ? props.initialScreenSize >= 360\r\n                            ? \"grow-20\"\r\n                            : \"grow-10\"\r\n                          : props.currentScreenSize >= 360\r\n                          ? \"grow-20\"\r\n                          : \"grow-10\"\r\n                      }\r\n                      icon={faSquare}\r\n                    />\r\n                    {saveCardChecked ? checkMark() : null}\r\n                  </span>\r\n                  <p>Save this card information for future bookings?</p>\r\n                </div>\r\n              ) : null}\r\n            </fieldset>\r\n            {selectedCreditCardFullData ||\r\n            (!selectedCreditCard.name &&\r\n              (!cardHolderFirstName || !cardHolderLastName) &&\r\n              errorMessages.length === 0) ? (\r\n              <Link\r\n                to={() => {\r\n                  if (!props.currentScreenSize) {\r\n                    if (props.initialScreenSize >= 1200) {\r\n                      return \"/\";\r\n                    } else {\r\n                      return \"/checkout/confirmation\";\r\n                    }\r\n                  } else {\r\n                    if (props.currentScreenSize >= 1200) {\r\n                      return \"/\";\r\n                    } else {\r\n                      return \"/checkout/confirmation\";\r\n                    }\r\n                  }\r\n                }}\r\n                style={{\r\n                  display: \"block\",\r\n                  pointerEvents:\r\n                    !selectedCreditCard.name &&\r\n                    (!cardHolderFirstName || !cardHolderLastName)\r\n                      ? \"none\"\r\n                      : \"auto\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  if (userAuthenticated) {\r\n                    if (selectedCreditCardFullData) {\r\n                      dispatch(\r\n                        ACTION_BOOKED_WITH_CARD_ID(\r\n                          selectedCreditCardFullData.id\r\n                        )\r\n                      );\r\n                      dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"sq-creditcard\">Submit Card Information</div>\r\n              </Link>\r\n            ) : (\r\n              <CreditCardSubmitButton style={{ cursor: \"pointer\" }}>\r\n                Submit Card Information\r\n              </CreditCardSubmitButton>\r\n            )}\r\n          </SquarePaymentForm>\r\n          {selectedCreditCardFullData && errorMessages.length === 0 ? null : (\r\n            <div className=\"sq-error-message\">\r\n              {errorMessages.map((errorMessage) => (\r\n                <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentInfo;\r\n"]},"metadata":{},"sourceType":"module"}