{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\admin\\\\AdminSchedule\\\\AdminCalendarComponent.js\";\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\nimport moment from \"moment\";\nimport CalmSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/CalmSummaryCard\";\nimport BacialSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/BacialSummaryCard\";\nimport ClarifySummaryCard from \"../../checkout/SummaryReviewCards/Treatments/ClarifySummaryCard\";\nimport DermaplaningSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/DermaplaningSummaryCard\";\nimport GlowSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/GlowSummaryCard\";\nimport GlowTwoSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/GlowTwoSummaryCard\";\nimport QuenchSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/QuenchSummaryCard\";\nimport QuickieSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/QuickieSummaryCard\";\nimport ChemicalPeelSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/ChemicalPeelSummaryCard\";\nimport SaltCaveSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/SaltCaveSummaryCard\";\nimport CBDSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/CBDSummaryCard\";\nimport MicroneedleSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/MicroneedleSummaryCard\";\nimport RejuvenateSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/RejuvenateSummaryCard\";\nimport UnsureSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/UnsureSummaryCard\";\nimport ExtraExtractionsSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/ExtraExtractionsCard\";\nimport HydroJellyMaskSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/HydroJellyMaskSummaryCard\";\nimport LEDTherapySummaryCard from \"../../checkout/SummaryReviewCards/AddOns/LEDTherapySummaryCard\";\nimport MicrocurrentSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/MicrocurrentSummaryCard\";\nimport MicrodermabrasionSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/MicrodermabrasionSummaryCard\";\nimport DermarollingSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/DermarollingSummaryCard\";\nimport NanoNeedlingSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/NanoNeedlingSummaryCard\";\nimport GuaShaSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/GuaShaSummaryCard\";\nimport BeardSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/BeardSummaryCard\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector } from \"react-redux\";\nimport AdminSelectedAppointment from \"./AdminCreateAppointment/AdminSelectedAppointment\";\nimport AdminSelectedPersonalEvent from \"./AdminPersonalEvent/AdminSelectedPersonalEvent\";\nimport \"./AdminSchedule.css\";\nimport \"../../account/clientprofile/MyAppointments/MyAppointments.css\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\n\nconst AdminCalendarComponent = props => {\n  const personalEventClicked = props.personalEventClicked,\n        getAllPersonalEventsRefetch = props.getAllPersonalEventsRefetch,\n        getAllAppointmentsData = props.getAllAppointmentsData,\n        getEmployeeData = props.getEmployeeData,\n        getAllPersonalEventsData = props.getAllPersonalEventsData,\n        createAppointmentClicked = props.createAppointmentClicked,\n        handleCreateAppointmentToggled = props.handleCreateAppointmentToggled,\n        getAllAppointmentsRefetch = props.getAllAppointmentsRefetch,\n        timeOptions = props.timeOptions,\n        allEmployeeOptions = props.allEmployeeOptions,\n        initialScreenSize = props.initialScreenSize,\n        currentScreenSize = props.currentScreenSize,\n        currentScheduleShown = props.currentScheduleShown;\n  const selectedAppointmentBackRef = useRef(null);\n  const backToAppointmentsRef = useRef(null);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        allAdminAppointments = _useState2[0],\n        changeAllAdminAppointments = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentToggledAppointment = _useState4[0],\n        changeCurrentToggledAppointment = _useState4[1];\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        allPersonalEvents = _useState6[0],\n        changeAllPersonalEvents = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        headerOffset = _useState8[0],\n        changeHeaderOffset = _useState8[1];\n\n  const logoutClicked = useSelector(state => state.logoutClicked.log_out_clicked);\n  const loadingSpinnerActive = useSelector(state => state.loadingSpinnerActive.loading_spinner);\n  const cancelAppointmentClicked = useSelector(state => state.cancelAppointmentClicked.cancelAppointmentClicked);\n  const localizer = momentLocalizer(moment);\n  const treatmentsSummaryCardComponentsArr = [{\n    name: \"Calm\",\n    component: /*#__PURE__*/React.createElement(CalmSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 32\n      }\n    })\n  }, {\n    name: \"Bacial\",\n    component: /*#__PURE__*/React.createElement(BacialSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 34\n      }\n    })\n  }, {\n    name: \"Clarify\",\n    component: /*#__PURE__*/React.createElement(ClarifySummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 35\n      }\n    })\n  }, {\n    name: \"Dermaplaning\",\n    component: /*#__PURE__*/React.createElement(DermaplaningSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 40\n      }\n    })\n  }, {\n    name: \"Glow\",\n    component: /*#__PURE__*/React.createElement(GlowSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 32\n      }\n    })\n  }, {\n    name: \"GlowTwo\",\n    component: /*#__PURE__*/React.createElement(GlowTwoSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 35\n      }\n    })\n  }, {\n    name: \"Quench\",\n    component: /*#__PURE__*/React.createElement(QuenchSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 34\n      }\n    })\n  }, {\n    name: \"Quickie\",\n    component: /*#__PURE__*/React.createElement(QuickieSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 35\n      }\n    })\n  }, {\n    name: \"ChemicalPeel\",\n    component: /*#__PURE__*/React.createElement(ChemicalPeelSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 40\n      }\n    })\n  }, {\n    name: \"CBD\",\n    component: /*#__PURE__*/React.createElement(CBDSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 31\n      }\n    })\n  }, {\n    name: \"Microneedling\",\n    component: /*#__PURE__*/React.createElement(MicroneedleSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 41\n      }\n    })\n  }, {\n    name: \"Rejuvenate\",\n    component: /*#__PURE__*/React.createElement(RejuvenateSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 38\n      }\n    })\n  }, {\n    name: \"Not Sure\",\n    component: /*#__PURE__*/React.createElement(UnsureSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 36\n      }\n    })\n  }, {\n    name: \"Salt Cave\",\n    component: /*#__PURE__*/React.createElement(SaltCaveSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    })\n  }];\n  const addOnsSummaryCardComponentsArr = [{\n    name: \"ExtraExtractions\",\n    component: /*#__PURE__*/React.createElement(ExtraExtractionsSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 44\n      }\n    })\n  }, {\n    name: \"HydroJelly\",\n    component: /*#__PURE__*/React.createElement(HydroJellyMaskSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 38\n      }\n    })\n  }, {\n    name: \"LED\",\n    component: /*#__PURE__*/React.createElement(LEDTherapySummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 31\n      }\n    })\n  }, {\n    name: \"Microcurrent\",\n    component: /*#__PURE__*/React.createElement(MicrocurrentSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 40\n      }\n    })\n  }, {\n    name: \"Microdermabrasion\",\n    component: /*#__PURE__*/React.createElement(MicrodermabrasionSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }\n    })\n  }, {\n    name: \"Dermarolling\",\n    component: /*#__PURE__*/React.createElement(DermarollingSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 40\n      }\n    })\n  }, {\n    name: \"NanoNeedling\",\n    component: /*#__PURE__*/React.createElement(NanoNeedlingSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 40\n      }\n    })\n  }, {\n    name: \"GuaSha\",\n    component: /*#__PURE__*/React.createElement(GuaShaSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 34\n      }\n    })\n  }, {\n    name: \"Beard\",\n    component: /*#__PURE__*/React.createElement(BeardSummaryCard, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 33\n      }\n    })\n  }];\n\n  const renderSummaryCardTreatments = () => {\n    let componentsArr = [];\n\n    for (let i = 0; i < treatmentsSummaryCardComponentsArr.length; i++) {\n      if (allAdminAppointments.filter(x => x.id === currentToggledAppointment).length > 0) {\n        if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].treatments) {\n          if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].treatments[0].name) {\n            if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].treatments[0].name === treatmentsSummaryCardComponentsArr[i].name) {\n              componentsArr.push(treatmentsSummaryCardComponentsArr[i].component);\n            } else {\n              if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].treatments[0].name.includes(treatmentsSummaryCardComponentsArr[i].name)) {\n                componentsArr.push(treatmentsSummaryCardComponentsArr[i].component);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return componentsArr.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my_selected_appointment_treatment_container admin_side_client_calendar_schedule_treatment_container\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 7\n      }\n    }, item));\n  };\n\n  const renderSummaryCardAddOns = () => {\n    let componentsArr = [];\n\n    if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0]) {\n      for (let i = 0; i < addOnsSummaryCardComponentsArr.length; i++) {\n        for (let j = 0; j < allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].addOns.length; j++) {\n          if (allAdminAppointments.filter(x => x.id === currentToggledAppointment).length > 0) {\n            if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].addOns !== []) {\n              if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].addOns[j].name) {\n                if (allAdminAppointments.filter(x => x.id === currentToggledAppointment)[0].addOns[j].name === addOnsSummaryCardComponentsArr[i].name) {\n                  componentsArr.push(addOnsSummaryCardComponentsArr[i].component);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return componentsArr.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"my_selected_appointment_treatment_container admin_side_client_calendar_schedule_treatment_container\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 7\n      }\n    }, item));\n  };\n\n  useEffect(() => {\n    const currentAdminAppointments = () => {\n      const filteredApps = getAllAppointmentsData ? getAllAppointmentsData.all_appointments.filter(x => {\n        if (x.esthetician) {\n          if (getEmployeeData) {\n            if (getEmployeeData.employee.firstName) {\n              if (getEmployeeData.employee.lastName) {\n                const firstName = x.esthetician.split(\" \")[0];\n                const lastInitial = x.esthetician.split(\" \")[1][0];\n\n                if (currentScheduleShown === \"My Schedule\") {\n                  if (getEmployeeData.employee.firstName.toUpperCase() === firstName.toUpperCase() && getEmployeeData.employee.lastName[0].toUpperCase() === lastInitial.toUpperCase()) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else {\n                  let currentShownFullName = \"\";\n\n                  if (currentShownFullName.includes(\"Salt Cave\")) {\n                    currentShownFullName = \"Salt Cave\";\n                  } else {\n                    currentShownFullName = currentScheduleShown.split(\"'\")[0];\n                  }\n\n                  const currentShownFirstName = currentShownFullName.split(\" \")[0];\n                  const currentShownLastName = currentShownFullName.split(\" \")[1];\n\n                  if (currentShownFirstName.toUpperCase() === firstName.toUpperCase() && currentShownLastName[0].toUpperCase() === lastInitial.toUpperCase()) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                }\n              } else {\n                return false;\n              }\n            } else {\n              return false;\n            }\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }) : null;\n      return filteredApps;\n    };\n\n    changeAllAdminAppointments(currentAdminAppointments());\n  }, [getAllAppointmentsData, getEmployeeData, currentScheduleShown]);\n  useEffect(() => {\n    const currentAdminPersonalEvents = () => {\n      const filteredApps = getAllPersonalEventsData ? getAllPersonalEventsData.all_personal_events.filter(x => {\n        if (x.staff) {\n          if (getEmployeeData) {\n            if (getEmployeeData.employee.firstName) {\n              if (getEmployeeData.employee.lastName) {\n                const firstName = x.staff.split(\" \")[0];\n                const lastInitial = x.staff.split(\" \")[1][0];\n\n                if (currentScheduleShown === \"My Schedule\") {\n                  if (getEmployeeData.employee.firstName.toUpperCase() === firstName.toUpperCase() && getEmployeeData.employee.lastName[0].toUpperCase() === lastInitial.toUpperCase()) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                } else {\n                  let currentShownFullName = \"\";\n\n                  if (currentShownFullName.includes(\"Salt Cave\")) {\n                    currentShownFullName = \"Salt Cave\";\n                  } else {\n                    currentShownFullName = currentScheduleShown.split(\"'\")[0];\n                  }\n\n                  const currentShownFirstName = currentShownFullName.split(\" \")[0];\n                  const currentShownLastName = currentShownFullName.split(\" \")[1];\n\n                  if (currentShownFirstName.toUpperCase() === firstName.toUpperCase() && currentShownLastName[0].toUpperCase() === lastInitial.toUpperCase()) {\n                    return true;\n                  } else {\n                    return false;\n                  }\n                }\n              } else {\n                return false;\n              }\n            } else {\n              return false;\n            }\n          } else {\n            return false;\n          }\n        } else {\n          return false;\n        }\n      }) : null;\n      return filteredApps;\n    };\n\n    changeAllPersonalEvents(currentAdminPersonalEvents());\n  }, [getAllPersonalEventsData, getEmployeeData, currentScheduleShown]);\n\n  const events = () => {\n    if (allAdminAppointments) {\n      if (allAdminAppointments.length > 0) {\n        return allAdminAppointments.map(x => {\n          return {\n            id: x.id,\n            title: /*#__PURE__*/React.createElement(React.Fragment, null, x.confirmed ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n              icon: faCheckCircle,\n              className: \"admin_appointment_confirmed_checkmark\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }\n            }) : null, x.client.firstName[0].toUpperCase() + x.client.firstName.slice(1).toLowerCase() + \" \" + x.client.lastName[0].toUpperCase() + x.client.lastName.slice(1).toLowerCase() + \" - \" + (x.treatments[0].name === \"ChemicalPeel\" ? \"Chemical Peel\" : x.treatments[0].name) + \" \" + \"Facial\" + (x.addOns.length === 0 ? \"\" : x.addOns.map(x => \" \".concat(x.name === \"ExtraExtractions\" ? \"Extra Extractions\" : x.name, \" Add-On\")))),\n            text: x.client.firstName[0].toUpperCase() + x.client.firstName.slice(1).toLowerCase() + \" \" + x.client.lastName[0].toUpperCase() + x.client.lastName.slice(1).toLowerCase() + \" - \" + x.treatments[0].name + \" \" + \"Facial\" + (x.addOns === [] ? null : x.addOns.map(x => \"\".concat(x.name, \", Add-On\"))),\n            start: moment(x.date + \" \" + x.startTime + (Number(x.startTime.split(\":\")[0]) < 9 || Number(x.startTime.split(\":\")[0]) >= 12 ? \"PM\" : \"AM\"), \"LLL\").toDate(),\n            end: moment(x.date + \" \" + x.endTime + (Number(x.endTime.split(\":\")[0]) < 9 || Number(x.endTime.split(\":\")[0]) >= 12 ? \"PM\" : \"AM\"), \"LLL\").toDate()\n          };\n        });\n      } else {\n        return [];\n      }\n    } else {\n      return [];\n    }\n  };\n\n  const personalEvents = () => {\n    if (allPersonalEvents) {\n      if (allPersonalEvents.length > 0) {\n        return allPersonalEvents.map(x => {\n          return {\n            id: x._id,\n            title: x.title,\n            text: x.notes,\n            start: moment(x.date + \" \" + x.startTime, \"M/DD/YYYY h:mm A\").toDate(),\n            end: moment(x.date + \" \" + x.endTime, \"M/DD/YYYY h:mm A\").toDate(),\n            backgroundColor: \"rgb(211, 211, 211)\",\n            color: \"#265985\",\n            allDay: x.allDay\n          };\n        });\n      } else {\n        return [];\n      }\n    } else {\n      return [];\n    }\n  }; // Function for back arrow click to reset selected toggled appointment\n\n\n  const handleAppointmentUntoggled = e => {\n    if (e.currentTarget && selectedAppointmentBackRef || e.currentTarget && backToAppointmentsRef) {\n      if (selectedAppointmentBackRef.current || backToAppointmentsRef.current) {\n        if (selectedAppointmentBackRef.current.className === e.currentTarget.className || backToAppointmentsRef.current.className === e.currentTarget.className) {\n          changeCurrentToggledAppointment(\"\");\n        }\n      }\n    }\n  };\n\n  let formats = {\n    timeGutterFormat: \"h A\"\n  };\n\n  const eventStyleGetter = event => {\n    if (event) {\n      if (event.backgroundColor && event.color) {\n        const style = {\n          backgroundColor: event.backgroundColor,\n          color: event.color,\n          border: \"none\",\n          fontWeight: 600\n        };\n        return {\n          style: style\n        };\n      }\n    }\n  }; // Used to place top calendar header in relation to vertical scrollbar\n\n\n  useEffect(() => {\n    const headerOffsetInterval = setInterval(() => {\n      const calendarContent = document.getElementsByClassName(\"rbc-time-content\");\n\n      if (calendarContent[0]) {\n        const currentRef = calendarContent[0];\n\n        if (headerOffset !== Math.abs(currentRef.offsetWidth - currentRef.clientWidth)) {\n          changeHeaderOffset(Math.abs(currentRef.offsetWidth - currentRef.clientWidth));\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(headerOffsetInterval);\n    };\n  }, [headerOffset]);\n  useEffect(() => {\n    const timeHeader = document.getElementsByClassName(\"rbc-time-header rbc-overflowing\");\n\n    if (timeHeader[0]) {\n      const timeHeaderElement = timeHeader[0];\n\n      if (headerOffset !== 0) {\n        timeHeaderElement.style.marginRight = headerOffset + \"px !important\";\n      } else {\n        timeHeaderElement.style.marginRight = \"0px !important\";\n      }\n    }\n  }, [headerOffset]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_schedule_calendar_main_container\",\n    style: {\n      zIndex: createAppointmentClicked || personalEventClicked ? -1 : logoutClicked || loadingSpinnerActive || cancelAppointmentClicked ? 0 : 1\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    events: events().concat(personalEvents()),\n    startAccessor: \"start\",\n    endAccessor: \"end\",\n    eventPropGetter: eventStyleGetter,\n    tooltipAccessor: x => x.text,\n    defaultDate: moment().toDate(),\n    localizer: localizer,\n    defaultView: Views.WEEK,\n    step: 15,\n    timeslots: 4,\n    formats: formats,\n    scrollToTime: moment().set({\n      h: 10,\n      m: 0\n    }).toDate(),\n    onSelectEvent: e => {\n      if (e.id) {\n        changeCurrentToggledAppointment(e.id);\n      } else if (e._id) {\n        changeCurrentToggledAppointment(e._id);\n      } else {\n        return null;\n      }\n    },\n    slotPropGetter: date => {\n      if (moment(date).format(\"dddd\") === \"Saturday\" || moment(date).format(\"dddd\") === \"Sunday\" && moment(date).format(\"H\") < 10 || moment(date).format(\"dddd\") === \"Sunday\" && moment(date).format(\"H\") > 19 || moment(date).format(\"dddd\") === \"Monday\" && moment(date).format(\"H\") < 10 || moment(date).format(\"dddd\") === \"Monday\" && moment(date).format(\"H\") > 19 || moment(date).format(\"dddd\") === \"Tuesday\" && moment(date).format(\"H\") < 10 || moment(date).format(\"dddd\") === \"Tuesday\" && moment(date).format(\"H\") > 19 || moment(date).format(\"dddd\") === \"Wednesday\" && moment(date).format(\"H\") < 10 || moment(date).format(\"dddd\") === \"Wednesday\" && moment(date).format(\"H\") > 19 || moment(date).format(\"dddd\") === \"Thursday\" && moment(date).format(\"H\") < 10 || moment(date).format(\"dddd\") === \"Thursday\" && moment(date).format(\"H\") > 19 || moment(date).format(\"dddd\") === \"Friday\" && moment(date).format(\"H\") < 10 || moment(date).format(\"dddd\") === \"Friday\" && moment(date).format(\"H\") > 15) {\n        let newStyle = {\n          backgroundColor: \"rgb(222, 222, 222)\",\n          borderTop: \"1px solid rgb(212, 212, 212)\"\n        };\n        return {\n          style: newStyle\n        };\n      }\n    },\n    selectable: true,\n    onSelectSlot: time => handleCreateAppointmentToggled(moment(time.start).format(\"LT\"), moment(time.end).format(\"LT\"), moment(time.start).format(\"L\")),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AdminSelectedAppointment, {\n    allAdminAppointments: allAdminAppointments,\n    getAllAppointmentsRefetch: getAllAppointmentsRefetch,\n    currentToggledAppointment: currentToggledAppointment,\n    changeCurrentToggledAppointment: changeCurrentToggledAppointment,\n    ref: {\n      selectedAppointmentBackRef: selectedAppointmentBackRef,\n      backToAppointmentsRef: backToAppointmentsRef\n    },\n    handleAppointmentUntoggled: handleAppointmentUntoggled,\n    renderSummaryCardAddOns: renderSummaryCardAddOns,\n    renderSummaryCardTreatments: renderSummaryCardTreatments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 627,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AdminSelectedPersonalEvent, {\n    currentToggledAppointment: currentToggledAppointment,\n    changeCurrentToggledAppointment: changeCurrentToggledAppointment,\n    ref: {\n      selectedAppointmentBackRef: selectedAppointmentBackRef,\n      backToAppointmentsRef: backToAppointmentsRef\n    },\n    handleAppointmentUntoggled: handleAppointmentUntoggled,\n    getAllPersonalEventsData: getAllPersonalEventsData,\n    getAllPersonalEventsRefetch: getAllPersonalEventsRefetch,\n    intialScreenSize: initialScreenSize,\n    currentScreenSize: currentScreenSize,\n    allEmployeeOptions: allEmployeeOptions,\n    timeOptions: timeOptions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 640,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AdminCalendarComponent;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HighEnd/Client/src/components/admin/AdminSchedule/AdminCalendarComponent.js"],"names":["React","useState","useEffect","useRef","Calendar","momentLocalizer","Views","moment","CalmSummaryCard","BacialSummaryCard","ClarifySummaryCard","DermaplaningSummaryCard","GlowSummaryCard","GlowTwoSummaryCard","QuenchSummaryCard","QuickieSummaryCard","ChemicalPeelSummaryCard","SaltCaveSummaryCard","CBDSummaryCard","MicroneedleSummaryCard","RejuvenateSummaryCard","UnsureSummaryCard","ExtraExtractionsSummaryCard","HydroJellyMaskSummaryCard","LEDTherapySummaryCard","MicrocurrentSummaryCard","MicrodermabrasionSummaryCard","DermarollingSummaryCard","NanoNeedlingSummaryCard","GuaShaSummaryCard","BeardSummaryCard","FontAwesomeIcon","faCheckCircle","useSelector","AdminSelectedAppointment","AdminSelectedPersonalEvent","AdminCalendarComponent","props","personalEventClicked","getAllPersonalEventsRefetch","getAllAppointmentsData","getEmployeeData","getAllPersonalEventsData","createAppointmentClicked","handleCreateAppointmentToggled","getAllAppointmentsRefetch","timeOptions","allEmployeeOptions","initialScreenSize","currentScreenSize","currentScheduleShown","selectedAppointmentBackRef","backToAppointmentsRef","allAdminAppointments","changeAllAdminAppointments","currentToggledAppointment","changeCurrentToggledAppointment","allPersonalEvents","changeAllPersonalEvents","headerOffset","changeHeaderOffset","logoutClicked","state","log_out_clicked","loadingSpinnerActive","loading_spinner","cancelAppointmentClicked","localizer","treatmentsSummaryCardComponentsArr","name","component","addOnsSummaryCardComponentsArr","renderSummaryCardTreatments","componentsArr","i","length","filter","x","id","treatments","push","includes","map","item","index","renderSummaryCardAddOns","j","addOns","currentAdminAppointments","filteredApps","all_appointments","esthetician","employee","firstName","lastName","split","lastInitial","toUpperCase","currentShownFullName","currentShownFirstName","currentShownLastName","currentAdminPersonalEvents","all_personal_events","staff","events","title","confirmed","client","slice","toLowerCase","text","start","date","startTime","Number","toDate","end","endTime","personalEvents","_id","notes","backgroundColor","color","allDay","handleAppointmentUntoggled","e","currentTarget","current","className","formats","timeGutterFormat","eventStyleGetter","event","style","border","fontWeight","headerOffsetInterval","setInterval","calendarContent","document","getElementsByClassName","currentRef","Math","abs","offsetWidth","clientWidth","clearInterval","timeHeader","timeHeaderElement","marginRight","zIndex","concat","WEEK","set","h","m","format","newStyle","borderTop","time"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Calendar, momentLocalizer, Views } from \"react-big-calendar\";\r\nimport moment from \"moment\";\r\nimport CalmSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/CalmSummaryCard\";\r\nimport BacialSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/BacialSummaryCard\";\r\nimport ClarifySummaryCard from \"../../checkout/SummaryReviewCards/Treatments/ClarifySummaryCard\";\r\nimport DermaplaningSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/DermaplaningSummaryCard\";\r\nimport GlowSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/GlowSummaryCard\";\r\nimport GlowTwoSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/GlowTwoSummaryCard\";\r\nimport QuenchSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/QuenchSummaryCard\";\r\nimport QuickieSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/QuickieSummaryCard\";\r\nimport ChemicalPeelSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/ChemicalPeelSummaryCard\";\r\nimport SaltCaveSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/SaltCaveSummaryCard\";\r\nimport CBDSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/CBDSummaryCard\";\r\nimport MicroneedleSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/MicroneedleSummaryCard\";\r\nimport RejuvenateSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/RejuvenateSummaryCard\";\r\nimport UnsureSummaryCard from \"../../checkout/SummaryReviewCards/Treatments/UnsureSummaryCard\";\r\nimport ExtraExtractionsSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/ExtraExtractionsCard\";\r\nimport HydroJellyMaskSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/HydroJellyMaskSummaryCard\";\r\nimport LEDTherapySummaryCard from \"../../checkout/SummaryReviewCards/AddOns/LEDTherapySummaryCard\";\r\nimport MicrocurrentSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/MicrocurrentSummaryCard\";\r\nimport MicrodermabrasionSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/MicrodermabrasionSummaryCard\";\r\nimport DermarollingSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/DermarollingSummaryCard\";\r\nimport NanoNeedlingSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/NanoNeedlingSummaryCard\";\r\nimport GuaShaSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/GuaShaSummaryCard\";\r\nimport BeardSummaryCard from \"../../checkout/SummaryReviewCards/AddOns/BeardSummaryCard\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheckCircle } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector } from \"react-redux\";\r\nimport AdminSelectedAppointment from \"./AdminCreateAppointment/AdminSelectedAppointment\";\r\nimport AdminSelectedPersonalEvent from \"./AdminPersonalEvent/AdminSelectedPersonalEvent\";\r\nimport \"./AdminSchedule.css\";\r\nimport \"../../account/clientprofile/MyAppointments/MyAppointments.css\";\r\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\r\n\r\nconst AdminCalendarComponent = (props) => {\r\n  const {\r\n    personalEventClicked,\r\n    getAllPersonalEventsRefetch,\r\n    getAllAppointmentsData,\r\n    getEmployeeData,\r\n    getAllPersonalEventsData,\r\n    createAppointmentClicked,\r\n    handleCreateAppointmentToggled,\r\n    getAllAppointmentsRefetch,\r\n    timeOptions,\r\n    allEmployeeOptions,\r\n    initialScreenSize,\r\n    currentScreenSize,\r\n    currentScheduleShown,\r\n  } = props;\r\n\r\n  const selectedAppointmentBackRef = useRef(null);\r\n  const backToAppointmentsRef = useRef(null);\r\n\r\n  const [allAdminAppointments, changeAllAdminAppointments] = useState([]);\r\n  const [currentToggledAppointment, changeCurrentToggledAppointment] = useState(\r\n    \"\"\r\n  );\r\n  const [allPersonalEvents, changeAllPersonalEvents] = useState([]);\r\n  const [headerOffset, changeHeaderOffset] = useState(0);\r\n\r\n  const logoutClicked = useSelector(\r\n    (state) => state.logoutClicked.log_out_clicked\r\n  );\r\n  const loadingSpinnerActive = useSelector(\r\n    (state) => state.loadingSpinnerActive.loading_spinner\r\n  );\r\n  const cancelAppointmentClicked = useSelector(\r\n    (state) => state.cancelAppointmentClicked.cancelAppointmentClicked\r\n  );\r\n\r\n  const localizer = momentLocalizer(moment);\r\n\r\n  const treatmentsSummaryCardComponentsArr = [\r\n    { name: \"Calm\", component: <CalmSummaryCard /> },\r\n    { name: \"Bacial\", component: <BacialSummaryCard /> },\r\n    { name: \"Clarify\", component: <ClarifySummaryCard /> },\r\n    { name: \"Dermaplaning\", component: <DermaplaningSummaryCard /> },\r\n    { name: \"Glow\", component: <GlowSummaryCard /> },\r\n    { name: \"GlowTwo\", component: <GlowTwoSummaryCard /> },\r\n    { name: \"Quench\", component: <QuenchSummaryCard /> },\r\n    { name: \"Quickie\", component: <QuickieSummaryCard /> },\r\n    { name: \"ChemicalPeel\", component: <ChemicalPeelSummaryCard /> },\r\n    { name: \"CBD\", component: <CBDSummaryCard /> },\r\n    { name: \"Microneedling\", component: <MicroneedleSummaryCard /> },\r\n    { name: \"Rejuvenate\", component: <RejuvenateSummaryCard /> },\r\n    { name: \"Not Sure\", component: <UnsureSummaryCard /> },\r\n    { name: \"Salt Cave\", component: <SaltCaveSummaryCard /> },\r\n  ];\r\n\r\n  const addOnsSummaryCardComponentsArr = [\r\n    { name: \"ExtraExtractions\", component: <ExtraExtractionsSummaryCard /> },\r\n    { name: \"HydroJelly\", component: <HydroJellyMaskSummaryCard /> },\r\n    { name: \"LED\", component: <LEDTherapySummaryCard /> },\r\n    { name: \"Microcurrent\", component: <MicrocurrentSummaryCard /> },\r\n    { name: \"Microdermabrasion\", component: <MicrodermabrasionSummaryCard /> },\r\n    { name: \"Dermarolling\", component: <DermarollingSummaryCard /> },\r\n    { name: \"NanoNeedling\", component: <NanoNeedlingSummaryCard /> },\r\n    { name: \"GuaSha\", component: <GuaShaSummaryCard /> },\r\n    { name: \"Beard\", component: <BeardSummaryCard /> },\r\n  ];\r\n\r\n  const renderSummaryCardTreatments = () => {\r\n    let componentsArr = [];\r\n\r\n    for (let i = 0; i < treatmentsSummaryCardComponentsArr.length; i++) {\r\n      if (\r\n        allAdminAppointments.filter((x) => x.id === currentToggledAppointment)\r\n          .length > 0\r\n      ) {\r\n        if (\r\n          allAdminAppointments.filter(\r\n            (x) => x.id === currentToggledAppointment\r\n          )[0].treatments\r\n        ) {\r\n          if (\r\n            allAdminAppointments.filter(\r\n              (x) => x.id === currentToggledAppointment\r\n            )[0].treatments[0].name\r\n          ) {\r\n            if (\r\n              allAdminAppointments.filter(\r\n                (x) => x.id === currentToggledAppointment\r\n              )[0].treatments[0].name ===\r\n              treatmentsSummaryCardComponentsArr[i].name\r\n            ) {\r\n              componentsArr.push(\r\n                treatmentsSummaryCardComponentsArr[i].component\r\n              );\r\n            } else {\r\n              if (\r\n                allAdminAppointments\r\n                  .filter((x) => x.id === currentToggledAppointment)[0]\r\n                  .treatments[0].name.includes(\r\n                    treatmentsSummaryCardComponentsArr[i].name\r\n                  )\r\n              ) {\r\n                componentsArr.push(\r\n                  treatmentsSummaryCardComponentsArr[i].component\r\n                );\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return componentsArr.map((item, index) => (\r\n      <div\r\n        className=\"my_selected_appointment_treatment_container admin_side_client_calendar_schedule_treatment_container\"\r\n        key={index}\r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  const renderSummaryCardAddOns = () => {\r\n    let componentsArr = [];\r\n\r\n    if (\r\n      allAdminAppointments.filter((x) => x.id === currentToggledAppointment)[0]\r\n    ) {\r\n      for (let i = 0; i < addOnsSummaryCardComponentsArr.length; i++) {\r\n        for (\r\n          let j = 0;\r\n          j <\r\n          allAdminAppointments.filter(\r\n            (x) => x.id === currentToggledAppointment\r\n          )[0].addOns.length;\r\n          j++\r\n        ) {\r\n          if (\r\n            allAdminAppointments.filter(\r\n              (x) => x.id === currentToggledAppointment\r\n            ).length > 0\r\n          ) {\r\n            if (\r\n              allAdminAppointments.filter(\r\n                (x) => x.id === currentToggledAppointment\r\n              )[0].addOns !== []\r\n            ) {\r\n              if (\r\n                allAdminAppointments.filter(\r\n                  (x) => x.id === currentToggledAppointment\r\n                )[0].addOns[j].name\r\n              ) {\r\n                if (\r\n                  allAdminAppointments.filter(\r\n                    (x) => x.id === currentToggledAppointment\r\n                  )[0].addOns[j].name === addOnsSummaryCardComponentsArr[i].name\r\n                ) {\r\n                  componentsArr.push(\r\n                    addOnsSummaryCardComponentsArr[i].component\r\n                  );\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return componentsArr.map((item, index) => (\r\n      <div\r\n        className=\"my_selected_appointment_treatment_container admin_side_client_calendar_schedule_treatment_container\"\r\n        key={index}\r\n      >\r\n        {item}\r\n      </div>\r\n    ));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const currentAdminAppointments = () => {\r\n      const filteredApps = getAllAppointmentsData\r\n        ? getAllAppointmentsData.all_appointments.filter((x) => {\r\n            if (x.esthetician) {\r\n              if (getEmployeeData) {\r\n                if (getEmployeeData.employee.firstName) {\r\n                  if (getEmployeeData.employee.lastName) {\r\n                    const firstName = x.esthetician.split(\" \")[0];\r\n                    const lastInitial = x.esthetician.split(\" \")[1][0];\r\n\r\n                    if (currentScheduleShown === \"My Schedule\") {\r\n                      if (\r\n                        getEmployeeData.employee.firstName.toUpperCase() ===\r\n                          firstName.toUpperCase() &&\r\n                        getEmployeeData.employee.lastName[0].toUpperCase() ===\r\n                          lastInitial.toUpperCase()\r\n                      ) {\r\n                        return true;\r\n                      } else {\r\n                        return false;\r\n                      }\r\n                    } else {\r\n                      let currentShownFullName = \"\";\r\n\r\n                      if (currentShownFullName.includes(\"Salt Cave\")) {\r\n                        currentShownFullName = \"Salt Cave\";\r\n                      } else {\r\n                        currentShownFullName = currentScheduleShown.split(\r\n                          \"'\"\r\n                        )[0];\r\n                      }\r\n\r\n                      const currentShownFirstName = currentShownFullName.split(\r\n                        \" \"\r\n                      )[0];\r\n                      const currentShownLastName = currentShownFullName.split(\r\n                        \" \"\r\n                      )[1];\r\n\r\n                      if (\r\n                        currentShownFirstName.toUpperCase() ===\r\n                          firstName.toUpperCase() &&\r\n                        currentShownLastName[0].toUpperCase() ===\r\n                          lastInitial.toUpperCase()\r\n                      ) {\r\n                        return true;\r\n                      } else {\r\n                        return false;\r\n                      }\r\n                    }\r\n                  } else {\r\n                    return false;\r\n                  }\r\n                } else {\r\n                  return false;\r\n                }\r\n              } else {\r\n                return false;\r\n              }\r\n            } else {\r\n              return false;\r\n            }\r\n          })\r\n        : null;\r\n\r\n      return filteredApps;\r\n    };\r\n\r\n    changeAllAdminAppointments(currentAdminAppointments());\r\n  }, [getAllAppointmentsData, getEmployeeData, currentScheduleShown]);\r\n\r\n  useEffect(() => {\r\n    const currentAdminPersonalEvents = () => {\r\n      const filteredApps = getAllPersonalEventsData\r\n        ? getAllPersonalEventsData.all_personal_events.filter((x) => {\r\n            if (x.staff) {\r\n              if (getEmployeeData) {\r\n                if (getEmployeeData.employee.firstName) {\r\n                  if (getEmployeeData.employee.lastName) {\r\n                    const firstName = x.staff.split(\" \")[0];\r\n                    const lastInitial = x.staff.split(\" \")[1][0];\r\n\r\n                    if (currentScheduleShown === \"My Schedule\") {\r\n                      if (\r\n                        getEmployeeData.employee.firstName.toUpperCase() ===\r\n                          firstName.toUpperCase() &&\r\n                        getEmployeeData.employee.lastName[0].toUpperCase() ===\r\n                          lastInitial.toUpperCase()\r\n                      ) {\r\n                        return true;\r\n                      } else {\r\n                        return false;\r\n                      }\r\n                    } else {\r\n                      let currentShownFullName = \"\";\r\n\r\n                      if (currentShownFullName.includes(\"Salt Cave\")) {\r\n                        currentShownFullName = \"Salt Cave\";\r\n                      } else {\r\n                        currentShownFullName = currentScheduleShown.split(\r\n                          \"'\"\r\n                        )[0];\r\n                      }\r\n\r\n                      const currentShownFirstName = currentShownFullName.split(\r\n                        \" \"\r\n                      )[0];\r\n                      const currentShownLastName = currentShownFullName.split(\r\n                        \" \"\r\n                      )[1];\r\n\r\n                      if (\r\n                        currentShownFirstName.toUpperCase() ===\r\n                          firstName.toUpperCase() &&\r\n                        currentShownLastName[0].toUpperCase() ===\r\n                          lastInitial.toUpperCase()\r\n                      ) {\r\n                        return true;\r\n                      } else {\r\n                        return false;\r\n                      }\r\n                    }\r\n                  } else {\r\n                    return false;\r\n                  }\r\n                } else {\r\n                  return false;\r\n                }\r\n              } else {\r\n                return false;\r\n              }\r\n            } else {\r\n              return false;\r\n            }\r\n          })\r\n        : null;\r\n\r\n      return filteredApps;\r\n    };\r\n\r\n    changeAllPersonalEvents(currentAdminPersonalEvents());\r\n  }, [getAllPersonalEventsData, getEmployeeData, currentScheduleShown]);\r\n\r\n  const events = () => {\r\n    if (allAdminAppointments) {\r\n      if (allAdminAppointments.length > 0) {\r\n        return allAdminAppointments.map((x) => {\r\n          return {\r\n            id: x.id,\r\n            title: (\r\n              <>\r\n                {x.confirmed ? (\r\n                  <FontAwesomeIcon\r\n                    icon={faCheckCircle}\r\n                    className=\"admin_appointment_confirmed_checkmark\"\r\n                  />\r\n                ) : null}\r\n                {x.client.firstName[0].toUpperCase() +\r\n                  x.client.firstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  x.client.lastName[0].toUpperCase() +\r\n                  x.client.lastName.slice(1).toLowerCase() +\r\n                  \" - \" +\r\n                  (x.treatments[0].name === \"ChemicalPeel\"\r\n                    ? \"Chemical Peel\"\r\n                    : x.treatments[0].name) +\r\n                  \" \" +\r\n                  \"Facial\" +\r\n                  (x.addOns.length === 0\r\n                    ? \"\"\r\n                    : x.addOns.map(\r\n                        (x) =>\r\n                          ` ${\r\n                            x.name === \"ExtraExtractions\"\r\n                              ? \"Extra Extractions\"\r\n                              : x.name\r\n                          } Add-On`\r\n                      ))}\r\n              </>\r\n            ),\r\n            text:\r\n              x.client.firstName[0].toUpperCase() +\r\n              x.client.firstName.slice(1).toLowerCase() +\r\n              \" \" +\r\n              x.client.lastName[0].toUpperCase() +\r\n              x.client.lastName.slice(1).toLowerCase() +\r\n              \" - \" +\r\n              x.treatments[0].name +\r\n              \" \" +\r\n              \"Facial\" +\r\n              (x.addOns === []\r\n                ? null\r\n                : x.addOns.map((x) => `${x.name}, Add-On`)),\r\n            start: moment(\r\n              x.date +\r\n                \" \" +\r\n                x.startTime +\r\n                (Number(x.startTime.split(\":\")[0]) < 9 ||\r\n                Number(x.startTime.split(\":\")[0]) >= 12\r\n                  ? \"PM\"\r\n                  : \"AM\"),\r\n              \"LLL\"\r\n            ).toDate(),\r\n            end: moment(\r\n              x.date +\r\n                \" \" +\r\n                x.endTime +\r\n                (Number(x.endTime.split(\":\")[0]) < 9 ||\r\n                Number(x.endTime.split(\":\")[0]) >= 12\r\n                  ? \"PM\"\r\n                  : \"AM\"),\r\n              \"LLL\"\r\n            ).toDate(),\r\n          };\r\n        });\r\n      } else {\r\n        return [];\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  const personalEvents = () => {\r\n    if (allPersonalEvents) {\r\n      if (allPersonalEvents.length > 0) {\r\n        return allPersonalEvents.map((x) => {\r\n          return {\r\n            id: x._id,\r\n            title: x.title,\r\n            text: x.notes,\r\n            start: moment(\r\n              x.date + \" \" + x.startTime,\r\n              \"M/DD/YYYY h:mm A\"\r\n            ).toDate(),\r\n            end: moment(x.date + \" \" + x.endTime, \"M/DD/YYYY h:mm A\").toDate(),\r\n            backgroundColor: \"rgb(211, 211, 211)\",\r\n            color: \"#265985\",\r\n            allDay: x.allDay,\r\n          };\r\n        });\r\n      } else {\r\n        return [];\r\n      }\r\n    } else {\r\n      return [];\r\n    }\r\n  };\r\n\r\n  // Function for back arrow click to reset selected toggled appointment\r\n\r\n  const handleAppointmentUntoggled = (e) => {\r\n    if (\r\n      (e.currentTarget && selectedAppointmentBackRef) ||\r\n      (e.currentTarget && backToAppointmentsRef)\r\n    ) {\r\n      if (selectedAppointmentBackRef.current || backToAppointmentsRef.current) {\r\n        if (\r\n          selectedAppointmentBackRef.current.className ===\r\n            e.currentTarget.className ||\r\n          backToAppointmentsRef.current.className === e.currentTarget.className\r\n        ) {\r\n          changeCurrentToggledAppointment(\"\");\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  let formats = {\r\n    timeGutterFormat: \"h A\",\r\n  };\r\n\r\n  const eventStyleGetter = (event) => {\r\n    if (event) {\r\n      if (event.backgroundColor && event.color) {\r\n        const style = {\r\n          backgroundColor: event.backgroundColor,\r\n          color: event.color,\r\n          border: \"none\",\r\n          fontWeight: 600,\r\n        };\r\n        return {\r\n          style: style,\r\n        };\r\n      }\r\n    }\r\n  };\r\n\r\n  // Used to place top calendar header in relation to vertical scrollbar\r\n  useEffect(() => {\r\n    const headerOffsetInterval = setInterval(() => {\r\n      const calendarContent = document.getElementsByClassName(\r\n        \"rbc-time-content\"\r\n      );\r\n\r\n      if (calendarContent[0]) {\r\n        const currentRef = calendarContent[0];\r\n\r\n        if (\r\n          headerOffset !==\r\n          Math.abs(currentRef.offsetWidth - currentRef.clientWidth)\r\n        ) {\r\n          changeHeaderOffset(\r\n            Math.abs(currentRef.offsetWidth - currentRef.clientWidth)\r\n          );\r\n        }\r\n      }\r\n    }, 500);\r\n\r\n    return () => {\r\n      clearInterval(headerOffsetInterval);\r\n    };\r\n  }, [headerOffset]);\r\n\r\n  useEffect(() => {\r\n    const timeHeader = document.getElementsByClassName(\r\n      \"rbc-time-header rbc-overflowing\"\r\n    );\r\n\r\n    if (timeHeader[0]) {\r\n      const timeHeaderElement = timeHeader[0];\r\n\r\n      if (headerOffset !== 0) {\r\n        timeHeaderElement.style.marginRight = headerOffset + \"px !important\";\r\n      } else {\r\n        timeHeaderElement.style.marginRight = \"0px !important\";\r\n      }\r\n    }\r\n  }, [headerOffset]);\r\n\r\n  return (\r\n    <div\r\n      className=\"admin_schedule_calendar_main_container\"\r\n      style={{\r\n        zIndex:\r\n          createAppointmentClicked || personalEventClicked\r\n            ? -1\r\n            : logoutClicked || loadingSpinnerActive || cancelAppointmentClicked\r\n            ? 0\r\n            : 1,\r\n      }}\r\n    >\r\n      <Calendar\r\n        events={events().concat(personalEvents())}\r\n        startAccessor=\"start\"\r\n        endAccessor=\"end\"\r\n        eventPropGetter={eventStyleGetter}\r\n        tooltipAccessor={(x) => x.text}\r\n        defaultDate={moment().toDate()}\r\n        localizer={localizer}\r\n        defaultView={Views.WEEK}\r\n        step={15}\r\n        timeslots={4}\r\n        formats={formats}\r\n        scrollToTime={moment()\r\n          .set({ h: 10, m: 0 })\r\n          .toDate()}\r\n        onSelectEvent={(e) => {\r\n          if (e.id) {\r\n            changeCurrentToggledAppointment(e.id);\r\n          } else if (e._id) {\r\n            changeCurrentToggledAppointment(e._id);\r\n          } else {\r\n            return null;\r\n          }\r\n        }}\r\n        slotPropGetter={(date) => {\r\n          if (\r\n            moment(date).format(\"dddd\") === \"Saturday\" ||\r\n            (moment(date).format(\"dddd\") === \"Sunday\" &&\r\n              moment(date).format(\"H\") < 10) ||\r\n            (moment(date).format(\"dddd\") === \"Sunday\" &&\r\n              moment(date).format(\"H\") > 19) ||\r\n            (moment(date).format(\"dddd\") === \"Monday\" &&\r\n              moment(date).format(\"H\") < 10) ||\r\n            (moment(date).format(\"dddd\") === \"Monday\" &&\r\n              moment(date).format(\"H\") > 19) ||\r\n            (moment(date).format(\"dddd\") === \"Tuesday\" &&\r\n              moment(date).format(\"H\") < 10) ||\r\n            (moment(date).format(\"dddd\") === \"Tuesday\" &&\r\n              moment(date).format(\"H\") > 19) ||\r\n            (moment(date).format(\"dddd\") === \"Wednesday\" &&\r\n              moment(date).format(\"H\") < 10) ||\r\n            (moment(date).format(\"dddd\") === \"Wednesday\" &&\r\n              moment(date).format(\"H\") > 19) ||\r\n            (moment(date).format(\"dddd\") === \"Thursday\" &&\r\n              moment(date).format(\"H\") < 10) ||\r\n            (moment(date).format(\"dddd\") === \"Thursday\" &&\r\n              moment(date).format(\"H\") > 19) ||\r\n            (moment(date).format(\"dddd\") === \"Friday\" &&\r\n              moment(date).format(\"H\") < 10) ||\r\n            (moment(date).format(\"dddd\") === \"Friday\" &&\r\n              moment(date).format(\"H\") > 15)\r\n          ) {\r\n            let newStyle = {\r\n              backgroundColor: \"rgb(222, 222, 222)\",\r\n              borderTop: \"1px solid rgb(212, 212, 212)\",\r\n            };\r\n\r\n            return {\r\n              style: newStyle,\r\n            };\r\n          }\r\n        }}\r\n        selectable={true}\r\n        onSelectSlot={(time) =>\r\n          handleCreateAppointmentToggled(\r\n            moment(time.start).format(\"LT\"),\r\n            moment(time.end).format(\"LT\"),\r\n            moment(time.start).format(\"L\")\r\n          )\r\n        }\r\n      />\r\n      <AdminSelectedAppointment\r\n        allAdminAppointments={allAdminAppointments}\r\n        getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n        currentToggledAppointment={currentToggledAppointment}\r\n        changeCurrentToggledAppointment={changeCurrentToggledAppointment}\r\n        ref={{\r\n          selectedAppointmentBackRef: selectedAppointmentBackRef,\r\n          backToAppointmentsRef: backToAppointmentsRef,\r\n        }}\r\n        handleAppointmentUntoggled={handleAppointmentUntoggled}\r\n        renderSummaryCardAddOns={renderSummaryCardAddOns}\r\n        renderSummaryCardTreatments={renderSummaryCardTreatments}\r\n      />\r\n      <AdminSelectedPersonalEvent\r\n        currentToggledAppointment={currentToggledAppointment}\r\n        changeCurrentToggledAppointment={changeCurrentToggledAppointment}\r\n        ref={{\r\n          selectedAppointmentBackRef: selectedAppointmentBackRef,\r\n          backToAppointmentsRef: backToAppointmentsRef,\r\n        }}\r\n        handleAppointmentUntoggled={handleAppointmentUntoggled}\r\n        getAllPersonalEventsData={getAllPersonalEventsData}\r\n        getAllPersonalEventsRefetch={getAllPersonalEventsRefetch}\r\n        intialScreenSize={initialScreenSize}\r\n        currentScreenSize={currentScreenSize}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        timeOptions={timeOptions}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminCalendarComponent;\r\n"]},"metadata":{},"sourceType":"module"}