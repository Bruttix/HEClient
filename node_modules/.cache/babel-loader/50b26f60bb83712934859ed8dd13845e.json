{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\landing_page\\\\SplashScreen.js\";\nimport React, { useMemo } from \"react\";\nimport { animated, Keyframes } from \"react-spring/renderprops\";\nimport { useSelector } from \"react-redux\";\nimport \"./LandingPage.css\";\n\nconst SplashScreen = props => {\n  const initialScreenHeight = props.initialScreenHeight,\n        currentScreenHeight = props.currentScreenHeight;\n  const splashScreenComplete = useSelector(state => state.splashScreenComplete.splashScreenComplete);\n  const GlowChain = Keyframes.Spring({\n    glowAnimation: [{\n      opacity: 0.2,\n      fill: \"rgba(44, 44, 52, 0.8)\",\n      fillOpacity: \"1\",\n      stdDeviation: \"0\",\n      config: {\n        duration: 200\n      }\n    }, {\n      opacity: 1,\n      fill: \"rgb(44, 44, 52)\",\n      fillOpacity: \"1\",\n      stdDeviation: \"0\",\n      config: {\n        duration: 500\n      }\n    }, {\n      opacity: 0.5,\n      fill: \"rgb(44, 44, 52)\",\n      fillOpacity: \"0\",\n      stdDeviation: \"0\",\n      config: {\n        duration: 700\n      }\n    }, {\n      opacity: 0,\n      fill: \"rgb(44, 44, 52)\",\n      fillOpacity: \"0\",\n      stdDeviation: \"0\",\n      config: {\n        duration: 700\n      }\n    }]\n  });\n  const renderGlowLabsLogo = useMemo(() => {\n    if (!splashScreenComplete) {\n      return /*#__PURE__*/React.createElement(GlowChain, {\n        state: \"glowAnimation\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      }, styles => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"g\", {\n        transform: !currentScreenHeight ? initialScreenHeight >= 1350 ? \"translate(-2 -\".concat(initialScreenHeight / 19, \")\") : initialScreenHeight >= 1300 ? \"translate(-2 -\".concat(initialScreenHeight / 15, \")\") : initialScreenHeight >= 1000 ? \"translate(-2 -\".concat(initialScreenHeight / 12, \")\") : initialScreenHeight >= 850 ? \"translate(-2 -\".concat(initialScreenHeight / 15, \")\") : initialScreenHeight >= 830 ? \"translate(-2 -\".concat(initialScreenHeight / 10, \")\") : initialScreenHeight >= 768 ? \"translate(-2 -\".concat(initialScreenHeight / 5, \")\") : \"translate(-2 -\".concat(initialScreenHeight / 4, \")\") : currentScreenHeight >= 1350 ? \"translate(-2 -\".concat(initialScreenHeight / 19, \")\") : currentScreenHeight >= 1300 ? \"translate(-2 -\".concat(initialScreenHeight / 15, \")\") : currentScreenHeight >= 1000 ? \"translate(-2 -\".concat(currentScreenHeight / 12, \")\") : currentScreenHeight >= 850 ? \"translate(-2 -\".concat(currentScreenHeight / 15, \")\") : currentScreenHeight >= 830 ? \"translate(-2 -\".concat(initialScreenHeight / 10, \")\") : currentScreenHeight >= 768 ? \"translate(-2 -\".concat(currentScreenHeight / 5, \")\") : \"translate(-2 -\".concat(currentScreenHeight / 4, \")\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"filter\", {\n        id: \"svg_glow\",\n        x: \"-20%\",\n        y: \"-20%\",\n        width: \"200%\",\n        height: \"200%\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n        in: \"SourceGraphic\",\n        stdDeviation: \"\".concat(styles.stdDeviation),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 19\n        }\n      })), /*#__PURE__*/React.createElement(animated.path, {\n        strokeLinecap: \"round\",\n        fill: \"\".concat(styles.fill),\n        fillOpacity: \"\".concat(styles.fillOpacity),\n        opacity: \"\".concat(styles.opacity),\n        filter: \"url(#svg_glow)\",\n        d: \"M33.7 2.45003C33.4667 2.45003 33.2 2.50003 32.9 2.60003C32.6333 2.70003 32.5 2.83336 32.5 3.00003L32.5 37.5C32.5 37.6667 32.6333 37.8 32.9 37.9C33.2 38 33.4667 38.05 33.7 38.05L33.7 39L24.3 39L24.3 38.05C24.5333 38.05 24.7833 38 25.05 37.9C25.35 37.8 25.5 37.6667 25.5 37.5L25.5 22.4L8.7 22.4L8.7 37.5C8.7 37.6667 8.83333 37.8 9.1 37.9C9.4 38 9.66667 38.05 9.9 38.05L9.9 39L0.5 39L0.5 38.05C0.733333 38.05 0.983334 38 1.25 37.9C1.55 37.8 1.7 37.6667 1.7 37.5L1.7 3.00003C1.7 2.83336 1.55 2.70003 1.25 2.60003C0.983334 2.50003 0.733333 2.45003 0.5 2.45003L0.5 1.50003L9.9 1.50003L9.9 2.45003C9.66667 2.45003 9.4 2.50003 9.1 2.60003C8.83333 2.70003 8.7 2.83336 8.7 3.00003L8.7 16.15L25.5 16.15L25.5 3.00003C25.5 2.83336 25.35 2.70003 25.05 2.60003C24.7833 2.50003 24.5333 2.45003 24.3 2.45003L24.3 1.50003L33.7 1.50003L33.7 2.45003Z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }\n      }))));\n    }\n  }, [splashScreenComplete, currentScreenHeight, initialScreenHeight]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"glow_labs_logo_animation\",\n    viewBox: \"0 0 463.021 463.021\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, renderGlowLabsLogo);\n};\n\nexport default SplashScreen;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/landing_page/SplashScreen.js"],"names":["React","useMemo","animated","Keyframes","useSelector","SplashScreen","props","initialScreenHeight","currentScreenHeight","splashScreenComplete","state","GlowChain","Spring","glowAnimation","opacity","fill","fillOpacity","stdDeviation","config","duration","renderGlowLabsLogo","styles"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\r\nimport { animated, Keyframes } from \"react-spring/renderprops\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./LandingPage.css\";\r\n\r\nconst SplashScreen = (props) => {\r\n  const { initialScreenHeight, currentScreenHeight } = props;\r\n\r\n  const splashScreenComplete = useSelector(\r\n    (state) => state.splashScreenComplete.splashScreenComplete\r\n  );\r\n\r\n  const GlowChain = Keyframes.Spring({\r\n    glowAnimation: [\r\n      {\r\n        opacity: 0.2,\r\n        fill: \"rgba(44, 44, 52, 0.8)\",\r\n        fillOpacity: \"1\",\r\n        stdDeviation: \"0\",\r\n        config: { duration: 200 },\r\n      },\r\n      {\r\n        opacity: 1,\r\n        fill: \"rgb(44, 44, 52)\",\r\n        fillOpacity: \"1\",\r\n        stdDeviation: \"0\",\r\n        config: { duration: 500 },\r\n      },\r\n      {\r\n        opacity: 0.5,\r\n        fill: \"rgb(44, 44, 52)\",\r\n        fillOpacity: \"0\",\r\n        stdDeviation: \"0\",\r\n        config: { duration: 700 },\r\n      },\r\n      {\r\n        opacity: 0,\r\n        fill: \"rgb(44, 44, 52)\",\r\n        fillOpacity: \"0\",\r\n        stdDeviation: \"0\",\r\n        config: { duration: 700 },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const renderGlowLabsLogo = useMemo(() => {\r\n    if (!splashScreenComplete) {\r\n      return (\r\n        <GlowChain state=\"glowAnimation\">\r\n          {(styles) => (\r\n            <>\r\n              <g\r\n                transform={\r\n                  !currentScreenHeight\r\n                    ? initialScreenHeight >= 1350\r\n                      ? `translate(-2 -${initialScreenHeight / 19})`\r\n                      : initialScreenHeight >= 1300\r\n                      ? `translate(-2 -${initialScreenHeight / 15})`\r\n                      : initialScreenHeight >= 1000\r\n                      ? `translate(-2 -${initialScreenHeight / 12})`\r\n                      : initialScreenHeight >= 850\r\n                      ? `translate(-2 -${initialScreenHeight / 15})`\r\n                      : initialScreenHeight >= 830\r\n                      ? `translate(-2 -${initialScreenHeight / 10})`\r\n                      : initialScreenHeight >= 768\r\n                      ? `translate(-2 -${initialScreenHeight / 5})`\r\n                      : `translate(-2 -${initialScreenHeight / 4})`\r\n                    : currentScreenHeight >= 1350\r\n                    ? `translate(-2 -${initialScreenHeight / 19})`\r\n                    : currentScreenHeight >= 1300\r\n                    ? `translate(-2 -${initialScreenHeight / 15})`\r\n                    : currentScreenHeight >= 1000\r\n                    ? `translate(-2 -${currentScreenHeight / 12})`\r\n                    : currentScreenHeight >= 850\r\n                    ? `translate(-2 -${currentScreenHeight / 15})`\r\n                    : currentScreenHeight >= 830\r\n                    ? `translate(-2 -${initialScreenHeight / 10})`\r\n                    : currentScreenHeight >= 768\r\n                    ? `translate(-2 -${currentScreenHeight / 5})`\r\n                    : `translate(-2 -${currentScreenHeight / 4})`\r\n                }\r\n              >\r\n                <filter\r\n                  id=\"svg_glow\"\r\n                  x=\"-20%\"\r\n                  y=\"-20%\"\r\n                  width=\"200%\"\r\n                  height=\"200%\"\r\n                >\r\n                  <feGaussianBlur\r\n                    in=\"SourceGraphic\"\r\n                    stdDeviation={`${styles.stdDeviation}`}\r\n                  />\r\n                </filter>\r\n                <animated.path\r\n                  strokeLinecap=\"round\"\r\n                  fill={`${styles.fill}`}\r\n                  fillOpacity={`${styles.fillOpacity}`}\r\n                  opacity={`${styles.opacity}`}\r\n                  filter=\"url(#svg_glow)\"\r\n                  d=\"M33.7 2.45003C33.4667 2.45003 33.2 2.50003 32.9 2.60003C32.6333 2.70003 32.5 2.83336 32.5 3.00003L32.5 37.5C32.5 37.6667 32.6333 37.8 32.9 37.9C33.2 38 33.4667 38.05 33.7 38.05L33.7 39L24.3 39L24.3 38.05C24.5333 38.05 24.7833 38 25.05 37.9C25.35 37.8 25.5 37.6667 25.5 37.5L25.5 22.4L8.7 22.4L8.7 37.5C8.7 37.6667 8.83333 37.8 9.1 37.9C9.4 38 9.66667 38.05 9.9 38.05L9.9 39L0.5 39L0.5 38.05C0.733333 38.05 0.983334 38 1.25 37.9C1.55 37.8 1.7 37.6667 1.7 37.5L1.7 3.00003C1.7 2.83336 1.55 2.70003 1.25 2.60003C0.983334 2.50003 0.733333 2.45003 0.5 2.45003L0.5 1.50003L9.9 1.50003L9.9 2.45003C9.66667 2.45003 9.4 2.50003 9.1 2.60003C8.83333 2.70003 8.7 2.83336 8.7 3.00003L8.7 16.15L25.5 16.15L25.5 3.00003C25.5 2.83336 25.35 2.70003 25.05 2.60003C24.7833 2.50003 24.5333 2.45003 24.3 2.45003L24.3 1.50003L33.7 1.50003L33.7 2.45003Z\"\r\n                />\r\n               \r\n              </g>\r\n            </>\r\n          )}\r\n        </GlowChain>\r\n      );\r\n    }\r\n  }, [splashScreenComplete, currentScreenHeight, initialScreenHeight]);\r\n\r\n  return (\r\n    <svg className=\"glow_labs_logo_animation\" viewBox=\"0 0 463.021 463.021\">\r\n      {renderGlowLabsLogo}\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default SplashScreen;\r\n"]},"metadata":{},"sourceType":"module"}