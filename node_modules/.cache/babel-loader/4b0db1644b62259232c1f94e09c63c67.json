{"ast":null,"code":"import React,{useEffect}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import ACTION_ADMIN_CONFIRM_NEW_PASSWORD from\"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/ACTION_ADMIN_CONFIRM_NEW_PASSWORD\";import ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET from\"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET\";import ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID from\"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Invalid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID\";import ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID from\"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Valid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID\";import ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID from\"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Invalid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID\";import ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID from\"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Valid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID\";import\"../AdminLoginPage.css\";const AdminConfirmNewPassword=()=>{const dispatch=useDispatch();// Admin Confirm New Password States\nconst adminNewPassword=useSelector(state=>state.adminNewPassword.admin_new_password);const adminNewPasswordValid=useSelector(state=>state.adminNewPasswordValid.admin_new_password_valid);const adminConfirmNewPassword=useSelector(state=>state.adminConfirmNewPassword.admin_confirm_new_password);const adminConfirmNewPasswordInvalid=useSelector(state=>state.adminConfirmNewPasswordInvalid.admin_confirm_new_password_invalid);const adminConfirmNewPasswordValid=useSelector(state=>state.adminConfirmNewPasswordValid.admin_confirm_new_password_valid);useEffect(()=>{if(adminConfirmNewPassword===adminNewPassword){dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID());dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID());}else{dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID());dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID());}},[dispatch,adminConfirmNewPassword,adminNewPassword]);const handleConfirmNewPassword=e=>{dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD(e.currentTarget.value.trim()));};const confirmNewPasswordTyping=e=>{dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET());if(adminNewPassword){if(adminNewPasswordValid){if(e.currentTarget.value===adminNewPassword){dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD(e.currentTarget.value.trim()));dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID());dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID());}}}};return/*#__PURE__*/React.createElement(FormGroup,{className:\"sign_up_individual_form_field\"},/*#__PURE__*/React.createElement(Label,{for:\"adminLoginPassword\"},/*#__PURE__*/React.createElement(\"div\",{className:\"required_label\"},\"Confirm New Password\")),/*#__PURE__*/React.createElement(Input,{type:\"password\",name:\"createAccountConfirmPassword\",defaultValue:adminConfirmNewPassword,maxLength:128,placeholder:\"Re-enter new password here\",className:\"input_field_sign_up\",onChange:confirmNewPasswordTyping,onBlur:handleConfirmNewPassword,invalid:adminConfirmNewPassword===\"\"?false:adminConfirmNewPasswordInvalid?true:false,valid:adminConfirmNewPassword===\"\"?false:adminConfirmNewPasswordValid?true:false}),adminConfirmNewPassword===adminNewPassword?null:/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"Passwords must match.\"));};export default AdminConfirmNewPassword;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminLogin/AdminNewPassword/AdminConfirmNewPassword.js"],"names":["React","useEffect","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","ACTION_ADMIN_CONFIRM_NEW_PASSWORD","ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET","ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID","ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID","ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID","ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID","AdminConfirmNewPassword","dispatch","adminNewPassword","state","admin_new_password","adminNewPasswordValid","admin_new_password_valid","adminConfirmNewPassword","admin_confirm_new_password","adminConfirmNewPasswordInvalid","admin_confirm_new_password_invalid","adminConfirmNewPasswordValid","admin_confirm_new_password_valid","handleConfirmNewPassword","e","currentTarget","value","trim","confirmNewPasswordTyping"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport ACTION_ADMIN_CONFIRM_NEW_PASSWORD from \"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/ACTION_ADMIN_CONFIRM_NEW_PASSWORD\";\r\nimport ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET from \"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET\";\r\nimport ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID from \"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Invalid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID\";\r\nimport ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID from \"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Valid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID\";\r\nimport ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID from \"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Invalid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID\";\r\nimport ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID from \"../../../../actions/Admin/AdminLogin/AdminConfirmNewPassword/Valid/ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID\";\r\nimport \"../AdminLoginPage.css\";\r\n\r\nconst AdminConfirmNewPassword = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Admin Confirm New Password States\r\n  const adminNewPassword = useSelector(\r\n    (state) => state.adminNewPassword.admin_new_password\r\n  );\r\n  const adminNewPasswordValid = useSelector(\r\n    (state) => state.adminNewPasswordValid.admin_new_password_valid\r\n  );\r\n  const adminConfirmNewPassword = useSelector(\r\n    (state) => state.adminConfirmNewPassword.admin_confirm_new_password\r\n  );\r\n  const adminConfirmNewPasswordInvalid = useSelector(\r\n    (state) =>\r\n      state.adminConfirmNewPasswordInvalid.admin_confirm_new_password_invalid\r\n  );\r\n  const adminConfirmNewPasswordValid = useSelector(\r\n    (state) =>\r\n      state.adminConfirmNewPasswordValid.admin_confirm_new_password_valid\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (adminConfirmNewPassword === adminNewPassword) {\r\n      dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID());\r\n      dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID());\r\n    } else {\r\n      dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_INVALID());\r\n      dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_VALID());\r\n    }\r\n  }, [dispatch, adminConfirmNewPassword, adminNewPassword]);\r\n\r\n  const handleConfirmNewPassword = (e) => {\r\n    dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD(e.currentTarget.value.trim()));\r\n  };\r\n\r\n  const confirmNewPasswordTyping = (e) => {\r\n    dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_RESET());\r\n\r\n    if (adminNewPassword) {\r\n      if (adminNewPasswordValid) {\r\n        if (e.currentTarget.value === adminNewPassword) {\r\n          dispatch(\r\n            ACTION_ADMIN_CONFIRM_NEW_PASSWORD(e.currentTarget.value.trim())\r\n          );\r\n          dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_NOT_INVALID());\r\n          dispatch(ACTION_ADMIN_CONFIRM_NEW_PASSWORD_VALID());\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"sign_up_individual_form_field\">\r\n      <Label for=\"adminLoginPassword\">\r\n        <div className=\"required_label\">Confirm New Password</div>\r\n      </Label>\r\n      <Input\r\n        type=\"password\"\r\n        name=\"createAccountConfirmPassword\"\r\n        defaultValue={adminConfirmNewPassword}\r\n        maxLength={128}\r\n        placeholder=\"Re-enter new password here\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={confirmNewPasswordTyping}\r\n        onBlur={handleConfirmNewPassword}\r\n        invalid={\r\n          adminConfirmNewPassword === \"\"\r\n            ? false\r\n            : adminConfirmNewPasswordInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          adminConfirmNewPassword === \"\"\r\n            ? false\r\n            : adminConfirmNewPasswordValid\r\n            ? true\r\n            : false\r\n        }\r\n      />\r\n      {adminConfirmNewPassword === adminNewPassword ? null : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Passwords must match.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default AdminConfirmNewPassword;\r\n"]},"metadata":{},"sourceType":"module"}