{"ast":null,"code":"import _objectSpread from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _taggedTemplateLiteral from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\src\\\\components\\\\admin\\\\AdminSchedule\\\\AdminPersonalEvent\\\\AdminPersonalEvent.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: block;\\n    position: absolute;\\n    left: 25%;\\n    right: 25%;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect, useState, useCallback } from \"react\";\nimport { Transition, Spring } from \"react-spring/renderprops\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLongArrowAltLeft, faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\nimport Dropdown from \"react-dropdown\";\nimport { useMutation } from \"@apollo/react-hooks\";\nimport addPersonalEventMutation from \"../../../../graphql/mutations/addPersonalEventMutation\";\nimport Modal from \"react-modal\";\nimport BounceLoader from \"react-spinners/BounceLoader\";\nimport { css } from \"@emotion/css\";\nimport moment from \"moment\";\nimport ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY\";\nimport ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME\";\nimport ACTION_LOADING_SPINNER_ACTIVE from \"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_ACTIVE\";\nimport ACTION_LOADING_SPINNER_RESET from \"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_TITLE from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE\";\nimport ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET\";\nimport ACTION_ADMIN_PERSONAL_EVENT_NOTES from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES\";\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";\nimport \"../AdminCreateAppointment/AdminCreateAppointment.css\";\nimport \"./AdminPersonalEvent.css\";\n\nconst AdminPersonalEvent = props => {\n  const stopTransition = props.stopTransition,\n        personalEventClicked = props.personalEventClicked,\n        changeStopTransition = props.changeStopTransition,\n        changePersonalEventClicked = props.changePersonalEventClicked,\n        changeCreateAppointmentClicked = props.changeCreateAppointmentClicked,\n        timeOptions = props.timeOptions,\n        allEmployeeOptions = props.allEmployeeOptions,\n        getEmployeeData = props.getEmployeeData,\n        getAllPersonalEventsRefetch = props.getAllPersonalEventsRefetch,\n        renderLoggedInStaffName = props.renderLoggedInStaffName;\n  const dispatch = useDispatch();\n  const adminPersonalEventTitle = useSelector(state => state.adminPersonalEventTitle.title);\n  const adminPersonalEventNotes = useSelector(state => state.adminPersonalEventNotes.notes);\n  const adminPersonalEventAllDay = useSelector(state => state.adminPersonalEventAllDay.all_day);\n  const adminPersonalEventBlockTime = useSelector(state => state.adminPersonalEventBlockTime.block_time);\n  const adminPersonalEventDate = useSelector(state => state.adminPersonalEventDate.date);\n  const adminAppointmentDate = useSelector(state => state.adminAppointmentDate.admin_appointment_date);\n  const adminPersonalEventStartTime = useSelector(state => state.adminPersonalEventStartTime.start_time);\n  const adminPersonalEventEndTime = useSelector(state => state.adminPersonalEventEndTime.end_time);\n  const adminPersonalEventStaff = useSelector(state => state.adminPersonalEventStaff.staff);\n  const adminAppointmentStaffMember = useSelector(state => state.adminAppointmentStaffMember.admin_appointment_staff_member);\n  const loadingSpinnerActive = useSelector(state => state.loadingSpinnerActive.loading_spinner);\n  const logoutClicked = useSelector(state => state.logoutClicked.log_out_clicked);\n\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        clickOutsideDayPicker = _useState2[0],\n        changeClickOutsideDayPicker = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        pageOpened = _useState4[0],\n        changePageOpened = _useState4[1]; // Errors\n\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        titleError = _useState6[0],\n        changeTitleError = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        dateError = _useState8[0],\n        changeDateError = _useState8[1];\n\n  const _useState9 = useState(false),\n        _useState10 = _slicedToArray(_useState9, 2),\n        startTimeError = _useState10[0],\n        changeStartTimeError = _useState10[1];\n\n  const _useState11 = useState(false),\n        _useState12 = _slicedToArray(_useState11, 2),\n        endTimeError = _useState12[0],\n        changeEndTimeError = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        staffError = _useState14[0],\n        changeStaffError = _useState14[1];\n\n  const _useMutation = useMutation(addPersonalEventMutation),\n        _useMutation2 = _slicedToArray(_useMutation, 2),\n        addPersonalEvent = _useMutation2[0],\n        _useMutation2$ = _useMutation2[1],\n        personalEventLoading = _useMutation2$.loading,\n        personalEventData = _useMutation2$.data;\n\n  const override = css(_templateObject());\n  useEffect(() => {\n    changePageOpened(true);\n    const pageNowOpen = setTimeout(() => {\n      changePageOpened(false);\n    }, 500);\n    return () => {\n      clearTimeout(pageNowOpen);\n    };\n  }, []);\n  const resetErrorStates = useCallback(() => {\n    if (titleError) {\n      changeTitleError(false);\n    }\n\n    if (dateError) {\n      changeDateError(false);\n    }\n\n    if (staffError) {\n      changeStaffError(false);\n    }\n\n    if (startTimeError) {\n      changeStartTimeError(false);\n    }\n\n    if (endTimeError) {\n      changeEndTimeError(false);\n    }\n  }, [dateError, endTimeError, staffError, startTimeError, titleError]);\n  const handleBackToSchedule = useCallback(() => {\n    changePersonalEventClicked(false);\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET());\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET());\n    dispatch(ACTION_LOADING_SPINNER_RESET());\n    changeClickOutsideDayPicker(false);\n    resetErrorStates();\n  }, [changePersonalEventClicked, dispatch, resetErrorStates]);\n  useEffect(() => {\n    const dayPickerClickFunction = e => {\n      if (e.target) {\n        if (e.target.placeholder === \"Enter your event date here\") {\n          if (clickOutsideDayPicker) {\n            changeClickOutsideDayPicker(false);\n          }\n        } else if (e.target.getAttribute(\"class\")) {\n          if (typeof (e.target.className === \"string\")) {\n            if (!e.target.className.baseVal) {\n              if (e.target.className.split(\" \").includes(\"DayPicker-Day\") || e.target.className.split(\" \").includes(\"DayPicker-NavButton\")) {\n                if (clickOutsideDayPicker) {\n                  changeClickOutsideDayPicker(false);\n                }\n              } else {\n                if (!clickOutsideDayPicker) {\n                  changeClickOutsideDayPicker(true);\n                }\n              }\n            } else {\n              if (!clickOutsideDayPicker) {\n                changeClickOutsideDayPicker(true);\n              }\n            }\n          } else {\n            if (!clickOutsideDayPicker) {\n              changeClickOutsideDayPicker(true);\n            }\n          }\n        } else {\n          if (!clickOutsideDayPicker) {\n            changeClickOutsideDayPicker(true);\n          }\n        }\n      }\n    };\n\n    window.addEventListener(\"click\", dayPickerClickFunction);\n    return () => {\n      window.removeEventListener(\"click\", dayPickerClickFunction);\n    };\n  }, [clickOutsideDayPicker]);\n\n  const handleAllDayToggle = () => {\n    if (adminPersonalEventAllDay) {\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());\n    } else {\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY());\n    }\n  };\n\n  const handleBlockTimeToggle = () => {\n    if (adminPersonalEventBlockTime) {\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());\n    } else {\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME());\n    }\n  };\n\n  const checkMark = () => {\n    return /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        x: 100\n      },\n      to: {\n        x: 0\n      },\n      config: {\n        duration: 2000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 7\n      }\n    }, styles => /*#__PURE__*/React.createElement(\"svg\", {\n      width: \"100%\",\n      style: {\n        display: \"block\"\n      },\n      viewBox: \"0 0 13.229 13.229\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M2.851 7.56l2.45 2.482 5.36-6.958\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeDasharray: \"100\",\n      strokeDashoffset: pageOpened ? 0 : \"\".concat(styles.x),\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const calculateDuration = (start, end) => {\n    const startTime = moment.utc(start, \"h:mm A\");\n    const endTime = moment.utc(end, \"h:mm A\");\n    return endTime.diff(startTime, \"minutes\");\n  };\n\n  const handleSavePersonalEvent = () => {\n    if (adminPersonalEventTitle && (adminPersonalEventDate || adminAppointmentDate) && adminPersonalEventStartTime && adminPersonalEventEndTime && (adminAppointmentStaffMember || adminPersonalEventStaff)) {\n      addPersonalEvent({\n        variables: {\n          title: adminPersonalEventTitle,\n          date: adminAppointmentDate && !adminPersonalEventDate ? adminAppointmentDate : adminPersonalEventDate,\n          startTime: adminPersonalEventStartTime,\n          endTime: adminPersonalEventEndTime,\n          duration: calculateDuration(adminPersonalEventStartTime, adminPersonalEventEndTime),\n          staff: adminAppointmentStaffMember && !adminPersonalEventStaff ? adminAppointmentStaffMember.value ? adminAppointmentStaffMember.value : adminAppointmentStaffMember : adminPersonalEventStaff.value ? adminPersonalEventStaff.value : adminPersonalEventStaff,\n          notes: adminPersonalEventNotes,\n          allDay: adminPersonalEventAllDay,\n          blockTime: adminPersonalEventBlockTime\n        }\n      });\n    } else {\n      if (!adminPersonalEventTitle) {\n        changeTitleError(true);\n      }\n\n      if (!(adminPersonalEventDate || adminAppointmentDate)) {\n        changeDateError(true);\n      }\n\n      if (!adminPersonalEventStartTime) {\n        changeStartTimeError(true);\n      }\n\n      if (!adminPersonalEventEndTime) {\n        changeEndTimeError(true);\n      }\n\n      if (!(adminAppointmentStaffMember || adminPersonalEventStaff)) {\n        changeStaffError(true);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (personalEventData) {\n      const loadingFunction = setTimeout(() => {\n        handleBackToSchedule();\n        getAllPersonalEventsRefetch();\n      }, 2000);\n      return () => {\n        clearTimeout(loadingFunction);\n      };\n    }\n  }, [handleBackToSchedule, personalEventData, loadingSpinnerActive, getAllPersonalEventsRefetch]);\n  useEffect(() => {\n    if (personalEventLoading) {\n      dispatch(ACTION_LOADING_SPINNER_ACTIVE());\n    }\n  }, [personalEventLoading, dispatch]);\n  return /*#__PURE__*/React.createElement(Transition, {\n    items: personalEventClicked,\n    from: {\n      transform: \"translateX(-100%)\"\n    },\n    enter: {\n      transform: \"translateX(0%)\"\n    },\n    leave: {\n      transform: \"translateX(-100%)\"\n    },\n    config: {\n      duration: 200\n    },\n    immediate: stopTransition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 5\n    }\n  }, personalEventClicked => personalEventClicked && (styleprops => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_personal_event_container\",\n    style: _objectSpread(_objectSpread({}, styleprops), {}, {\n      zIndex: logoutClicked || loadingSpinnerActive ? \"auto\" : 5\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: loadingSpinnerActive,\n    className: \"cancel_appointment_modal\",\n    style: {\n      content: {\n        position: \"fixed\",\n        zIndex: 10000,\n        opacity: 0.99,\n        height: \"100%\",\n        backdropFilter: \"blur(5px)\",\n        WebkitBackdropFilter: \"blur(5px)\",\n        paddingBottom: \"10%\",\n        borderRadius: \"none\",\n        width: \"100vw\",\n        top: \"0\",\n        left: \"0\",\n        right: \"0\",\n        bottom: \"0\",\n        border: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        background: \"rgba(0, 0, 0, 0.5)\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BounceLoader, {\n    size: 100,\n    css: override,\n    color: \"rgb(44, 44, 52)\",\n    loading: loadingSpinnerActive,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_individual_selected_client_back_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faLongArrowAltLeft,\n    className: \"admin_individual_selected_client_back_arrow_icon\",\n    onClick: handleBackToSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 391,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: handleBackToSchedule,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }, \"Back to schedule\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_individual_selected_client_top_page_options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    className: \"admin_individual_selected_client_chosen_create_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 17\n    }\n  }, \"Create Personal Event\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 17\n    }\n  }, \"/\"), /*#__PURE__*/React.createElement(\"p\", {\n    onClick: () => {\n      changePersonalEventClicked(false);\n      changeCreateAppointmentClicked(true);\n      changeStopTransition(true);\n      setTimeout(() => {\n        changeStopTransition(false);\n      }, 1000);\n      resetErrorStates();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 17\n    }\n  }, \"Create Appointment\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_section_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 15\n    }\n  }, \"Personal Event Information\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    style: {\n      outline: titleError ? \"3px solid red\" : \"none\",\n      zIndex: titleError ? 99999 : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    className: \"react-autosuggest__input\",\n    placeholder: \"Create a title for your event\",\n    value: adminPersonalEventTitle,\n    maxLength: 200,\n    onChange: e => {\n      resetErrorStates();\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE(e.target.value));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 450,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 15\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    className: \"react-autosuggest__input\",\n    placeholder: \"Enter optional notes here\",\n    value: adminPersonalEventNotes,\n    maxLength: 200,\n    onChange: e => dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES(e.target.value)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 15\n    }\n  }, \"Staff\"), /*#__PURE__*/React.createElement(Dropdown, {\n    options: getEmployeeData ? getEmployeeData.employee ? getEmployeeData.employee.employeeRole.includes(\"Admin\") ? allEmployeeOptions() : renderLoggedInStaffName() : renderLoggedInStaffName() : renderLoggedInStaffName(),\n    onChange: choice => {\n      resetErrorStates();\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(choice));\n    },\n    value: adminAppointmentStaffMember && !adminPersonalEventStaff ? adminAppointmentStaffMember : adminPersonalEventStaff,\n    controlClassName: staffError ? \"react-autosuggest__input personal_event_error\" : \"react-autosuggest__input\",\n    className: \"react-autosuggest__container\",\n    placeholder: adminAppointmentStaffMember && !adminPersonalEventStaff ? adminAppointmentStaffMember : adminPersonalEventStaff ? adminPersonalEventStaff : \"Enter staff member with which to associate this personal event\",\n    placeholderClassName: adminAppointmentStaffMember && !adminPersonalEventStaff ? \"admin_create_appointent_dropdown_placeholder_time\" : adminPersonalEventStaff ? \"admin_create_appointent_dropdown_placeholder_time\" : \"admin_create_appointent_dropdown_placeholder_no_time\",\n    style: {\n      outline: staffError ? \"3px solid red\" : \"none\",\n      zIndex: staffError ? 99999 : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_section_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 15\n    }\n  }, \"Personal Event Time\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_personal_event_checkbox_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 17\n    }\n  }, \"All day?\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-layers fa-fw client_consent_form_checkbox\",\n    onClick: handleAllDayToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    color: \"rgba(155, 155, 155, 0.4)\",\n    transform: \"grow-10\",\n    icon: faSquare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 19\n    }\n  }), adminPersonalEventAllDay ? checkMark() : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 538,\n      columnNumber: 17\n    }\n  }, \"Block time?\"), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-layers fa-fw client_consent_form_checkbox\",\n    onClick: handleBlockTimeToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    color: \"rgba(155, 155, 155, 0.4)\",\n    transform: \"grow-10\",\n    icon: faSquare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 19\n    }\n  }), adminPersonalEventBlockTime ? checkMark() : null))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    onClick: () => resetErrorStates(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 556,\n      columnNumber: 15\n    }\n  }, \"Date\"), /*#__PURE__*/React.createElement(DayPickerInput, {\n    classNames: {\n      container: \"react-autosuggest__container\",\n      overlay: \"\",\n      overlayWrapper: clickOutsideDayPicker ? \"react-autosuggest__input_hide\" : \"\"\n    },\n    dayPickerProps: {\n      disabledDays: {\n        before: new Date()\n      }\n    },\n    inputProps: {\n      className: dateError ? \"react-autosuggest__input personal_event_error\" : \"react-autosuggest__input\",\n      style: {\n        color: \"rgb(74, 144, 226)\"\n      }\n    },\n    formatDate: formatDate,\n    parseDate: parseDate,\n    onDayChange: day => {\n      resetErrorStates();\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(day));\n    },\n    format: \"L\",\n    value: adminAppointmentDate && !adminPersonalEventDate ? adminAppointmentDate : adminPersonalEventDate,\n    placeholder: \"Enter your event date here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    onClick: () => resetErrorStates(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 589,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_label admin_create_appointment_double_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 15\n    }\n  }, \"Start Time\"), /*#__PURE__*/React.createElement(Dropdown, {\n    options: timeOptions(),\n    onChange: choice => {\n      resetErrorStates();\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME(choice.value));\n    },\n    value: adminPersonalEventStartTime,\n    controlClassName: startTimeError ? \"react-autosuggest__input personal_event_error\" : \"react-autosuggest__input\",\n    className: \"react-autosuggest__container\",\n    placeholder: adminPersonalEventStartTime ? adminPersonalEventStartTime : \"Start Time\",\n    placeholderClassName: adminPersonalEventStartTime ? \"admin_create_appointent_dropdown_placeholder_time\" : \"admin_create_appointent_dropdown_placeholder_no_time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_label admin_create_appointment_double_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 622,\n      columnNumber: 15\n    }\n  }, \"End Time\"), /*#__PURE__*/React.createElement(Dropdown, {\n    options: timeOptions(),\n    onChange: choice => {\n      resetErrorStates();\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(choice.value));\n    },\n    value: adminPersonalEventEndTime,\n    controlClassName: endTimeError ? \"react-autosuggest__input personal_event_error\" : \"react-autosuggest__input\",\n    className: \"react-autosuggest__container\",\n    placeholder: adminPersonalEventEndTime ? adminPersonalEventEndTime : \"End Time\",\n    placeholderClassName: adminPersonalEventEndTime ? \"admin_create_appointent_dropdown_placeholder_time\" : \"admin_create_appointent_dropdown_placeholder_no_time\",\n    style: {\n      outline: endTimeError ? \"3px solid red\" : \"none\",\n      zIndex: endTimeError ? 99999 : \"auto\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_square_payment_form_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-payment-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-creditcard\",\n    onClick: handleSavePersonalEvent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 17\n    }\n  }, \"Save Personal Event\"))))));\n};\n\nexport default AdminPersonalEvent;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HEC/Client/src/components/admin/AdminSchedule/AdminPersonalEvent/AdminPersonalEvent.js"],"names":["React","useEffect","useState","useCallback","Transition","Spring","FontAwesomeIcon","faLongArrowAltLeft","faSquare","useSelector","useDispatch","formatDate","parseDate","DayPickerInput","Dropdown","useMutation","addPersonalEventMutation","Modal","BounceLoader","css","moment","ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY","ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME","ACTION_LOADING_SPINNER_ACTIVE","ACTION_LOADING_SPINNER_RESET","ACTION_ADMIN_PERSONAL_EVENT_TITLE","ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET","ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET","ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET","ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET","ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET","ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET","ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET","ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET","ACTION_ADMIN_PERSONAL_EVENT_NOTES","ACTION_ADMIN_PERSONAL_EVENT_DATE","ACTION_ADMIN_PERSONAL_EVENT_START_TIME","ACTION_ADMIN_PERSONAL_EVENT_END_TIME","ACTION_ADMIN_PERSONAL_EVENT_STAFF","AdminPersonalEvent","props","stopTransition","personalEventClicked","changeStopTransition","changePersonalEventClicked","changeCreateAppointmentClicked","timeOptions","allEmployeeOptions","getEmployeeData","getAllPersonalEventsRefetch","renderLoggedInStaffName","dispatch","adminPersonalEventTitle","state","title","adminPersonalEventNotes","notes","adminPersonalEventAllDay","all_day","adminPersonalEventBlockTime","block_time","adminPersonalEventDate","date","adminAppointmentDate","admin_appointment_date","adminPersonalEventStartTime","start_time","adminPersonalEventEndTime","end_time","adminPersonalEventStaff","staff","adminAppointmentStaffMember","admin_appointment_staff_member","loadingSpinnerActive","loading_spinner","logoutClicked","log_out_clicked","clickOutsideDayPicker","changeClickOutsideDayPicker","pageOpened","changePageOpened","titleError","changeTitleError","dateError","changeDateError","startTimeError","changeStartTimeError","endTimeError","changeEndTimeError","staffError","changeStaffError","addPersonalEvent","personalEventLoading","loading","personalEventData","data","override","pageNowOpen","setTimeout","clearTimeout","resetErrorStates","handleBackToSchedule","dayPickerClickFunction","e","target","placeholder","getAttribute","className","baseVal","split","includes","window","addEventListener","removeEventListener","handleAllDayToggle","handleBlockTimeToggle","checkMark","x","duration","styles","display","calculateDuration","start","end","startTime","utc","endTime","diff","handleSavePersonalEvent","variables","value","allDay","blockTime","loadingFunction","transform","styleprops","zIndex","content","position","opacity","height","backdropFilter","WebkitBackdropFilter","paddingBottom","borderRadius","width","top","left","right","bottom","border","flexDirection","alignItems","justifyContent","background","outline","employee","employeeRole","choice","container","overlay","overlayWrapper","disabledDays","before","Date","style","color","day"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Transition, Spring } from \"react-spring/renderprops\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLongArrowAltLeft,\r\n  faSquare,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport addPersonalEventMutation from \"../../../../graphql/mutations/addPersonalEventMutation\";\r\nimport Modal from \"react-modal\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { css } from \"@emotion/css\";\r\nimport moment from \"moment\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME\";\r\nimport ACTION_LOADING_SPINNER_ACTIVE from \"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_ACTIVE\";\r\nimport ACTION_LOADING_SPINNER_RESET from \"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_TITLE from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_NOTES from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";\r\nimport \"../AdminCreateAppointment/AdminCreateAppointment.css\";\r\nimport \"./AdminPersonalEvent.css\";\r\n\r\nconst AdminPersonalEvent = (props) => {\r\n  const {\r\n    stopTransition,\r\n    personalEventClicked,\r\n    changeStopTransition,\r\n    changePersonalEventClicked,\r\n    changeCreateAppointmentClicked,\r\n    timeOptions,\r\n    allEmployeeOptions,\r\n    getEmployeeData,\r\n    getAllPersonalEventsRefetch,\r\n    renderLoggedInStaffName,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const adminPersonalEventTitle = useSelector(\r\n    (state) => state.adminPersonalEventTitle.title\r\n  );\r\n  const adminPersonalEventNotes = useSelector(\r\n    (state) => state.adminPersonalEventNotes.notes\r\n  );\r\n  const adminPersonalEventAllDay = useSelector(\r\n    (state) => state.adminPersonalEventAllDay.all_day\r\n  );\r\n  const adminPersonalEventBlockTime = useSelector(\r\n    (state) => state.adminPersonalEventBlockTime.block_time\r\n  );\r\n  const adminPersonalEventDate = useSelector(\r\n    (state) => state.adminPersonalEventDate.date\r\n  );\r\n  const adminAppointmentDate = useSelector(\r\n    (state) => state.adminAppointmentDate.admin_appointment_date\r\n  );\r\n  const adminPersonalEventStartTime = useSelector(\r\n    (state) => state.adminPersonalEventStartTime.start_time\r\n  );\r\n  const adminPersonalEventEndTime = useSelector(\r\n    (state) => state.adminPersonalEventEndTime.end_time\r\n  );\r\n  const adminPersonalEventStaff = useSelector(\r\n    (state) => state.adminPersonalEventStaff.staff\r\n  );\r\n  const adminAppointmentStaffMember = useSelector(\r\n    (state) => state.adminAppointmentStaffMember.admin_appointment_staff_member\r\n  );\r\n  const loadingSpinnerActive = useSelector(\r\n    (state) => state.loadingSpinnerActive.loading_spinner\r\n  );\r\n  const logoutClicked = useSelector(\r\n    (state) => state.logoutClicked.log_out_clicked\r\n  );\r\n\r\n  const [clickOutsideDayPicker, changeClickOutsideDayPicker] = useState(true);\r\n  const [pageOpened, changePageOpened] = useState(false);\r\n\r\n  // Errors\r\n  const [titleError, changeTitleError] = useState(false);\r\n  const [dateError, changeDateError] = useState(false);\r\n  const [startTimeError, changeStartTimeError] = useState(false);\r\n  const [endTimeError, changeEndTimeError] = useState(false);\r\n  const [staffError, changeStaffError] = useState(false);\r\n\r\n  const [\r\n    addPersonalEvent,\r\n    { loading: personalEventLoading, data: personalEventData },\r\n  ] = useMutation(addPersonalEventMutation);\r\n\r\n  const override = css`\r\n    display: block;\r\n    position: absolute;\r\n    left: 25%;\r\n    right: 25%;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    changePageOpened(true);\r\n    const pageNowOpen = setTimeout(() => {\r\n      changePageOpened(false);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(pageNowOpen);\r\n    };\r\n  }, []);\r\n\r\n  const resetErrorStates = useCallback(() => {\r\n    if (titleError) {\r\n      changeTitleError(false);\r\n    }\r\n\r\n    if (dateError) {\r\n      changeDateError(false);\r\n    }\r\n\r\n    if (staffError) {\r\n      changeStaffError(false);\r\n    }\r\n\r\n    if (startTimeError) {\r\n      changeStartTimeError(false);\r\n    }\r\n\r\n    if (endTimeError) {\r\n      changeEndTimeError(false);\r\n    }\r\n  }, [dateError, endTimeError, staffError, startTimeError, titleError]);\r\n\r\n  const handleBackToSchedule = useCallback(() => {\r\n    changePersonalEventClicked(false);\r\n\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET());\r\n    dispatch(ACTION_LOADING_SPINNER_RESET());\r\n\r\n    changeClickOutsideDayPicker(false);\r\n\r\n    resetErrorStates();\r\n  }, [changePersonalEventClicked, dispatch, resetErrorStates]);\r\n\r\n  useEffect(() => {\r\n    const dayPickerClickFunction = (e) => {\r\n      if (e.target) {\r\n        if (e.target.placeholder === \"Enter your event date here\") {\r\n          if (clickOutsideDayPicker) {\r\n            changeClickOutsideDayPicker(false);\r\n          }\r\n        } else if (e.target.getAttribute(\"class\")) {\r\n          if (typeof (e.target.className === \"string\")) {\r\n            if (!e.target.className.baseVal) {\r\n              if (\r\n                e.target.className.split(\" \").includes(\"DayPicker-Day\") ||\r\n                e.target.className.split(\" \").includes(\"DayPicker-NavButton\")\r\n              ) {\r\n                if (clickOutsideDayPicker) {\r\n                  changeClickOutsideDayPicker(false);\r\n                }\r\n              } else {\r\n                if (!clickOutsideDayPicker) {\r\n                  changeClickOutsideDayPicker(true);\r\n                }\r\n              }\r\n            } else {\r\n              if (!clickOutsideDayPicker) {\r\n                changeClickOutsideDayPicker(true);\r\n              }\r\n            }\r\n          } else {\r\n            if (!clickOutsideDayPicker) {\r\n              changeClickOutsideDayPicker(true);\r\n            }\r\n          }\r\n        } else {\r\n          if (!clickOutsideDayPicker) {\r\n            changeClickOutsideDayPicker(true);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"click\", dayPickerClickFunction);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", dayPickerClickFunction);\r\n    };\r\n  }, [clickOutsideDayPicker]);\r\n\r\n  const handleAllDayToggle = () => {\r\n    if (adminPersonalEventAllDay) {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());\r\n    } else {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY());\r\n    }\r\n  };\r\n\r\n  const handleBlockTimeToggle = () => {\r\n    if (adminPersonalEventBlockTime) {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());\r\n    } else {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME());\r\n    }\r\n  };\r\n\r\n  const checkMark = () => {\r\n    return (\r\n      <Spring from={{ x: 100 }} to={{ x: 0 }} config={{ duration: 2000 }}>\r\n        {(styles) => (\r\n          <svg\r\n            width=\"100%\"\r\n            style={{\r\n              display: \"block\",\r\n            }}\r\n            viewBox=\"0 0 13.229 13.229\"\r\n          >\r\n            <path\r\n              d=\"M2.851 7.56l2.45 2.482 5.36-6.958\"\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeDasharray=\"100\"\r\n              strokeDashoffset={pageOpened ? 0 : `${styles.x}`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"3\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </Spring>\r\n    );\r\n  };\r\n\r\n  const calculateDuration = (start, end) => {\r\n    const startTime = moment.utc(start, \"h:mm A\");\r\n    const endTime = moment.utc(end, \"h:mm A\");\r\n\r\n    return endTime.diff(startTime, \"minutes\");\r\n  };\r\n\r\n  const handleSavePersonalEvent = () => {\r\n    if (\r\n      adminPersonalEventTitle &&\r\n      (adminPersonalEventDate || adminAppointmentDate) &&\r\n      adminPersonalEventStartTime &&\r\n      adminPersonalEventEndTime &&\r\n      (adminAppointmentStaffMember || adminPersonalEventStaff)\r\n    ) {\r\n      addPersonalEvent({\r\n        variables: {\r\n          title: adminPersonalEventTitle,\r\n          date:\r\n            adminAppointmentDate && !adminPersonalEventDate\r\n              ? adminAppointmentDate\r\n              : adminPersonalEventDate,\r\n          startTime: adminPersonalEventStartTime,\r\n          endTime: adminPersonalEventEndTime,\r\n          duration: calculateDuration(\r\n            adminPersonalEventStartTime,\r\n            adminPersonalEventEndTime\r\n          ),\r\n          staff:\r\n            adminAppointmentStaffMember && !adminPersonalEventStaff\r\n              ? adminAppointmentStaffMember.value\r\n                ? adminAppointmentStaffMember.value\r\n                : adminAppointmentStaffMember\r\n              : adminPersonalEventStaff.value\r\n              ? adminPersonalEventStaff.value\r\n              : adminPersonalEventStaff,\r\n          notes: adminPersonalEventNotes,\r\n          allDay: adminPersonalEventAllDay,\r\n          blockTime: adminPersonalEventBlockTime,\r\n        },\r\n      });\r\n    } else {\r\n      if (!adminPersonalEventTitle) {\r\n        changeTitleError(true);\r\n      }\r\n      if (!(adminPersonalEventDate || adminAppointmentDate)) {\r\n        changeDateError(true);\r\n      }\r\n      if (!adminPersonalEventStartTime) {\r\n        changeStartTimeError(true);\r\n      }\r\n      if (!adminPersonalEventEndTime) {\r\n        changeEndTimeError(true);\r\n      }\r\n      if (!(adminAppointmentStaffMember || adminPersonalEventStaff)) {\r\n        changeStaffError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (personalEventData) {\r\n      const loadingFunction = setTimeout(() => {\r\n        handleBackToSchedule();\r\n        getAllPersonalEventsRefetch();\r\n      }, 2000);\r\n      return () => {\r\n        clearTimeout(loadingFunction);\r\n      };\r\n    }\r\n  }, [\r\n    handleBackToSchedule,\r\n    personalEventData,\r\n    loadingSpinnerActive,\r\n    getAllPersonalEventsRefetch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (personalEventLoading) {\r\n      dispatch(ACTION_LOADING_SPINNER_ACTIVE());\r\n    }\r\n  }, [personalEventLoading, dispatch]);\r\n\r\n  return (\r\n    <Transition\r\n      items={personalEventClicked}\r\n      from={{ transform: \"translateX(-100%)\" }}\r\n      enter={{ transform: \"translateX(0%)\" }}\r\n      leave={{ transform: \"translateX(-100%)\" }}\r\n      config={{ duration: 200 }}\r\n      immediate={stopTransition}\r\n    >\r\n      {(personalEventClicked) =>\r\n        personalEventClicked &&\r\n        ((styleprops) => (\r\n          <div\r\n            className=\"admin_personal_event_container\"\r\n            style={{\r\n              ...styleprops,\r\n              zIndex: logoutClicked || loadingSpinnerActive ? \"auto\" : 5,\r\n            }}\r\n          >\r\n            <Modal\r\n              isOpen={loadingSpinnerActive}\r\n              className=\"cancel_appointment_modal\"\r\n              style={{\r\n                content: {\r\n                  position: \"fixed\",\r\n                  zIndex: 10000,\r\n                  opacity: 0.99,\r\n                  height: \"100%\",\r\n                  backdropFilter: \"blur(5px)\",\r\n                  WebkitBackdropFilter: \"blur(5px)\",\r\n                  paddingBottom: \"10%\",\r\n                  borderRadius: \"none\",\r\n                  width: \"100vw\",\r\n                  top: \"0\",\r\n                  left: \"0\",\r\n                  right: \"0\",\r\n                  bottom: \"0\",\r\n                  border: \"none\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  background: \"rgba(0, 0, 0, 0.5)\",\r\n                },\r\n              }}\r\n            >\r\n              <BounceLoader\r\n                size={100}\r\n                css={override}\r\n                color={\"rgb(44, 44, 52)\"}\r\n                loading={loadingSpinnerActive}\r\n              />\r\n            </Modal>\r\n            <div className=\"admin_individual_selected_client_back_container\">\r\n              <FontAwesomeIcon\r\n                icon={faLongArrowAltLeft}\r\n                className=\"admin_individual_selected_client_back_arrow_icon\"\r\n                onClick={handleBackToSchedule}\r\n              />\r\n              <p onClick={handleBackToSchedule}>Back to schedule</p>\r\n              <div className=\"admin_individual_selected_client_top_page_options\">\r\n                <p className=\"admin_individual_selected_client_chosen_create_page\">\r\n                  Create Personal Event\r\n                </p>\r\n                <p>/</p>\r\n                <p\r\n                  onClick={() => {\r\n                    changePersonalEventClicked(false);\r\n                    changeCreateAppointmentClicked(true);\r\n                    changeStopTransition(true);\r\n                    setTimeout(() => {\r\n                      changeStopTransition(false);\r\n                    }, 1000);\r\n                    resetErrorStates();\r\n                  }}\r\n                >\r\n                  Create Appointment\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"admin_create_appointment_section_header\">\r\n              <h2>Personal Event Information</h2>\r\n            </div>\r\n            <div className=\"admin_create_appointment_input_information_container\">\r\n              <div className=\"admin_create_appointment_label\">Title</div>\r\n              <div\r\n                role=\"combobox\"\r\n                aria-haspopup=\"listbox\"\r\n                aria-owns=\"react-autowhatever-1\"\r\n                aria-controls=\"react-autowhatever-1\"\r\n                aria-expanded=\"false\"\r\n                className=\"react-autosuggest__container\"\r\n                style={{\r\n                  outline: titleError ? \"3px solid red\" : \"none\",\r\n                  zIndex: titleError ? 99999 : \"auto\",\r\n                }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  aria-autocomplete=\"list\"\r\n                  aria-controls=\"react-autowhatever-1\"\r\n                  className=\"react-autosuggest__input\"\r\n                  placeholder={\"Create a title for your event\"}\r\n                  value={adminPersonalEventTitle}\r\n                  maxLength={200}\r\n                  onChange={(e) => {\r\n                    resetErrorStates();\r\n                    dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE(e.target.value));\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"admin_create_appointment_input_information_container\">\r\n              <div className=\"admin_create_appointment_label\">Notes</div>\r\n              <div\r\n                role=\"combobox\"\r\n                aria-haspopup=\"listbox\"\r\n                aria-owns=\"react-autowhatever-1\"\r\n                aria-controls=\"react-autowhatever-1\"\r\n                aria-expanded=\"false\"\r\n                className=\"react-autosuggest__container\"\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  aria-autocomplete=\"list\"\r\n                  aria-controls=\"react-autowhatever-1\"\r\n                  className=\"react-autosuggest__input\"\r\n                  placeholder={\"Enter optional notes here\"}\r\n                  value={adminPersonalEventNotes}\r\n                  maxLength={200}\r\n                  onChange={(e) =>\r\n                    dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES(e.target.value))\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"admin_create_appointment_input_information_container\">\r\n              <div className=\"admin_create_appointment_label\">Staff</div>\r\n              <Dropdown\r\n                options={\r\n                  getEmployeeData\r\n                    ? getEmployeeData.employee\r\n                      ? getEmployeeData.employee.employeeRole.includes(\"Admin\")\r\n                        ? allEmployeeOptions()\r\n                        : renderLoggedInStaffName()\r\n                      : renderLoggedInStaffName()\r\n                    : renderLoggedInStaffName()\r\n                }\r\n                onChange={(choice) => {\r\n                  resetErrorStates();\r\n                  dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(choice));\r\n                }}\r\n                value={\r\n                  adminAppointmentStaffMember && !adminPersonalEventStaff\r\n                    ? adminAppointmentStaffMember\r\n                    : adminPersonalEventStaff\r\n                }\r\n                controlClassName={\r\n                  staffError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\"\r\n                }\r\n                className=\"react-autosuggest__container\"\r\n                placeholder={\r\n                  adminAppointmentStaffMember && !adminPersonalEventStaff\r\n                    ? adminAppointmentStaffMember\r\n                    : adminPersonalEventStaff\r\n                    ? adminPersonalEventStaff\r\n                    : \"Enter staff member with which to associate this personal event\"\r\n                }\r\n                placeholderClassName={\r\n                  adminAppointmentStaffMember && !adminPersonalEventStaff\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : adminPersonalEventStaff\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n                }\r\n                style={{\r\n                  outline: staffError ? \"3px solid red\" : \"none\",\r\n                  zIndex: staffError ? 99999 : \"auto\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"admin_create_appointment_section_header\">\r\n              <h2>Personal Event Time</h2>\r\n\r\n              <div className=\"admin_personal_event_checkbox_container\">\r\n                <p>All day?</p>\r\n                <span\r\n                  className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n                  onClick={handleAllDayToggle}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    color=\"rgba(155, 155, 155, 0.4)\"\r\n                    transform=\"grow-10\"\r\n                    icon={faSquare}\r\n                  />\r\n                  {adminPersonalEventAllDay ? checkMark() : null}\r\n                </span>\r\n                <p>Block time?</p>\r\n                <span\r\n                  className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n                  onClick={handleBlockTimeToggle}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    color=\"rgba(155, 155, 155, 0.4)\"\r\n                    transform=\"grow-10\"\r\n                    icon={faSquare}\r\n                  />\r\n                  {adminPersonalEventBlockTime ? checkMark() : null}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"admin_create_appointment_input_information_container\"\r\n              onClick={() => resetErrorStates()}\r\n            >\r\n              <div className=\"admin_create_appointment_label\">Date</div>\r\n              <DayPickerInput\r\n                classNames={{\r\n                  container: \"react-autosuggest__container\",\r\n                  overlay: \"\",\r\n                  overlayWrapper: clickOutsideDayPicker\r\n                    ? \"react-autosuggest__input_hide\"\r\n                    : \"\",\r\n                }}\r\n                dayPickerProps={{ disabledDays: { before: new Date() } }}\r\n                inputProps={{\r\n                  className: dateError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\",\r\n                  style: {\r\n                    color: \"rgb(74, 144, 226)\",\r\n                  },\r\n                }}\r\n                formatDate={formatDate}\r\n                parseDate={parseDate}\r\n                onDayChange={(day) => {\r\n                  resetErrorStates();\r\n                  dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(day));\r\n                }}\r\n                format=\"L\"\r\n                value={\r\n                  adminAppointmentDate && !adminPersonalEventDate\r\n                    ? adminAppointmentDate\r\n                    : adminPersonalEventDate\r\n                }\r\n                placeholder=\"Enter your event date here\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"admin_create_appointment_input_information_container\"\r\n              onClick={() => resetErrorStates()}\r\n            >\r\n              <div className=\"admin_create_appointment_label admin_create_appointment_double_label\">\r\n                Start Time\r\n              </div>\r\n              <Dropdown\r\n                options={timeOptions()}\r\n                onChange={(choice) => {\r\n                  resetErrorStates();\r\n                  dispatch(\r\n                    ACTION_ADMIN_PERSONAL_EVENT_START_TIME(choice.value)\r\n                  );\r\n                }}\r\n                value={adminPersonalEventStartTime}\r\n                controlClassName={\r\n                  startTimeError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\"\r\n                }\r\n                className=\"react-autosuggest__container\"\r\n                placeholder={\r\n                  adminPersonalEventStartTime\r\n                    ? adminPersonalEventStartTime\r\n                    : \"Start Time\"\r\n                }\r\n                placeholderClassName={\r\n                  adminPersonalEventStartTime\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n                }\r\n              />\r\n              <div className=\"admin_create_appointment_label admin_create_appointment_double_label\">\r\n                End Time\r\n              </div>\r\n              <Dropdown\r\n                options={timeOptions()}\r\n                onChange={(choice) => {\r\n                  resetErrorStates();\r\n                  dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(choice.value));\r\n                }}\r\n                value={adminPersonalEventEndTime}\r\n                controlClassName={\r\n                  endTimeError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\"\r\n                }\r\n                className=\"react-autosuggest__container\"\r\n                placeholder={\r\n                  adminPersonalEventEndTime\r\n                    ? adminPersonalEventEndTime\r\n                    : \"End Time\"\r\n                }\r\n                placeholderClassName={\r\n                  adminPersonalEventEndTime\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n                }\r\n                style={{\r\n                  outline: endTimeError ? \"3px solid red\" : \"none\",\r\n                  zIndex: endTimeError ? 99999 : \"auto\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"admin_square_payment_form_container\">\r\n              <div className=\"sq-payment-form\">\r\n                <div\r\n                  className=\"sq-creditcard\"\r\n                  onClick={handleSavePersonalEvent}\r\n                >\r\n                  Save Personal Event\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default AdminPersonalEvent;\r\n"]},"metadata":{},"sourceType":"module"}