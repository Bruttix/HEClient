{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\availability\\\\Date\\\\Availability.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useLocation, Redirect } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport ACTION_SELECTED_DAY from \"../../../actions/SelectedDay/ACTION_SELECTED_DAY\";\nimport ACTION_SELECTED_DAY_RESET from \"../../../actions/SelectedDay/ACTION_SELECTED_DAY_RESET\";\nimport ACTION_SELECTED_TIME_RESET from \"../../../actions/SelectedTime/ACTION_SELECTED_TIME_RESET\";\nimport ACTION_SELECT_TIME_ACTIVE from \"../../../actions/SelectTimeActive/ACTION_SELECT_TIME_ACTIVE\";\nimport ACTION_SELECT_TIME_NOT_ACTIVE from \"../../../actions/SelectTimeActive/ACTION_SELECT_TIME_NOT_ACTIVE\";\nimport ACTION_REFORMATTED_DAY from \"../../../actions/SelectedDay/ReformattedDay/ACTION_REFORMATTED_DAY\";\nimport ACTION_REFORMATTED_DAY_RESET from \"../../../actions/SelectedDay/ReformattedDay/ACTION_REFORMATTED_DAY_RESET\";\nimport ACTION_REFORMATTED_DAY_CLONE_RESET from \"../../../actions/SelectedDay/ReformattedDayClone/ACTION_REFORMATTED_DAY_CLONE_RESET\";\nimport ACTION_ALL_COLLAPSE_RESET from \"../../../actions/SelectedTime/CollapseIsOpen/ACTION_ALL_COLLAPSE_RESET\";\nimport ACTION_CONTINUE_BUTTON_RESET from \"../../../actions/ContinueToCheckoutButtonActive/ACTION_CONTINUE_BUTTON_RESET\";\nimport ACTION_FIRST_NAME_RESET from \"../../../actions/GuestCheckoutForm/FirstName/ACTION_FIRST_NAME_RESET\";\nimport ACTION_LAST_NAME_RESET from \"../../../actions/GuestCheckoutForm/LastName/ACTION_LAST_NAME_RESET\";\nimport ACTION_EMAIL_RESET from \"../../../actions/GuestCheckoutForm/Email/ACTION_EMAIL_RESET\";\nimport ACTION_EMAIL_NOT_INVALID from \"../../../actions/EmailValidation/Invalid/ACTION_EMAIL_NOT_INVALID\";\nimport ACTION_EMAIL_NOT_VALID from \"../../../actions/EmailValidation/Valid/ACTION_EMAIL_NOT_VALID\";\nimport ACTION_PHONE_NUMBER_RESET from \"../../../actions/GuestCheckoutForm/PhoneNumber/ACTION_PHONE_NUMBER_RESET\";\nimport ACTION_PHONE_NOT_INVALID from \"../../../actions/PhoneNumberValidation/Invalid/ACTION_PHONE_NOT_INVALID\";\nimport ACTION_PHONE_NOT_VALID from \"../../../actions/PhoneNumberValidation/Valid/ACTION_PHONE_NOT_VALID\";\nimport ACTION_APPOINTMENT_NOTES_RESET from \"../../../actions/GuestCheckoutForm/AppointmentNotes/ACTION_APPOINTMENT_NOTES_RESET\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft, faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport Calendar from \"react-calendar\";\nimport \"./Availability.css\";\nimport ACTION_CART_PAGE_OPENED from \"../../../actions/InCart/CartPageOpened/ACTION_CART_PAGE_OPENED\";\nimport ACTION_TIME_PREFERENCE_PAGE_OPENED from \"../../../actions/InCart/CartPageOpened/ACTION_TIME_PREFERENCE_PAGE_OPENED\";\nimport ACTION_SELECTED_ESTHETICIAN from \"../../../actions/SelectedEsthetician/ACTION_SELECTED_ESTHETICIAN\";\nimport ACTION_DAY_OF_THE_WEEK_RESET from \"../../../actions/SelectedDay/DayOfTheWeek/ACTION_DAY_OF_THE_WEEK_RESET\";\nimport { animateScroll } from \"react-scroll\";\n\nconst Availability = props => {\n  let location = useLocation();\n  const dispatch = useDispatch();\n\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        numberOfWeeks = _useState2[0],\n        changeNumberOfWeeks = _useState2[1];\n\n  const selectedDay = useSelector(state => state.selectedDay.selectedDay);\n  const selectTimeActive = useSelector(state => state.selectTimeActive.selectTimeActive);\n  const selectedTime = useSelector(state => state.selectedTime.selectedTime);\n  const reformattedDay = useSelector(state => state.reformattedDay.reformattedDay);\n  const reformattedDayClone = useSelector(state => state.reformattedDayClone.reformattedDayClone);\n  const continueToCheckoutButton = useSelector(state => state.continueToCheckoutButton.continueButtonActive);\n  const splashScreenComplete = useSelector(state => state.splashScreenComplete.splashScreenComplete);\n  const selectedEsthetician = useSelector(state => state.selectedEsthetician.selectedEsthetician);\n  const saltCaveInCart = useSelector(state => state.saltCaveInCart.in_cart); // Checkout Form States\n\n  const firstName = useSelector(state => state.firstName.first_name);\n  const lastName = useSelector(state => state.lastName.last_name);\n  const appointmentNotes = useSelector(state => state.appointmentNotes.appointment_notes); // Email States\n\n  const email = useSelector(state => state.email.email);\n  const emailIsValid = useSelector(state => state.emailIsValid.email_valid);\n  const emailIsInvalid = useSelector(state => state.emailIsInvalid.email_invalid); // Phone Number States\n\n  const phoneNumber = useSelector(state => state.phoneNumber.phone_number);\n  const phoneIsValid = useSelector(state => state.phoneIsValid.phone_valid);\n  const phoneIsInvalid = useSelector(state => state.phoneIsInvalid.phone_invalid);\n\n  const redirectToHome = () => {\n    if (!splashScreenComplete) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 14\n        }\n      });\n    } else if (!props.currentScreenSize) {\n      if (props.initialScreenSize >= 1200) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 16\n          }\n        });\n      }\n    } else if (props.currentScreenSize >= 1200) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const monthsArr = [{\n    Jan: \"January\"\n  }, {\n    Feb: \"February\"\n  }, {\n    Mar: \"March\"\n  }, {\n    Apr: \"April\"\n  }, {\n    May: \"May\"\n  }, {\n    Jun: \"June\"\n  }, {\n    Jul: \"July\"\n  }, {\n    Aug: \"August\"\n  }, {\n    Sep: \"September\"\n  }, {\n    Oct: \"October\"\n  }, {\n    Nov: \"November\"\n  }, {\n    Dec: \"December\"\n  }];\n  let reformattedDate = \"\";\n\n  const formatDate = () => {\n    if (selectedDay) {\n      const dateString = selectedDay.toString().slice(4, 15);\n      const monthThreeLetters = dateString.slice(0, 3);\n      let monthAllLetters = \"\";\n\n      for (let i = 0; i < monthsArr.length; i++) {\n        if (monthsArr[i][monthThreeLetters]) {\n          monthAllLetters = monthsArr[i][monthThreeLetters];\n        }\n      }\n\n      let dayAndYear = \"\";\n\n      if (dateString[4] === \"0\") {\n        dayAndYear = dateString.slice(5, 6).concat(\", \", dateString.slice(7, 11));\n      } else {\n        dayAndYear = dateString.slice(4, 6).concat(\", \", dateString.slice(7, 11));\n      }\n\n      reformattedDate = monthAllLetters.concat(\" \", dayAndYear);\n      dispatch(ACTION_REFORMATTED_DAY(reformattedDate));\n    }\n  }; // Keeps user-selected date marker viewable even when traversing to other routes\n\n\n  useEffect(() => {\n    for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\n      if (document.getElementsByTagName(\"ABBR\")[i].attributes[0].nodeValue === reformattedDay) {\n        if (selectedDay) {\n          document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.add(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n        } else {\n          document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.remove(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n        }\n      }\n    }\n  }, [reformattedDay, selectedDay]);\n  formatDate();\n  useEffect(() => {\n    if (location.pathname.includes(\"availability\")) {\n      animateScroll.scrollToTop({\n        containerId: \"date_page\",\n        offset: -500\n      });\n    }\n  }, [location.pathname]);\n  const today = new Date();\n  const tomorrow = new Date(today);\n  tomorrow.setDate(tomorrow.getDate() + 1);\n  const dayAfterTomorrow = new Date(today);\n  dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2);\n  const sixtyDaysFromNow = new Date(today);\n  sixtyDaysFromNow.setDate(sixtyDaysFromNow.getDate() + 60);\n  const dayOfTheWeek = today.getDay();\n  const hourOfTheDay = today.getHours();\n\n  const handleMinDate = () => {\n    if (dayOfTheWeek === 0) {\n      if (hourOfTheDay > 5) {\n        return new Date(tomorrow);\n      } else {\n        return new Date(today);\n      }\n    } else if (dayOfTheWeek === 1) {\n      return new Date(tomorrow);\n    } else if (dayOfTheWeek === 2 | dayOfTheWeek === 3 | dayOfTheWeek === 4) {\n      if (hourOfTheDay > 7) {\n        return new Date(tomorrow);\n      } else {\n        return new Date(today);\n      }\n    } else if (dayOfTheWeek === 5) {\n      if (hourOfTheDay > 3) {\n        return new Date(dayAfterTomorrow);\n      } else {\n        return new Date(today);\n      }\n    } else {\n      return new Date(tomorrow);\n    }\n  };\n\n  const weekNumberValues = document.getElementsByClassName(\"react-calendar__month-view__weekNumbers\");\n  useEffect(() => {\n    changeNumberOfWeeks(weekNumberValues[0].childElementCount);\n  }, [numberOfWeeks, weekNumberValues]); // Selects new date while preventing two markers from being active at the same time\n\n  const handleValueClick = day => {\n    if (reformattedDay === reformattedDayClone) {\n      dispatch(ACTION_REFORMATTED_DAY_CLONE_RESET());\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\n\n      for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\n        document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.remove(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n      }\n\n      if (selectedTime) {\n        dispatch(ACTION_SELECTED_TIME_RESET());\n      }\n\n      if (continueToCheckoutButton) {\n        dispatch(ACTION_CONTINUE_BUTTON_RESET());\n      }\n\n      if (firstName) {\n        dispatch(ACTION_FIRST_NAME_RESET());\n      }\n\n      if (lastName) {\n        dispatch(ACTION_LAST_NAME_RESET());\n      }\n\n      if (email) {\n        dispatch(ACTION_EMAIL_RESET());\n      }\n\n      if (emailIsInvalid) {\n        dispatch(ACTION_EMAIL_NOT_INVALID());\n      }\n\n      if (emailIsValid) {\n        dispatch(ACTION_EMAIL_NOT_VALID());\n      }\n\n      if (phoneNumber) {\n        dispatch(ACTION_PHONE_NUMBER_RESET());\n      }\n\n      if (phoneIsInvalid) {\n        dispatch(ACTION_PHONE_NOT_INVALID());\n      }\n\n      if (phoneIsValid) {\n        dispatch(ACTION_PHONE_NOT_VALID());\n      }\n\n      if (appointmentNotes) {\n        dispatch(ACTION_APPOINTMENT_NOTES_RESET());\n      }\n    }\n\n    if (selectedDay.toString() !== day.toString()) {\n      dispatch(ACTION_SELECTED_DAY(day));\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\n\n      if (selectedDay === \"\") {\n        for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\n          if (document.getElementsByTagName(\"ABBR\")[i].attributes[0].nodeValue === reformattedDay) {\n            document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.add(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n          }\n        }\n\n        if (selectedTime) {\n          dispatch(ACTION_SELECTED_TIME_RESET());\n        }\n\n        if (continueToCheckoutButton) {\n          dispatch(ACTION_CONTINUE_BUTTON_RESET());\n        }\n\n        if (firstName) {\n          dispatch(ACTION_FIRST_NAME_RESET());\n        }\n\n        if (lastName) {\n          dispatch(ACTION_LAST_NAME_RESET());\n        }\n\n        if (email) {\n          dispatch(ACTION_EMAIL_RESET());\n        }\n\n        if (emailIsInvalid) {\n          dispatch(ACTION_EMAIL_NOT_INVALID());\n        }\n\n        if (emailIsValid) {\n          dispatch(ACTION_EMAIL_NOT_VALID());\n        }\n\n        if (phoneNumber) {\n          dispatch(ACTION_PHONE_NUMBER_RESET());\n        }\n\n        if (phoneIsInvalid) {\n          dispatch(ACTION_PHONE_NOT_INVALID());\n        }\n\n        if (phoneIsValid) {\n          dispatch(ACTION_PHONE_NOT_VALID());\n        }\n\n        if (appointmentNotes) {\n          dispatch(ACTION_APPOINTMENT_NOTES_RESET());\n        }\n      } else {\n        dispatch(ACTION_SELECT_TIME_NOT_ACTIVE());\n\n        for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\n          dispatch(ACTION_REFORMATTED_DAY_RESET());\n          document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.remove(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n        }\n\n        if (selectedTime) {\n          dispatch(ACTION_SELECTED_TIME_RESET());\n        }\n\n        if (continueToCheckoutButton) {\n          dispatch(ACTION_CONTINUE_BUTTON_RESET());\n        }\n\n        if (firstName) {\n          dispatch(ACTION_FIRST_NAME_RESET());\n        }\n\n        if (lastName) {\n          dispatch(ACTION_LAST_NAME_RESET());\n        }\n\n        if (email) {\n          dispatch(ACTION_EMAIL_RESET());\n        }\n\n        if (emailIsInvalid) {\n          dispatch(ACTION_EMAIL_NOT_INVALID());\n        }\n\n        if (emailIsValid) {\n          dispatch(ACTION_EMAIL_NOT_VALID());\n        }\n\n        if (phoneNumber) {\n          dispatch(ACTION_PHONE_NUMBER_RESET());\n        }\n\n        if (phoneIsInvalid) {\n          dispatch(ACTION_PHONE_NOT_INVALID());\n        }\n\n        if (phoneIsValid) {\n          dispatch(ACTION_PHONE_NOT_VALID());\n        }\n\n        if (appointmentNotes) {\n          dispatch(ACTION_APPOINTMENT_NOTES_RESET());\n        }\n      }\n    } else {\n      dispatch(ACTION_SELECTED_DAY_RESET());\n      dispatch(ACTION_SELECT_TIME_NOT_ACTIVE());\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\n\n      for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\n        document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.remove(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n      }\n\n      if (selectedTime) {\n        dispatch(ACTION_SELECTED_TIME_RESET());\n      }\n\n      if (continueToCheckoutButton) {\n        dispatch(ACTION_CONTINUE_BUTTON_RESET());\n      }\n\n      if (firstName) {\n        dispatch(ACTION_FIRST_NAME_RESET());\n      }\n\n      if (lastName) {\n        dispatch(ACTION_LAST_NAME_RESET());\n      }\n\n      if (email) {\n        dispatch(ACTION_EMAIL_RESET());\n      }\n\n      if (emailIsInvalid) {\n        dispatch(ACTION_EMAIL_NOT_INVALID());\n      }\n\n      if (emailIsValid) {\n        dispatch(ACTION_EMAIL_NOT_VALID());\n      }\n\n      if (phoneNumber) {\n        dispatch(ACTION_PHONE_NUMBER_RESET());\n      }\n\n      if (phoneIsInvalid) {\n        dispatch(ACTION_PHONE_NOT_INVALID());\n      }\n\n      if (phoneIsValid) {\n        dispatch(ACTION_PHONE_NOT_VALID());\n      }\n\n      if (appointmentNotes) {\n        dispatch(ACTION_APPOINTMENT_NOTES_RESET());\n      }\n    }\n  };\n\n  const handleActiveMonthChange = () => {\n    changeNumberOfWeeks(weekNumberValues[0].childElementCount);\n\n    for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\n      if (selectedDay !== \"\") {\n        if (document.getElementsByTagName(\"ABBR\")[i].attributes[0].nodeValue === reformattedDay) {\n          document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.add(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n        }\n      } else {\n        dispatch(ACTION_REFORMATTED_DAY_RESET());\n        document.getElementsByTagName(\"ABBR\")[i].parentElement.classList.remove(\"react-calendar__tile--active\", \"react-calendar__tile--rangeStart\", \"react-calendar__tile--rangeEnd\", \"react-calendar__tile--rangeBothEnds\");\n      }\n    }\n  };\n\n  const handleSelectTimeButtonClick = () => {\n    if (selectedDay !== \"\") {\n      dispatch(ACTION_SELECT_TIME_ACTIVE());\n      dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED());\n    } else {\n      return null;\n    }\n  };\n\n  useEffect(() => {\n    if (!selectedEsthetician) {\n      if (props.getEmployeesData) {\n        if (props.getEmployeesData.employees) {\n          const filteredEmployeesArr = props.getEmployeesData.employees.filter(x => {\n            return x.employeeRole.includes(\"Esthetician\");\n          });\n          const randomEmployee = filteredEmployeesArr[Math.floor(Math.random() * (filteredEmployeesArr.length - 1))];\n          dispatch(ACTION_SELECTED_ESTHETICIAN(randomEmployee.firstName[0].toUpperCase() + randomEmployee.firstName.slice(1).toLowerCase() + \" \" + randomEmployee.lastName[0].toUpperCase() + randomEmployee.lastName.slice(1).toLowerCase()));\n        }\n      }\n    }\n  });\n  useEffect(() => {\n    window.addEventListener(\"popstate\", () => {\n      if (document.location.href.includes(\"cart\")) {\n        dispatch(ACTION_CART_PAGE_OPENED());\n      }\n    });\n  }, [dispatch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"availability_container\",\n    id: \"date_page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 5\n    }\n  }, redirectToHome(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"availability_container_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 7\n    }\n  }, !props.currentScreenSize ? props.initialScreenSize >= 1200 ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => dispatch(ACTION_CART_PAGE_OPENED()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/cart\",\n    onClick: () => dispatch(ACTION_CART_PAGE_OPENED()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 522,\n      columnNumber: 15\n    }\n  })) : props.currentScreenSize >= 1200 ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => dispatch(ACTION_CART_PAGE_OPENED()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Link, {\n    to: \"/cart\",\n    onClick: () => dispatch(ACTION_CART_PAGE_OPENED()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 537,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 9\n    }\n  }, \"AVAILABILITY\"), !props.currentScreenSize ? props.initialScreenSize >= 1200 ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_forward_arrow\",\n    icon: faChevronRight,\n    style: {\n      display: selectTimeActive ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 547,\n      columnNumber: 15\n    }\n  })) : /*#__PURE__*/React.createElement(Link, {\n    to: location => \"\".concat(location.pathname, \"/timepreference\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 554,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_forward_arrow\",\n    style: {\n      display: selectTimeActive ? \"block\" : \"none\"\n    },\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 555,\n      columnNumber: 15\n    }\n  })) : props.currentScreenSize >= 1200 ? /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED()),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_forward_arrow\",\n    icon: faChevronRight,\n    style: {\n      display: selectTimeActive ? \"block\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 13\n    }\n  })) : /*#__PURE__*/React.createElement(Link, {\n    to: location => \"\".concat(location.pathname, \"/timepreference\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"availability_forward_arrow\",\n    style: {\n      display: selectTimeActive ? \"block\" : \"none\"\n    },\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select_a_date_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 581,\n      columnNumber: 9\n    }\n  }, \"SELECT A DATE\", saltCaveInCart ? null : selectedEsthetician ? \" WITH \" + selectedEsthetician.split(\" \")[0].toUpperCase() + \" \" + selectedEsthetician.split(\" \")[1][0].toUpperCase() + \".\" : null)), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"availability_statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }\n  }, \"You can schedule an appointment between 12 hours and 60 days ahead of time.\"), /*#__PURE__*/React.createElement(Calendar, {\n    calendarType: \"ISO 8601\",\n    activeStartDate: selectedDay ? selectedDay : reformattedDay ? new Date(reformattedDay) : today,\n    minDate: handleMinDate(),\n    maxDate: new Date(sixtyDaysFromNow),\n    maxDetail: \"month\",\n    nextLabel: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 20\n      }\n    }),\n    prevLabel: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faChevronLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 20\n      }\n    }),\n    next2Label: null,\n    prev2Label: null,\n    onActiveStartDateChange: () => handleActiveMonthChange(),\n    showNeighboringMonth: false,\n    showWeekNumbers: true,\n    tileClassName: \"calendar_tiles\",\n    tileDisabled: ({\n      date\n    }) => date.getDay() === 6,\n    onClickDay: value => handleValueClick(value),\n    onChange: () => {\n      dispatch(ACTION_DAY_OF_THE_WEEK_RESET());\n      dispatch(ACTION_REFORMATTED_DAY_RESET());\n      dispatch(ACTION_REFORMATTED_DAY_CLONE_RESET());\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\n      dispatch(ACTION_CONTINUE_BUTTON_RESET());\n      dispatch(ACTION_FIRST_NAME_RESET());\n      dispatch(ACTION_LAST_NAME_RESET());\n      dispatch(ACTION_EMAIL_RESET());\n      dispatch(ACTION_PHONE_NUMBER_RESET());\n      dispatch(ACTION_SELECTED_TIME_RESET());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: location => {\n      if (!props.currentScreenSize) {\n        if (props.initialScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          return \"\".concat(location.pathname, \"/timepreference\");\n        }\n      } else {\n        if (props.currentScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          return \"\".concat(location.pathname, \"/timepreference\");\n        }\n      }\n    },\n    style: {\n      display: \"block\",\n      pointerEvents: selectedDay !== \"\" ? \"auto\" : \"none\"\n    },\n    onClick: handleSelectTimeButtonClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"select_time_button\",\n    style: {\n      marginTop: numberOfWeeks < 6 ? \"4vh\" : \"2vh\",\n      marginBottom: numberOfWeeks < 6 ? \"0\" : \"2vh\",\n      background: selectedDay ? \"rgb(44, 44, 52)\" : \"#f0f0f0\",\n      color: selectedDay ? \"rgb(255, 255, 255)\" : \"rgb(201, 201, 201)\",\n      pointerEvents: selectedDay !== \"\" ? \"auto\" : \"none\",\n      transition: \"background 0.5s ease, color 0.5s ease\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 11\n    }\n  }, \"Select a Time\"))));\n};\n\nexport default Availability;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/availability/Date/Availability.js"],"names":["React","useEffect","useState","Link","useLocation","Redirect","useDispatch","useSelector","ACTION_SELECTED_DAY","ACTION_SELECTED_DAY_RESET","ACTION_SELECTED_TIME_RESET","ACTION_SELECT_TIME_ACTIVE","ACTION_SELECT_TIME_NOT_ACTIVE","ACTION_REFORMATTED_DAY","ACTION_REFORMATTED_DAY_RESET","ACTION_REFORMATTED_DAY_CLONE_RESET","ACTION_ALL_COLLAPSE_RESET","ACTION_CONTINUE_BUTTON_RESET","ACTION_FIRST_NAME_RESET","ACTION_LAST_NAME_RESET","ACTION_EMAIL_RESET","ACTION_EMAIL_NOT_INVALID","ACTION_EMAIL_NOT_VALID","ACTION_PHONE_NUMBER_RESET","ACTION_PHONE_NOT_INVALID","ACTION_PHONE_NOT_VALID","ACTION_APPOINTMENT_NOTES_RESET","FontAwesomeIcon","faChevronLeft","faChevronRight","Calendar","ACTION_CART_PAGE_OPENED","ACTION_TIME_PREFERENCE_PAGE_OPENED","ACTION_SELECTED_ESTHETICIAN","ACTION_DAY_OF_THE_WEEK_RESET","animateScroll","Availability","props","location","dispatch","numberOfWeeks","changeNumberOfWeeks","selectedDay","state","selectTimeActive","selectedTime","reformattedDay","reformattedDayClone","continueToCheckoutButton","continueButtonActive","splashScreenComplete","selectedEsthetician","saltCaveInCart","in_cart","firstName","first_name","lastName","last_name","appointmentNotes","appointment_notes","email","emailIsValid","email_valid","emailIsInvalid","email_invalid","phoneNumber","phone_number","phoneIsValid","phone_valid","phoneIsInvalid","phone_invalid","redirectToHome","currentScreenSize","initialScreenSize","monthsArr","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","reformattedDate","formatDate","dateString","toString","slice","monthThreeLetters","monthAllLetters","i","length","dayAndYear","concat","document","getElementsByTagName","attributes","nodeValue","parentElement","classList","add","remove","pathname","includes","scrollToTop","containerId","offset","today","Date","tomorrow","setDate","getDate","dayAfterTomorrow","sixtyDaysFromNow","dayOfTheWeek","getDay","hourOfTheDay","getHours","handleMinDate","weekNumberValues","getElementsByClassName","childElementCount","handleValueClick","day","handleActiveMonthChange","handleSelectTimeButtonClick","getEmployeesData","employees","filteredEmployeesArr","filter","x","employeeRole","randomEmployee","Math","floor","random","toUpperCase","toLowerCase","window","addEventListener","href","display","split","date","value","pointerEvents","marginTop","marginBottom","background","color","transition"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Link, useLocation, Redirect } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport ACTION_SELECTED_DAY from \"../../../actions/SelectedDay/ACTION_SELECTED_DAY\";\r\nimport ACTION_SELECTED_DAY_RESET from \"../../../actions/SelectedDay/ACTION_SELECTED_DAY_RESET\";\r\nimport ACTION_SELECTED_TIME_RESET from \"../../../actions/SelectedTime/ACTION_SELECTED_TIME_RESET\";\r\nimport ACTION_SELECT_TIME_ACTIVE from \"../../../actions/SelectTimeActive/ACTION_SELECT_TIME_ACTIVE\";\r\nimport ACTION_SELECT_TIME_NOT_ACTIVE from \"../../../actions/SelectTimeActive/ACTION_SELECT_TIME_NOT_ACTIVE\";\r\nimport ACTION_REFORMATTED_DAY from \"../../../actions/SelectedDay/ReformattedDay/ACTION_REFORMATTED_DAY\";\r\nimport ACTION_REFORMATTED_DAY_RESET from \"../../../actions/SelectedDay/ReformattedDay/ACTION_REFORMATTED_DAY_RESET\";\r\nimport ACTION_REFORMATTED_DAY_CLONE_RESET from \"../../../actions/SelectedDay/ReformattedDayClone/ACTION_REFORMATTED_DAY_CLONE_RESET\";\r\nimport ACTION_ALL_COLLAPSE_RESET from \"../../../actions/SelectedTime/CollapseIsOpen/ACTION_ALL_COLLAPSE_RESET\";\r\nimport ACTION_CONTINUE_BUTTON_RESET from \"../../../actions/ContinueToCheckoutButtonActive/ACTION_CONTINUE_BUTTON_RESET\";\r\nimport ACTION_FIRST_NAME_RESET from \"../../../actions/GuestCheckoutForm/FirstName/ACTION_FIRST_NAME_RESET\";\r\nimport ACTION_LAST_NAME_RESET from \"../../../actions/GuestCheckoutForm/LastName/ACTION_LAST_NAME_RESET\";\r\nimport ACTION_EMAIL_RESET from \"../../../actions/GuestCheckoutForm/Email/ACTION_EMAIL_RESET\";\r\nimport ACTION_EMAIL_NOT_INVALID from \"../../../actions/EmailValidation/Invalid/ACTION_EMAIL_NOT_INVALID\";\r\nimport ACTION_EMAIL_NOT_VALID from \"../../../actions/EmailValidation/Valid/ACTION_EMAIL_NOT_VALID\";\r\nimport ACTION_PHONE_NUMBER_RESET from \"../../../actions/GuestCheckoutForm/PhoneNumber/ACTION_PHONE_NUMBER_RESET\";\r\nimport ACTION_PHONE_NOT_INVALID from \"../../../actions/PhoneNumberValidation/Invalid/ACTION_PHONE_NOT_INVALID\";\r\nimport ACTION_PHONE_NOT_VALID from \"../../../actions/PhoneNumberValidation/Valid/ACTION_PHONE_NOT_VALID\";\r\nimport ACTION_APPOINTMENT_NOTES_RESET from \"../../../actions/GuestCheckoutForm/AppointmentNotes/ACTION_APPOINTMENT_NOTES_RESET\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"./Availability.css\";\r\nimport ACTION_CART_PAGE_OPENED from \"../../../actions/InCart/CartPageOpened/ACTION_CART_PAGE_OPENED\";\r\nimport ACTION_TIME_PREFERENCE_PAGE_OPENED from \"../../../actions/InCart/CartPageOpened/ACTION_TIME_PREFERENCE_PAGE_OPENED\";\r\nimport ACTION_SELECTED_ESTHETICIAN from \"../../../actions/SelectedEsthetician/ACTION_SELECTED_ESTHETICIAN\";\r\nimport ACTION_DAY_OF_THE_WEEK_RESET from \"../../../actions/SelectedDay/DayOfTheWeek/ACTION_DAY_OF_THE_WEEK_RESET\";\r\nimport { animateScroll } from \"react-scroll\";\r\n\r\nconst Availability = (props) => {\r\n  let location = useLocation();\r\n  const dispatch = useDispatch();\r\n  const [numberOfWeeks, changeNumberOfWeeks] = useState(null);\r\n\r\n  const selectedDay = useSelector((state) => state.selectedDay.selectedDay);\r\n  const selectTimeActive = useSelector(\r\n    (state) => state.selectTimeActive.selectTimeActive\r\n  );\r\n  const selectedTime = useSelector((state) => state.selectedTime.selectedTime);\r\n  const reformattedDay = useSelector(\r\n    (state) => state.reformattedDay.reformattedDay\r\n  );\r\n  const reformattedDayClone = useSelector(\r\n    (state) => state.reformattedDayClone.reformattedDayClone\r\n  );\r\n  const continueToCheckoutButton = useSelector(\r\n    (state) => state.continueToCheckoutButton.continueButtonActive\r\n  );\r\n  const splashScreenComplete = useSelector(\r\n    (state) => state.splashScreenComplete.splashScreenComplete\r\n  );\r\n  const selectedEsthetician = useSelector(\r\n    (state) => state.selectedEsthetician.selectedEsthetician\r\n  );\r\n  const saltCaveInCart = useSelector((state) => state.saltCaveInCart.in_cart);\r\n\r\n  // Checkout Form States\r\n  const firstName = useSelector((state) => state.firstName.first_name);\r\n  const lastName = useSelector((state) => state.lastName.last_name);\r\n  const appointmentNotes = useSelector(\r\n    (state) => state.appointmentNotes.appointment_notes\r\n  );\r\n\r\n  // Email States\r\n  const email = useSelector((state) => state.email.email);\r\n  const emailIsValid = useSelector((state) => state.emailIsValid.email_valid);\r\n  const emailIsInvalid = useSelector(\r\n    (state) => state.emailIsInvalid.email_invalid\r\n  );\r\n\r\n  // Phone Number States\r\n  const phoneNumber = useSelector((state) => state.phoneNumber.phone_number);\r\n  const phoneIsValid = useSelector((state) => state.phoneIsValid.phone_valid);\r\n  const phoneIsInvalid = useSelector(\r\n    (state) => state.phoneIsInvalid.phone_invalid\r\n  );\r\n\r\n  const redirectToHome = () => {\r\n    if (!splashScreenComplete) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (!props.currentScreenSize) {\r\n      if (props.initialScreenSize >= 1200) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n    } else if (props.currentScreenSize >= 1200) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  const monthsArr = [\r\n    { Jan: \"January\" },\r\n    { Feb: \"February\" },\r\n    { Mar: \"March\" },\r\n    { Apr: \"April\" },\r\n    { May: \"May\" },\r\n    { Jun: \"June\" },\r\n    { Jul: \"July\" },\r\n    { Aug: \"August\" },\r\n    { Sep: \"September\" },\r\n    { Oct: \"October\" },\r\n    { Nov: \"November\" },\r\n    { Dec: \"December\" },\r\n  ];\r\n\r\n  let reformattedDate = \"\";\r\n\r\n  const formatDate = () => {\r\n    if (selectedDay) {\r\n      const dateString = selectedDay.toString().slice(4, 15);\r\n      const monthThreeLetters = dateString.slice(0, 3);\r\n      let monthAllLetters = \"\";\r\n\r\n      for (let i = 0; i < monthsArr.length; i++) {\r\n        if (monthsArr[i][monthThreeLetters]) {\r\n          monthAllLetters = monthsArr[i][monthThreeLetters];\r\n        }\r\n      }\r\n\r\n      let dayAndYear = \"\";\r\n\r\n      if (dateString[4] === \"0\") {\r\n        dayAndYear = dateString\r\n          .slice(5, 6)\r\n          .concat(\", \", dateString.slice(7, 11));\r\n      } else {\r\n        dayAndYear = dateString\r\n          .slice(4, 6)\r\n          .concat(\", \", dateString.slice(7, 11));\r\n      }\r\n\r\n      reformattedDate = monthAllLetters.concat(\" \", dayAndYear);\r\n      dispatch(ACTION_REFORMATTED_DAY(reformattedDate));\r\n    }\r\n  };\r\n\r\n  // Keeps user-selected date marker viewable even when traversing to other routes\r\n  useEffect(() => {\r\n    for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\r\n      if (\r\n        document.getElementsByTagName(\"ABBR\")[i].attributes[0].nodeValue ===\r\n        reformattedDay\r\n      ) {\r\n        if (selectedDay) {\r\n          document\r\n            .getElementsByTagName(\"ABBR\")\r\n            [i].parentElement.classList.add(\r\n              \"react-calendar__tile--active\",\r\n              \"react-calendar__tile--rangeStart\",\r\n              \"react-calendar__tile--rangeEnd\",\r\n              \"react-calendar__tile--rangeBothEnds\"\r\n            );\r\n        } else {\r\n          document\r\n            .getElementsByTagName(\"ABBR\")\r\n            [i].parentElement.classList.remove(\r\n              \"react-calendar__tile--active\",\r\n              \"react-calendar__tile--rangeStart\",\r\n              \"react-calendar__tile--rangeEnd\",\r\n              \"react-calendar__tile--rangeBothEnds\"\r\n            );\r\n        }\r\n      }\r\n    }\r\n  }, [reformattedDay, selectedDay]);\r\n\r\n  formatDate();\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.includes(\"availability\")) {\r\n      animateScroll.scrollToTop({ containerId: \"date_page\", offset: -500 });\r\n    }\r\n  }, [location.pathname]);\r\n\r\n  const today = new Date();\r\n  const tomorrow = new Date(today);\r\n  tomorrow.setDate(tomorrow.getDate() + 1);\r\n  const dayAfterTomorrow = new Date(today);\r\n  dayAfterTomorrow.setDate(dayAfterTomorrow.getDate() + 2);\r\n\r\n  const sixtyDaysFromNow = new Date(today);\r\n  sixtyDaysFromNow.setDate(sixtyDaysFromNow.getDate() + 60);\r\n\r\n  const dayOfTheWeek = today.getDay();\r\n  const hourOfTheDay = today.getHours();\r\n\r\n  const handleMinDate = () => {\r\n    if (dayOfTheWeek === 0) {\r\n      if (hourOfTheDay > 5) {\r\n        return new Date(tomorrow);\r\n      } else {\r\n        return new Date(today);\r\n      }\r\n    } else if (dayOfTheWeek === 1) {\r\n      return new Date(tomorrow);\r\n    } else if (\r\n      (dayOfTheWeek === 2) |\r\n      (dayOfTheWeek === 3) |\r\n      (dayOfTheWeek === 4)\r\n    ) {\r\n      if (hourOfTheDay > 7) {\r\n        return new Date(tomorrow);\r\n      } else {\r\n        return new Date(today);\r\n      }\r\n    } else if (dayOfTheWeek === 5) {\r\n      if (hourOfTheDay > 3) {\r\n        return new Date(dayAfterTomorrow);\r\n      } else {\r\n        return new Date(today);\r\n      }\r\n    } else {\r\n      return new Date(tomorrow);\r\n    }\r\n  };\r\n\r\n  const weekNumberValues = document.getElementsByClassName(\r\n    \"react-calendar__month-view__weekNumbers\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    changeNumberOfWeeks(weekNumberValues[0].childElementCount);\r\n  }, [numberOfWeeks, weekNumberValues]);\r\n\r\n  // Selects new date while preventing two markers from being active at the same time\r\n  const handleValueClick = (day) => {\r\n    if (reformattedDay === reformattedDayClone) {\r\n      dispatch(ACTION_REFORMATTED_DAY_CLONE_RESET());\r\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\r\n      for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\r\n        document\r\n          .getElementsByTagName(\"ABBR\")\r\n          [i].parentElement.classList.remove(\r\n            \"react-calendar__tile--active\",\r\n            \"react-calendar__tile--rangeStart\",\r\n            \"react-calendar__tile--rangeEnd\",\r\n            \"react-calendar__tile--rangeBothEnds\"\r\n          );\r\n      }\r\n      if (selectedTime) {\r\n        dispatch(ACTION_SELECTED_TIME_RESET());\r\n      }\r\n      if (continueToCheckoutButton) {\r\n        dispatch(ACTION_CONTINUE_BUTTON_RESET());\r\n      }\r\n      if (firstName) {\r\n        dispatch(ACTION_FIRST_NAME_RESET());\r\n      }\r\n      if (lastName) {\r\n        dispatch(ACTION_LAST_NAME_RESET());\r\n      }\r\n      if (email) {\r\n        dispatch(ACTION_EMAIL_RESET());\r\n      }\r\n      if (emailIsInvalid) {\r\n        dispatch(ACTION_EMAIL_NOT_INVALID());\r\n      }\r\n      if (emailIsValid) {\r\n        dispatch(ACTION_EMAIL_NOT_VALID());\r\n      }\r\n      if (phoneNumber) {\r\n        dispatch(ACTION_PHONE_NUMBER_RESET());\r\n      }\r\n      if (phoneIsInvalid) {\r\n        dispatch(ACTION_PHONE_NOT_INVALID());\r\n      }\r\n      if (phoneIsValid) {\r\n        dispatch(ACTION_PHONE_NOT_VALID());\r\n      }\r\n      if (appointmentNotes) {\r\n        dispatch(ACTION_APPOINTMENT_NOTES_RESET());\r\n      }\r\n    }\r\n    if (selectedDay.toString() !== day.toString()) {\r\n      dispatch(ACTION_SELECTED_DAY(day));\r\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\r\n      if (selectedDay === \"\") {\r\n        for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\r\n          if (\r\n            document.getElementsByTagName(\"ABBR\")[i].attributes[0].nodeValue ===\r\n            reformattedDay\r\n          ) {\r\n            document\r\n              .getElementsByTagName(\"ABBR\")\r\n              [i].parentElement.classList.add(\r\n                \"react-calendar__tile--active\",\r\n                \"react-calendar__tile--rangeStart\",\r\n                \"react-calendar__tile--rangeEnd\",\r\n                \"react-calendar__tile--rangeBothEnds\"\r\n              );\r\n          }\r\n        }\r\n        if (selectedTime) {\r\n          dispatch(ACTION_SELECTED_TIME_RESET());\r\n        }\r\n        if (continueToCheckoutButton) {\r\n          dispatch(ACTION_CONTINUE_BUTTON_RESET());\r\n        }\r\n        if (firstName) {\r\n          dispatch(ACTION_FIRST_NAME_RESET());\r\n        }\r\n        if (lastName) {\r\n          dispatch(ACTION_LAST_NAME_RESET());\r\n        }\r\n        if (email) {\r\n          dispatch(ACTION_EMAIL_RESET());\r\n        }\r\n        if (emailIsInvalid) {\r\n          dispatch(ACTION_EMAIL_NOT_INVALID());\r\n        }\r\n        if (emailIsValid) {\r\n          dispatch(ACTION_EMAIL_NOT_VALID());\r\n        }\r\n        if (phoneNumber) {\r\n          dispatch(ACTION_PHONE_NUMBER_RESET());\r\n        }\r\n        if (phoneIsInvalid) {\r\n          dispatch(ACTION_PHONE_NOT_INVALID());\r\n        }\r\n        if (phoneIsValid) {\r\n          dispatch(ACTION_PHONE_NOT_VALID());\r\n        }\r\n        if (appointmentNotes) {\r\n          dispatch(ACTION_APPOINTMENT_NOTES_RESET());\r\n        }\r\n      } else {\r\n        dispatch(ACTION_SELECT_TIME_NOT_ACTIVE());\r\n        for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\r\n          dispatch(ACTION_REFORMATTED_DAY_RESET());\r\n          document\r\n            .getElementsByTagName(\"ABBR\")\r\n            [i].parentElement.classList.remove(\r\n              \"react-calendar__tile--active\",\r\n              \"react-calendar__tile--rangeStart\",\r\n              \"react-calendar__tile--rangeEnd\",\r\n              \"react-calendar__tile--rangeBothEnds\"\r\n            );\r\n        }\r\n        if (selectedTime) {\r\n          dispatch(ACTION_SELECTED_TIME_RESET());\r\n        }\r\n        if (continueToCheckoutButton) {\r\n          dispatch(ACTION_CONTINUE_BUTTON_RESET());\r\n        }\r\n        if (firstName) {\r\n          dispatch(ACTION_FIRST_NAME_RESET());\r\n        }\r\n        if (lastName) {\r\n          dispatch(ACTION_LAST_NAME_RESET());\r\n        }\r\n        if (email) {\r\n          dispatch(ACTION_EMAIL_RESET());\r\n        }\r\n        if (emailIsInvalid) {\r\n          dispatch(ACTION_EMAIL_NOT_INVALID());\r\n        }\r\n        if (emailIsValid) {\r\n          dispatch(ACTION_EMAIL_NOT_VALID());\r\n        }\r\n        if (phoneNumber) {\r\n          dispatch(ACTION_PHONE_NUMBER_RESET());\r\n        }\r\n        if (phoneIsInvalid) {\r\n          dispatch(ACTION_PHONE_NOT_INVALID());\r\n        }\r\n        if (phoneIsValid) {\r\n          dispatch(ACTION_PHONE_NOT_VALID());\r\n        }\r\n        if (appointmentNotes) {\r\n          dispatch(ACTION_APPOINTMENT_NOTES_RESET());\r\n        }\r\n      }\r\n    } else {\r\n      dispatch(ACTION_SELECTED_DAY_RESET());\r\n      dispatch(ACTION_SELECT_TIME_NOT_ACTIVE());\r\n      dispatch(ACTION_ALL_COLLAPSE_RESET());\r\n      for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\r\n        document\r\n          .getElementsByTagName(\"ABBR\")\r\n          [i].parentElement.classList.remove(\r\n            \"react-calendar__tile--active\",\r\n            \"react-calendar__tile--rangeStart\",\r\n            \"react-calendar__tile--rangeEnd\",\r\n            \"react-calendar__tile--rangeBothEnds\"\r\n          );\r\n      }\r\n      if (selectedTime) {\r\n        dispatch(ACTION_SELECTED_TIME_RESET());\r\n      }\r\n      if (continueToCheckoutButton) {\r\n        dispatch(ACTION_CONTINUE_BUTTON_RESET());\r\n      }\r\n      if (firstName) {\r\n        dispatch(ACTION_FIRST_NAME_RESET());\r\n      }\r\n      if (lastName) {\r\n        dispatch(ACTION_LAST_NAME_RESET());\r\n      }\r\n      if (email) {\r\n        dispatch(ACTION_EMAIL_RESET());\r\n      }\r\n      if (emailIsInvalid) {\r\n        dispatch(ACTION_EMAIL_NOT_INVALID());\r\n      }\r\n      if (emailIsValid) {\r\n        dispatch(ACTION_EMAIL_NOT_VALID());\r\n      }\r\n      if (phoneNumber) {\r\n        dispatch(ACTION_PHONE_NUMBER_RESET());\r\n      }\r\n      if (phoneIsInvalid) {\r\n        dispatch(ACTION_PHONE_NOT_INVALID());\r\n      }\r\n      if (phoneIsValid) {\r\n        dispatch(ACTION_PHONE_NOT_VALID());\r\n      }\r\n      if (appointmentNotes) {\r\n        dispatch(ACTION_APPOINTMENT_NOTES_RESET());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleActiveMonthChange = () => {\r\n    changeNumberOfWeeks(weekNumberValues[0].childElementCount);\r\n    for (let i = 0; i < document.getElementsByTagName(\"ABBR\").length; i++) {\r\n      if (selectedDay !== \"\") {\r\n        if (\r\n          document.getElementsByTagName(\"ABBR\")[i].attributes[0].nodeValue ===\r\n          reformattedDay\r\n        ) {\r\n          document\r\n            .getElementsByTagName(\"ABBR\")\r\n            [i].parentElement.classList.add(\r\n              \"react-calendar__tile--active\",\r\n              \"react-calendar__tile--rangeStart\",\r\n              \"react-calendar__tile--rangeEnd\",\r\n              \"react-calendar__tile--rangeBothEnds\"\r\n            );\r\n        }\r\n      } else {\r\n        dispatch(ACTION_REFORMATTED_DAY_RESET());\r\n        document\r\n          .getElementsByTagName(\"ABBR\")\r\n          [i].parentElement.classList.remove(\r\n            \"react-calendar__tile--active\",\r\n            \"react-calendar__tile--rangeStart\",\r\n            \"react-calendar__tile--rangeEnd\",\r\n            \"react-calendar__tile--rangeBothEnds\"\r\n          );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSelectTimeButtonClick = () => {\r\n    if (selectedDay !== \"\") {\r\n      dispatch(ACTION_SELECT_TIME_ACTIVE());\r\n      dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED());\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!selectedEsthetician) {\r\n      if (props.getEmployeesData) {\r\n        if (props.getEmployeesData.employees) {\r\n          const filteredEmployeesArr = props.getEmployeesData.employees.filter(\r\n            (x) => {\r\n              return x.employeeRole.includes(\"Esthetician\");\r\n            }\r\n          );\r\n\r\n          const randomEmployee =\r\n            filteredEmployeesArr[\r\n              Math.floor(Math.random() * (filteredEmployeesArr.length - 1))\r\n            ];\r\n\r\n          dispatch(\r\n            ACTION_SELECTED_ESTHETICIAN(\r\n              randomEmployee.firstName[0].toUpperCase() +\r\n                randomEmployee.firstName.slice(1).toLowerCase() +\r\n                \" \" +\r\n                randomEmployee.lastName[0].toUpperCase() +\r\n                randomEmployee.lastName.slice(1).toLowerCase()\r\n            )\r\n          );\r\n        }\r\n      }\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"popstate\", () => {\r\n      if (document.location.href.includes(\"cart\")) {\r\n        dispatch(ACTION_CART_PAGE_OPENED());\r\n      }\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"availability_container\" id=\"date_page\">\r\n      {redirectToHome()}\r\n      <div className=\"availability_container_header\">\r\n        {!props.currentScreenSize ? (\r\n          props.initialScreenSize >= 1200 ? (\r\n            <div onClick={() => dispatch(ACTION_CART_PAGE_OPENED())}>\r\n              <FontAwesomeIcon\r\n                className=\"availability_back_arrow\"\r\n                icon={faChevronLeft}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Link\r\n              to=\"/cart\"\r\n              onClick={() => dispatch(ACTION_CART_PAGE_OPENED())}\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"availability_back_arrow\"\r\n                icon={faChevronLeft}\r\n              />\r\n            </Link>\r\n          )\r\n        ) : props.currentScreenSize >= 1200 ? (\r\n          <div onClick={() => dispatch(ACTION_CART_PAGE_OPENED())}>\r\n            <FontAwesomeIcon\r\n              className=\"availability_back_arrow\"\r\n              icon={faChevronLeft}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Link to=\"/cart\" onClick={() => dispatch(ACTION_CART_PAGE_OPENED())}>\r\n            <FontAwesomeIcon\r\n              className=\"availability_back_arrow\"\r\n              icon={faChevronLeft}\r\n            />\r\n          </Link>\r\n        )}\r\n        <h1>AVAILABILITY</h1>\r\n        {!props.currentScreenSize ? (\r\n          props.initialScreenSize >= 1200 ? (\r\n            <div onClick={() => dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED())}>\r\n              <FontAwesomeIcon\r\n                className=\"availability_forward_arrow\"\r\n                icon={faChevronRight}\r\n                style={{ display: selectTimeActive ? \"block\" : \"none\" }}\r\n              />\r\n            </div>\r\n          ) : (\r\n            <Link to={(location) => `${location.pathname}/timepreference`}>\r\n              <FontAwesomeIcon\r\n                className=\"availability_forward_arrow\"\r\n                style={{ display: selectTimeActive ? \"block\" : \"none\" }}\r\n                icon={faChevronRight}\r\n              />\r\n            </Link>\r\n          )\r\n        ) : props.currentScreenSize >= 1200 ? (\r\n          <div onClick={() => dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED())}>\r\n            <FontAwesomeIcon\r\n              className=\"availability_forward_arrow\"\r\n              icon={faChevronRight}\r\n              style={{ display: selectTimeActive ? \"block\" : \"none\" }}\r\n            />\r\n          </div>\r\n        ) : (\r\n          <Link to={(location) => `${location.pathname}/timepreference`}>\r\n            <FontAwesomeIcon\r\n              className=\"availability_forward_arrow\"\r\n              style={{ display: selectTimeActive ? \"block\" : \"none\" }}\r\n              icon={faChevronRight}\r\n            />\r\n          </Link>\r\n        )}\r\n      </div>\r\n      <div className=\"select_a_date_header\">\r\n        <h2>\r\n          SELECT A DATE\r\n          {saltCaveInCart\r\n            ? null\r\n            : selectedEsthetician\r\n            ? \" WITH \" +\r\n              selectedEsthetician.split(\" \")[0].toUpperCase() +\r\n              \" \" +\r\n              selectedEsthetician.split(\" \")[1][0].toUpperCase() +\r\n              \".\"\r\n            : null}\r\n        </h2>\r\n      </div>\r\n      <p className=\"availability_statement\">\r\n        You can schedule an appointment between 12 hours and 60 days ahead of\r\n        time.\r\n      </p>\r\n      <Calendar\r\n        calendarType=\"ISO 8601\"\r\n        activeStartDate={\r\n          selectedDay\r\n            ? selectedDay\r\n            : reformattedDay\r\n            ? new Date(reformattedDay)\r\n            : today\r\n        }\r\n        minDate={handleMinDate()}\r\n        maxDate={new Date(sixtyDaysFromNow)}\r\n        maxDetail={\"month\"}\r\n        nextLabel={<FontAwesomeIcon icon={faChevronRight} />}\r\n        prevLabel={<FontAwesomeIcon icon={faChevronLeft} />}\r\n        next2Label={null}\r\n        prev2Label={null}\r\n        onActiveStartDateChange={() => handleActiveMonthChange()}\r\n        showNeighboringMonth={false}\r\n        showWeekNumbers={true}\r\n        tileClassName=\"calendar_tiles\"\r\n        tileDisabled={({ date }) => date.getDay() === 6}\r\n        onClickDay={(value) => handleValueClick(value)}\r\n        onChange={() => {\r\n          dispatch(ACTION_DAY_OF_THE_WEEK_RESET());\r\n          dispatch(ACTION_REFORMATTED_DAY_RESET());\r\n          dispatch(ACTION_REFORMATTED_DAY_CLONE_RESET());\r\n          dispatch(ACTION_ALL_COLLAPSE_RESET());\r\n          dispatch(ACTION_CONTINUE_BUTTON_RESET());\r\n          dispatch(ACTION_FIRST_NAME_RESET());\r\n          dispatch(ACTION_LAST_NAME_RESET());\r\n          dispatch(ACTION_EMAIL_RESET());\r\n          dispatch(ACTION_PHONE_NUMBER_RESET());\r\n          dispatch(ACTION_SELECTED_TIME_RESET());\r\n        }}\r\n      />\r\n      <Link\r\n        to={(location) => {\r\n          if (!props.currentScreenSize) {\r\n            if (props.initialScreenSize >= 1200) {\r\n              return \"/\";\r\n            } else {\r\n              return `${location.pathname}/timepreference`;\r\n            }\r\n          } else {\r\n            if (props.currentScreenSize >= 1200) {\r\n              return \"/\";\r\n            } else {\r\n              return `${location.pathname}/timepreference`;\r\n            }\r\n          }\r\n        }}\r\n        style={{\r\n          display: \"block\",\r\n          pointerEvents: selectedDay !== \"\" ? \"auto\" : \"none\",\r\n        }}\r\n        onClick={handleSelectTimeButtonClick}\r\n      >\r\n        <div\r\n          className=\"select_time_button\"\r\n          style={{\r\n            marginTop: numberOfWeeks < 6 ? \"4vh\" : \"2vh\",\r\n            marginBottom: numberOfWeeks < 6 ? \"0\" : \"2vh\",\r\n            background: selectedDay ? \"rgb(44, 44, 52)\" : \"#f0f0f0\",\r\n            color: selectedDay ? \"rgb(255, 255, 255)\" : \"rgb(201, 201, 201)\",\r\n            pointerEvents: selectedDay !== \"\" ? \"auto\" : \"none\",\r\n            transition: \"background 0.5s ease, color 0.5s ease\",\r\n          }}\r\n        >\r\n          <p>Select a Time</p>\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Availability;\r\n"]},"metadata":{},"sourceType":"module"}