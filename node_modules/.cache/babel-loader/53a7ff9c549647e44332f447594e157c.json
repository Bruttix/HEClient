{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import{useQuery}from\"@apollo/react-hooks\";import getClientsQuery from\"../../../../graphql/queries/getClientsQuery\";import ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID from\"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID\";import ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID from\"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID\";import ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID from\"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID\";import ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID from\"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID\";import ACTION_CREATE_ACCOUNT_PHONE_NUMBER from\"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER\";import ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET from\"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET\";import\"../SignUp.css\";const PhoneNumber=props=>{const dispatch=useDispatch();// Phone Number States\nconst createAccountPhoneNumber=useSelector(state=>state.createAccountPhoneNumber.create_account_phone_number);const createAccountPhoneNumberValid=useSelector(state=>state.createAccountPhoneNumberValid.create_account_phone_number_valid);const createAccountPhoneNumberInvalid=useSelector(state=>state.createAccountPhoneNumberInvalid.create_account_phone_number_invalid);const facebookCompleteRegistration=useSelector(state=>state.facebookCompleteRegistration.facebook_complete_registration_active);const createAccountFirstName=useSelector(state=>state.createAccountFirstName.create_account_first_name);const createAccountLastName=useSelector(state=>state.createAccountLastName.create_account_last_name);const createAccountEmailValid=useSelector(state=>state.createAccountEmailValid.create_account_email_valid);const _useState=useState(false),_useState2=_slicedToArray(_useState,2),phoneNumberAlreadyRegistered=_useState2[0],changePhoneNumberAlreadyRegistered=_useState2[1];// Regular Expression for Phone Number Validation - allows only phone numbers in the format (xxx) xxx - xxx, with x values being digits\nconst phoneNumberReg=/^(\\(\\d\\d\\d\\))+\\s+(\\d\\d\\d)+\\s+(-)+\\s+(\\d\\d\\d\\d)$/g;// Regular Expression for Autocompleted Phone Numbers - allows phone numbers in the format 1xxxxxxxxxx, with x values being digits and the leading 1 country code being optional.\nconst phoneNumberAutocompleteReg=/^(1*\\d{10})$/g;const _useQuery=useQuery(getClientsQuery,{fetchPolicy:\"no-cache\"}),data=_useQuery.data;const validatePhoneNumber=useCallback(number=>{const validPhoneNumber=phoneNumberReg.test(number);const validPhoneAutocomplete=phoneNumberAutocompleteReg.test(number);if(createAccountPhoneNumber){if(data){for(let i=0;i<data.clients.length;i++){if(data.clients[i].phoneNumber===createAccountPhoneNumber&&(data.clients[i].password!==null||data.clients[i].tokenCount>0)){changePhoneNumberAlreadyRegistered(true);dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());}}}}if(!phoneNumberAlreadyRegistered){if(validPhoneNumber||validPhoneAutocomplete){dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID());dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());}else{dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());}}else{dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());}},[data,dispatch,phoneNumberAlreadyRegistered,phoneNumberAutocompleteReg,phoneNumberReg,createAccountPhoneNumber]);useEffect(()=>{if(createAccountPhoneNumber.length===16){validatePhoneNumber(createAccountPhoneNumber);}},[validatePhoneNumber,createAccountPhoneNumber,dispatch,phoneNumberAlreadyRegistered,phoneNumberAutocompleteReg,phoneNumberReg]);const handlePhoneNumber=e=>{validatePhoneNumber(e.currentTarget.value);dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));};const phoneNumberTyping=e=>{let currentTyping=e.currentTarget.value;dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET());if(createAccountPhoneNumber.length!==15){if(createAccountPhoneNumberValid){dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());}}if(phoneNumberAlreadyRegistered){changePhoneNumberAlreadyRegistered(false);}if(createAccountPhoneNumberInvalid){dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());}dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));// Formatting for US Phone Numbers\nif(currentTyping.length===3){currentTyping=currentTyping.split(\"\");currentTyping.unshift(\"(\");currentTyping.push(\") \");currentTyping=currentTyping.join(\"\");}else{if(currentTyping.length===4){if(currentTyping.indexOf(\"(\")===0&&currentTyping.indexOf(\")\")<0){currentTyping=currentTyping.split(\"\");currentTyping.splice(currentTyping.indexOf(\"(\"),1);currentTyping=currentTyping.join(\"\");}else{if(currentTyping.indexOf(\"(\")<0&&currentTyping.indexOf(\")\")<0){currentTyping=currentTyping.split(\"\");currentTyping.unshift(\"(\");currentTyping.splice(4,0,\") \");currentTyping=currentTyping.join(\"\");}}}else{if(currentTyping.length===6){if(currentTyping.indexOf(\" \")<0){currentTyping=currentTyping.split(\"\");currentTyping.splice(5,0,\" \");currentTyping=currentTyping.join(\"\");}}else{if(currentTyping.length===10){if(currentTyping.lastIndexOf(\" \")===5){currentTyping=currentTyping.split(\"\");currentTyping.splice(9,0,\" - \");currentTyping=currentTyping.join(\"\");}else{if(currentTyping.indexOf(\"(\")<0){currentTyping=currentTyping.split(\"\");currentTyping.unshift(\"(\");currentTyping.splice(4,0,\") \");currentTyping.splice(8,0,\" - \");currentTyping=currentTyping.join(\"\");}}}else{if(currentTyping.length===11){if(currentTyping.lastIndexOf(\" \")===9&&currentTyping.indexOf(\"-\")<0){currentTyping=currentTyping.split(\"\");currentTyping.splice(9,0,\" -\");currentTyping=currentTyping.join(\"\");}}else{if(currentTyping.length===12){if(currentTyping.lastIndexOf(\" \")===9){currentTyping=currentTyping.split(\"\");currentTyping.splice(11,0,\" \");currentTyping=currentTyping.join(\"\");}}}}}}}e.currentTarget.value=currentTyping;};return/*#__PURE__*/React.createElement(FormGroup,{className:\"sign_up_individual_form_field\"},/*#__PURE__*/React.createElement(Label,{for:\"createAccountPhoneNumber\"},/*#__PURE__*/React.createElement(\"div\",{className:\"required_label\"},\"Phone Number\",/*#__PURE__*/React.createElement(\"p\",{className:\"required_label red_asterisk\"},facebookCompleteRegistration?null:\"* \"))),/*#__PURE__*/React.createElement(Input,{type:\"tel\",name:\"createAccountPhoneNumber\",maxLength:16,defaultValue:createAccountPhoneNumber,placeholder:\"Phone number\",onBlur:handlePhoneNumber,onChange:phoneNumberTyping,className:\"input_field_sign_up\",onKeyDown:e=>{if(e.key===\"Enter\"){if(createAccountFirstName&&createAccountLastName&&createAccountEmailValid&&createAccountPhoneNumberValid){props.changeCreateAccountStepTwoTriggered(true);}}},invalid:createAccountPhoneNumber===\"\"?false:createAccountPhoneNumberInvalid?true:false,valid:createAccountPhoneNumber===\"\"?false:createAccountPhoneNumberValid?true:false}),phoneNumberAlreadyRegistered?/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"This phone number has already been registered.\"):/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"Please enter a valid phone number.\"));};export default PhoneNumber;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/account/signup/CreateAccountPhoneNumber/CreateAccountPhoneNumber.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","useQuery","getClientsQuery","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET","PhoneNumber","props","dispatch","createAccountPhoneNumber","state","create_account_phone_number","createAccountPhoneNumberValid","create_account_phone_number_valid","createAccountPhoneNumberInvalid","create_account_phone_number_invalid","facebookCompleteRegistration","facebook_complete_registration_active","createAccountFirstName","create_account_first_name","createAccountLastName","create_account_last_name","createAccountEmailValid","create_account_email_valid","phoneNumberAlreadyRegistered","changePhoneNumberAlreadyRegistered","phoneNumberReg","phoneNumberAutocompleteReg","fetchPolicy","data","validatePhoneNumber","number","validPhoneNumber","test","validPhoneAutocomplete","i","clients","length","phoneNumber","password","tokenCount","handlePhoneNumber","e","currentTarget","value","phoneNumberTyping","currentTyping","split","unshift","push","join","indexOf","splice","lastIndexOf","key","changeCreateAccountStepTwoTriggered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport getClientsQuery from \"../../../../graphql/queries/getClientsQuery\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET\";\r\nimport \"../SignUp.css\";\r\n\r\nconst PhoneNumber = (props) => {\r\n  const dispatch = useDispatch();\r\n  // Phone Number States\r\n  const createAccountPhoneNumber = useSelector(\r\n    (state) => state.createAccountPhoneNumber.create_account_phone_number\r\n  );\r\n  const createAccountPhoneNumberValid = useSelector(\r\n    (state) =>\r\n      state.createAccountPhoneNumberValid.create_account_phone_number_valid\r\n  );\r\n  const createAccountPhoneNumberInvalid = useSelector(\r\n    (state) =>\r\n      state.createAccountPhoneNumberInvalid.create_account_phone_number_invalid\r\n  );\r\n  const facebookCompleteRegistration = useSelector(\r\n    (state) =>\r\n      state.facebookCompleteRegistration.facebook_complete_registration_active\r\n  );\r\n  const createAccountFirstName = useSelector(\r\n    (state) => state.createAccountFirstName.create_account_first_name\r\n  );\r\n  const createAccountLastName = useSelector(\r\n    (state) => state.createAccountLastName.create_account_last_name\r\n  );\r\n  const createAccountEmailValid = useSelector(\r\n    (state) => state.createAccountEmailValid.create_account_email_valid\r\n  );\r\n\r\n  const [\r\n    phoneNumberAlreadyRegistered,\r\n    changePhoneNumberAlreadyRegistered,\r\n  ] = useState(false);\r\n\r\n  // Regular Expression for Phone Number Validation - allows only phone numbers in the format (xxx) xxx - xxx, with x values being digits\r\n  const phoneNumberReg = /^(\\(\\d\\d\\d\\))+\\s+(\\d\\d\\d)+\\s+(-)+\\s+(\\d\\d\\d\\d)$/g;\r\n\r\n  // Regular Expression for Autocompleted Phone Numbers - allows phone numbers in the format 1xxxxxxxxxx, with x values being digits and the leading 1 country code being optional.\r\n  const phoneNumberAutocompleteReg = /^(1*\\d{10})$/g;\r\n\r\n  const { data } = useQuery(getClientsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const validatePhoneNumber = useCallback(\r\n    (number) => {\r\n      const validPhoneNumber = phoneNumberReg.test(number);\r\n      const validPhoneAutocomplete = phoneNumberAutocompleteReg.test(number);\r\n\r\n      if (createAccountPhoneNumber) {\r\n        if (data) {\r\n          for (let i = 0; i < data.clients.length; i++) {\r\n            if (\r\n              data.clients[i].phoneNumber === createAccountPhoneNumber &&\r\n              (data.clients[i].password !== null ||\r\n                data.clients[i].tokenCount > 0)\r\n            ) {\r\n              changePhoneNumberAlreadyRegistered(true);\r\n              dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n              dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!phoneNumberAlreadyRegistered) {\r\n        if (validPhoneNumber || validPhoneAutocomplete) {\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID());\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());\r\n        } else {\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\r\n        }\r\n      } else {\r\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\r\n      }\r\n    },\r\n    [\r\n      data,\r\n      dispatch,\r\n      phoneNumberAlreadyRegistered,\r\n      phoneNumberAutocompleteReg,\r\n      phoneNumberReg,\r\n      createAccountPhoneNumber,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (createAccountPhoneNumber.length === 16) {\r\n      validatePhoneNumber(createAccountPhoneNumber);\r\n    }\r\n  }, [\r\n    validatePhoneNumber,\r\n    createAccountPhoneNumber,\r\n    dispatch,\r\n    phoneNumberAlreadyRegistered,\r\n    phoneNumberAutocompleteReg,\r\n    phoneNumberReg,\r\n  ]);\r\n\r\n  const handlePhoneNumber = (e) => {\r\n    validatePhoneNumber(e.currentTarget.value);\r\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));\r\n  };\r\n\r\n  const phoneNumberTyping = (e) => {\r\n    let currentTyping = e.currentTarget.value;\r\n\r\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET());\r\n\r\n    if (createAccountPhoneNumber.length !== 15) {\r\n      if (createAccountPhoneNumberValid) {\r\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n      }\r\n    }\r\n\r\n    if (phoneNumberAlreadyRegistered) {\r\n      changePhoneNumberAlreadyRegistered(false);\r\n    }\r\n    if (createAccountPhoneNumberInvalid) {\r\n      dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());\r\n    }\r\n\r\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));\r\n\r\n    // Formatting for US Phone Numbers\r\n    if (currentTyping.length === 3) {\r\n      currentTyping = currentTyping.split(\"\");\r\n      currentTyping.unshift(\"(\");\r\n      currentTyping.push(\") \");\r\n\r\n      currentTyping = currentTyping.join(\"\");\r\n    } else {\r\n      if (currentTyping.length === 4) {\r\n        if (\r\n          currentTyping.indexOf(\"(\") === 0 &&\r\n          currentTyping.indexOf(\")\") < 0\r\n        ) {\r\n          currentTyping = currentTyping.split(\"\");\r\n          currentTyping.splice(currentTyping.indexOf(\"(\"), 1);\r\n\r\n          currentTyping = currentTyping.join(\"\");\r\n        } else {\r\n          if (\r\n            currentTyping.indexOf(\"(\") < 0 &&\r\n            currentTyping.indexOf(\")\") < 0\r\n          ) {\r\n            currentTyping = currentTyping.split(\"\");\r\n            currentTyping.unshift(\"(\");\r\n            currentTyping.splice(4, 0, \") \");\r\n\r\n            currentTyping = currentTyping.join(\"\");\r\n          }\r\n        }\r\n      } else {\r\n        if (currentTyping.length === 6) {\r\n          if (currentTyping.indexOf(\" \") < 0) {\r\n            currentTyping = currentTyping.split(\"\");\r\n            currentTyping.splice(5, 0, \" \");\r\n\r\n            currentTyping = currentTyping.join(\"\");\r\n          }\r\n        } else {\r\n          if (currentTyping.length === 10) {\r\n            if (currentTyping.lastIndexOf(\" \") === 5) {\r\n              currentTyping = currentTyping.split(\"\");\r\n              currentTyping.splice(9, 0, \" - \");\r\n\r\n              currentTyping = currentTyping.join(\"\");\r\n            } else {\r\n              if (currentTyping.indexOf(\"(\") < 0) {\r\n                currentTyping = currentTyping.split(\"\");\r\n                currentTyping.unshift(\"(\");\r\n                currentTyping.splice(4, 0, \") \");\r\n                currentTyping.splice(8, 0, \" - \");\r\n                currentTyping = currentTyping.join(\"\");\r\n              }\r\n            }\r\n          } else {\r\n            if (currentTyping.length === 11) {\r\n              if (\r\n                currentTyping.lastIndexOf(\" \") === 9 &&\r\n                currentTyping.indexOf(\"-\") < 0\r\n              ) {\r\n                currentTyping = currentTyping.split(\"\");\r\n                currentTyping.splice(9, 0, \" -\");\r\n\r\n                currentTyping = currentTyping.join(\"\");\r\n              }\r\n            } else {\r\n              if (currentTyping.length === 12) {\r\n                if (currentTyping.lastIndexOf(\" \") === 9) {\r\n                  currentTyping = currentTyping.split(\"\");\r\n                  currentTyping.splice(11, 0, \" \");\r\n\r\n                  currentTyping = currentTyping.join(\"\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    e.currentTarget.value = currentTyping;\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"sign_up_individual_form_field\">\r\n      <Label for=\"createAccountPhoneNumber\">\r\n        <div className=\"required_label\">\r\n          Phone Number\r\n          <p className=\"required_label red_asterisk\">\r\n            {facebookCompleteRegistration ? null : \"* \"}\r\n          </p>\r\n        </div>\r\n      </Label>\r\n      <Input\r\n        type=\"tel\"\r\n        name=\"createAccountPhoneNumber\"\r\n        maxLength={16}\r\n        defaultValue={createAccountPhoneNumber}\r\n        placeholder=\"Phone number\"\r\n        onBlur={handlePhoneNumber}\r\n        onChange={phoneNumberTyping}\r\n        className=\"input_field_sign_up\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            if (\r\n              createAccountFirstName &&\r\n              createAccountLastName &&\r\n              createAccountEmailValid &&\r\n              createAccountPhoneNumberValid\r\n            ) {\r\n              props.changeCreateAccountStepTwoTriggered(true);\r\n            }\r\n          }\r\n        }}\r\n        invalid={\r\n          createAccountPhoneNumber === \"\"\r\n            ? false\r\n            : createAccountPhoneNumberInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          createAccountPhoneNumber === \"\"\r\n            ? false\r\n            : createAccountPhoneNumberValid\r\n            ? true\r\n            : false\r\n        }\r\n      />\r\n      {phoneNumberAlreadyRegistered ? (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          This phone number has already been registered.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Please enter a valid phone number.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default PhoneNumber;\r\n"]},"metadata":{},"sourceType":"module"}