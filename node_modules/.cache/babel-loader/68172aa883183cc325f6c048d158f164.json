{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useCallback,useEffect,useMemo}from\"react\";import{SquarePaymentForm,CreditCardNumberInput,CreditCardExpirationDateInput,CreditCardPostalCodeInput,CreditCardCVVInput,CreditCardSubmitButton}from\"react-square-payment-form\";import Dropdown from\"react-dropdown\";import{useSelector,useDispatch}from\"react-redux\";import axios from\"axios\";import{useMutation}from\"@apollo/react-hooks\";import updateClientSquareIDMutation from\"../../../../../graphql/mutations/updateClientSquareIDMutation\";import updateUnsavedSquareCardIDsMutation from\"../../../../../graphql/mutations/updateUnsavedSquareCardIDsMutation\";import ACTION_BOOKED_WITH_CARD_ID_RESET from\"../../../../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID_RESET\";import ACTION_SQUARE_CUSTOMER_ID from\"../../../../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID\";import ACTION_BOOKED_WITH_CARD_ID from\"../../../../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID\";import\"./AdminPaymentInfo.css\";const AdminPaymentInfo=props=>{const getClientsData=props.getClientsData,getClientsRefetch=props.getClientsRefetch,handleSubmitBooking=props.handleSubmitBooking;const dispatch=useDispatch();const _useState=useState([]),_useState2=_slicedToArray(_useState,2),errorMessages=_useState2[0],changeErrorMessage=_useState2[1];const _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),cardHolderFirstName=_useState4[0],changeCardHolderFirstName=_useState4[1];const _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),cardHolderLastName=_useState6[0],changeCardHolderLastName=_useState6[1];const _useState7=useState(\"\"),_useState8=_slicedToArray(_useState7,2),squareStoredCreditCards=_useState8[0],changeSquareStoredCreditCards=_useState8[1];const _useState9=useState({name:\"\",id:\"\"}),_useState10=_slicedToArray(_useState9,2),selectedCreditCard=_useState10[0],changeSelectedCreditCard=_useState10[1];const _useState11=useState(\"\"),_useState12=_slicedToArray(_useState11,2),selectedCreditCardFullData=_useState12[0],changeSelectedCreditCardFullData=_useState12[1];const _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),successfulCardNonce=_useState14[0],changeSuccessfulCardNonce=_useState14[1];const _useState15=useState(\"\"),_useState16=_slicedToArray(_useState15,2),selectedClient=_useState16[0],changeSelectedClient=_useState16[1];const adminClientFirstName=useSelector(state=>state.adminClientFirstName.admin_client_first_name);const adminClientLastName=useSelector(state=>state.adminClientLastName.admin_client_last_name);const adminClientEmail=useSelector(state=>state.adminClientEmail.admin_client_email);const adminClientPhoneNumber=useSelector(state=>state.adminClientPhoneNumber.admin_client_phone_number);const bookedWithCardID=useSelector(state=>state.bookedWithCardID.booked_with_card_id);const _useMutation=useMutation(updateUnsavedSquareCardIDsMutation),_useMutation2=_slicedToArray(_useMutation,1),updateUnsavedSquareCardIDs=_useMutation2[0];const _useMutation3=useMutation(updateClientSquareIDMutation),_useMutation4=_slicedToArray(_useMutation3,1),updateClientSquareID=_useMutation4[0];useEffect(()=>{if(selectedClient.length<1){changeSelectedCreditCardFullData(\"\");changeSelectedCreditCard({name:\"\",id:\"\"});changeSquareStoredCreditCards(\"\");}},[selectedClient.length]);useEffect(()=>{if(squareStoredCreditCards){if(selectedCreditCard&&selectedCreditCard.name&&selectedCreditCard.id){const creditCardSplitArr=selectedCreditCard.name.split(\" -\");const fullData=squareStoredCreditCards.data.find(x=>{return x.card_brand===creditCardSplitArr[0].replace(\" \",\"_\").trim()&&x.last_4===creditCardSplitArr[creditCardSplitArr.length-1].trim()&&x.id===selectedCreditCard.id;});if(fullData){changeSelectedCreditCardFullData(fullData);}}}},[selectedCreditCard,squareStoredCreditCards]);useEffect(()=>{const iFrameLabel=[...document.getElementsByClassName(\"sq-label\")].filter(x=>x.innerText===\"Credit Card\"||x.innerText===\"Expiration\"||x.innerText===\"Zip Code\"||x.innerText===\"CVC\");const iFrameLabelHidden=[...document.getElementsByClassName(\"sq-label\")].filter(x=>x.className.includes(\"sq-payment-form-hidden\"));if(selectedCreditCardFullData){document.getElementById(\"sq-payment-form-sq-card-number\").classList.add(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-expiration-date\").classList.add(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-postal-code\").classList.add(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-cvv\").classList.add(\"sq-payment-form-hidden\");if(iFrameLabel){if(iFrameLabel.length>0){iFrameLabel.forEach(x=>x.classList.add(\"sq-payment-form-hidden\"));}}}else{document.getElementById(\"sq-payment-form-sq-card-number\").classList.remove(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-expiration-date\").classList.remove(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-postal-code\").classList.remove(\"sq-payment-form-hidden\");document.getElementById(\"sq-payment-form-sq-cvv\").classList.remove(\"sq-payment-form-hidden\");if(iFrameLabelHidden){if(iFrameLabelHidden.length>0){iFrameLabelHidden.forEach(x=>{x.classList.remove(\"sq-payment-form-hidden\");});}}}},[selectedCreditCardFullData]);useEffect(()=>{if(getClientsData){if(getClientsData.clients){changeSelectedClient(getClientsData.clients.filter((x,i)=>{return x.firstName.toLowerCase()===adminClientFirstName.toLowerCase()&&x.lastName.toLowerCase()===adminClientLastName.toLowerCase()&&x.email.toLowerCase()===adminClientEmail.toLowerCase()&&x.phoneNumber.toLowerCase()===adminClientPhoneNumber.toLowerCase();}));}}},[adminClientLastName,adminClientFirstName,adminClientEmail,adminClientPhoneNumber,getClientsData]);const retrieveSquareCustomerFunction=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return axios.post(\"http://localhost:4000/retrieve_customer\",{data:{squareCustomerId:selectedClient.length>0?selectedClient[0].squareCustomerId:\"\"}},{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN}}).catch(e=>changeSquareStoredCreditCards(\"\"));case 2:return _context.abrupt(\"return\",_context.sent);case 3:case\"end\":return _context.stop();}},_callee);})),[selectedClient]);useEffect(()=>{if(squareStoredCreditCards){const cardFullData=squareStoredCreditCards.data.filter(x=>x.id===selectedCreditCard.id)[0];if(!selectedCreditCard.name){if(cardFullData){changeSelectedCreditCard({name:cardFullData.card_brand.split(\"_\").join(\" \")+\" - \"+cardFullData.last_4,id:cardFullData.id});changeSelectedCreditCardFullData(cardFullData);}}}},[bookedWithCardID,squareStoredCreditCards,selectedCreditCard]);const fetchData=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var customerData;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return retrieveSquareCustomerFunction();case 2:customerData=_context2.sent;changeSquareStoredCreditCards(customerData);case 4:case\"end\":return _context2.stop();}},_callee2);})),[retrieveSquareCustomerFunction]);useMemo(()=>{if(selectedClient.length>0){if(selectedClient[0].squareCustomerId){fetchData();}else{changeSquareStoredCreditCards(\"\");}}else{if(selectedClient.length===0){changeSquareStoredCreditCards(\"\");}}},[selectedClient,fetchData]);const renderStoredCreditCardOptions=()=>{if(squareStoredCreditCards){if(squareStoredCreditCards.data){return squareStoredCreditCards.data.filter(x=>selectedClient.length>0?selectedClient[0].unsavedSquareCardIDs.includes(x.id):\"\").map((x,i)=>{return{value:JSON.stringify({name:x.card_brand.split(\"_\").join(\" \")+\" - \"+x.last_4,id:x.id}),label:x.card_brand.split(\"_\").join(\" \")+\" - \"+x.last_4};});}else{return[{value:JSON.stringify({name:\"\",id:\"\"}),label:\"No cards saved on file\"}];}}else{return[{value:JSON.stringify({name:\"\",id:\"\"}),label:\"No cards saved on file\"}];}};const cardNonceResponseReceived=(errors,nonce,cardData,buyerVerificationToken)=>{if(errors[0]!==null){return changeErrorMessage(errors.map(error=>error?error.message:null));}else{changeErrorMessage([]);let matchedClient;if(getClientsData){for(let i=0;i<getClientsData.clients.length;i++){if(getClientsData.clients[i].email===adminClientEmail){matchedClient=getClientsData.clients[i];}}}const squareCustomerData={family_name:adminClientFirstName,given_name:adminClientLastName,email_address:adminClientEmail,phone_number:adminClientPhoneNumber};const squarePostRequestFunction=()=>{axios.post(\"http://localhost:4000/customers\",squareCustomerData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN}}).then(res=>{const squareData={card_nonce:nonce,billing_address:{postal_code:cardData.billing_postal_code},cardholder_name:(cardHolderFirstName?cardHolderFirstName:adminClientFirstName).trim()+\" \"+(cardHolderLastName?cardHolderLastName:adminClientLastName).trim(),verification_token:buyerVerificationToken,customerId:JSON.parse(res.request.response).customer.id};if(matchedClient){if(!matchedClient.squareCustomerId){updateClientSquareID({variables:{squareCustomerId:JSON.parse(res.request.response).customer.id,firstName:adminClientFirstName,lastName:adminClientLastName,email:adminClientEmail}});getClientsRefetch();}}else{dispatch(ACTION_SQUARE_CUSTOMER_ID(JSON.parse(res.request.response).customer.id));}changeSuccessfulCardNonce(true);updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:cardData.id,firstName:adminClientFirstName,lastName:adminClientLastName,email:adminClientEmail}});getClientsRefetch();return axios.post(\"http://localhost:4000/customers/card\",squareData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN}});}).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res){var matchedDuplicateCard;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:if(squareStoredCreditCards.data){if(squareStoredCreditCards.data.some(x=>x.billing_address.postal_code===res.data.card.billing_address.postal_code&&x.card_brand===res.data.card.card_brand&&x.cardholder_name===res.data.card.cardholder_name&&x.exp_month===res.data.card.exp_month&&x.exp_year===res.data.card.exp_year&&x.last_4===res.data.card.last_4)){matchedDuplicateCard=squareStoredCreditCards.data.filter(x=>x.billing_address.postal_code===res.data.card.billing_address.postal_code&&x.card_brand===res.data.card.card_brand&&x.cardholder_name===res.data.card.cardholder_name&&x.exp_month===res.data.card.exp_month&&x.exp_year===res.data.card.exp_year&&x.last_4===res.data.card.last_4)[0];dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));}}dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:res.data.card.id,firstName:adminClientFirstName,lastName:adminClientLastName,email:adminClientEmail}});getClientsRefetch();case 4:case\"end\":return _context3.stop();}},_callee3);}));return function(_x){return _ref3.apply(this,arguments);};}()).catch(err=>{console.error(err);});};const returningClientSquarePostRequestFunction=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var squareData;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1)switch(_context5.prev=_context5.next){case 0:squareData={card_nonce:nonce,billing_address:{postal_code:cardData.billing_postal_code},cardholder_name:(cardHolderFirstName?cardHolderFirstName:adminClientFirstName).trim()+\" \"+(cardHolderLastName?cardHolderLastName:adminClientLastName).trim(),verification_token:buyerVerificationToken,customerId:matchedClient.squareCustomerId};changeSuccessfulCardNonce(true);_context5.next=4;return axios.post(\"http://localhost:4000/customers/card\",squareData,{headers:{Authorization:\"Bearer \"+process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN}}).then(/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res){var matchedDuplicateCard;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:if(squareStoredCreditCards.data){if(squareStoredCreditCards.data.some(x=>x.billing_address.postal_code===res.data.card.billing_address.postal_code&&x.card_brand===res.data.card.card_brand&&x.cardholder_name===res.data.card.cardholder_name&&x.exp_month===res.data.card.exp_month&&x.exp_year===res.data.card.exp_year&&x.last_4===res.data.card.last_4)){matchedDuplicateCard=squareStoredCreditCards.data.filter(x=>x.billing_address.postal_code===res.data.card.billing_address.postal_code&&x.card_brand===res.data.card.card_brand&&x.cardholder_name===res.data.card.cardholder_name&&x.exp_month===res.data.card.exp_month&&x.exp_year===res.data.card.exp_year&&x.last_4===res.data.card.last_4)[0];dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));}}dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));updateUnsavedSquareCardIDs({variables:{unsavedSquareCardID:res.data.card.id,firstName:matchedClient.firstName,lastName:matchedClient.lastName,email:matchedClient.email}});getClientsRefetch();case 4:case\"end\":return _context4.stop();}},_callee4);}));return function(_x2){return _ref5.apply(this,arguments);};}()).catch(err=>{console.error(err);});case 4:return _context5.abrupt(\"return\",_context5.sent);case 5:case\"end\":return _context5.stop();}},_callee5);}));return function returningClientSquarePostRequestFunction(){return _ref4.apply(this,arguments);};}();matchedClient?matchedClient.squareCustomerId?returningClientSquarePostRequestFunction():squarePostRequestFunction():squarePostRequestFunction();}};const createVerificationDetails=()=>{return{amount:\"\",currencyCode:\"\",intent:\"STORE\",billingContact:{familyName:adminClientLastName,givenName:adminClientFirstName,email:adminClientEmail,phone:adminClientPhoneNumber}};};useEffect(()=>{if(successfulCardNonce){handleSubmitBooking();}},[successfulCardNonce,handleSubmitBooking]);return/*#__PURE__*/React.createElement(\"div\",{className:\"admin_square_payment_form_container\"},/*#__PURE__*/React.createElement(SquarePaymentForm,{sandbox:true,applicationId:process.env.REACT_APP_SQUARE_SANDBOX_APPLICATION_ID,locationId:process.env.REACT_APP_SQUARE_SANDBOX_LOCATION_ID,cardNonceResponseReceived:cardNonceResponseReceived,createVerificationDetails:createVerificationDetails,inputStyles:[{fontSize:\"24px\",padding:\"14px\",placeholderColor:\"#a0a0a0\",backgroundColor:\"transparent\"},{mediaMaxWidth:\"1800px\",mediaMinWidth:\"1600px\",fontSize:\"16px\"},{mediaMinWidth:\"1801px\",fontSize:\"24px\"}]},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sq-label\"},\"Choose a credit card\"),/*#__PURE__*/React.createElement(Dropdown,{options:[{value:JSON.stringify({name:\"NEW CARD\",id:\"NEW CARD\"}),label:\"NEW CARD\"},...renderStoredCreditCardOptions()].flat(),value:selectedCreditCard?selectedCreditCard.name?selectedCreditCard.name:\"\":\"\",onChange:item=>{const itemValue=JSON.parse(item.value);if(selectedCreditCard.name){dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());if(itemValue.name===\"\"||itemValue.name===\"NEW CARD\"){dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());changeSelectedCreditCard({name:\"\",id:\"\"});changeSelectedCreditCardFullData(\"\");}else{dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());changeSelectedCreditCard({name:\"\",id:\"\"});changeSelectedCreditCardFullData(\"\");changeSelectedCreditCard({name:itemValue.name,id:itemValue.id});const cardFullData=squareStoredCreditCards.data.filter(x=>x.id===selectedCreditCard.id)[0];changeSelectedCreditCardFullData(cardFullData);}}else{dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());changeSelectedCreditCard({name:\"\",id:\"\"});changeSelectedCreditCardFullData(\"\");changeSelectedCreditCard({name:itemValue.name,id:itemValue.id});const cardFullData=squareStoredCreditCards?squareStoredCreditCards.data?squareStoredCreditCards.data.filter(x=>x.id===selectedCreditCard.id)[0]:null:null;changeSelectedCreditCardFullData(cardFullData);}},controlClassName:\"sq-input\",className:\"sq-creditcard\",placeholder:adminClientFirstName&&adminClientLastName?\"NEW CARD\":\"No client selected\",disabled:adminClientFirstName&&adminClientLastName?false:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_cardholder_container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"Cardholder First Name\"),/*#__PURE__*/React.createElement(\"input\",{className:\"sq-input\",placeholder:\"Enter first name\",value:selectedCreditCardFullData?selectedCreditCardFullData.cardholder_name?selectedCreditCardFullData.cardholder_name.split(\" \")[0]:cardHolderFirstName:cardHolderFirstName,disabled:selectedCreditCardFullData?true:false,onChange:e=>changeCardHolderFirstName(e.target.value.toUpperCase())})),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_cardholder_container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"Cardholder Last Name\"),/*#__PURE__*/React.createElement(\"input\",{className:\"sq-input\",placeholder:\"Enter last name\",value:selectedCreditCardFullData?selectedCreditCardFullData.cardholder_name?selectedCreditCardFullData.cardholder_name.split(\" \")[1]:cardHolderLastName:cardHolderLastName,onChange:e=>changeCardHolderLastName(e.target.value.toUpperCase()),disabled:selectedCreditCardFullData?true:false})),selectedCreditCardFullData?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"sq-selected-credit-card-details\"},/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"Credit Card \\xA0\"),/*#__PURE__*/React.createElement(\"input\",{name:\"credit_card\",type:\"text\",maxLength:\"100\",className:\"sq-input\",disabled:true,value:selectedCreditCardFullData.card_brand.toLowerCase()===\"american_express\"?\"•••• •••••• •\"+selectedCreditCardFullData.last_4:\"•••• •••• •••• \"+selectedCreditCardFullData.last_4})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"Expiration \\xA0\"),/*#__PURE__*/React.createElement(\"input\",{name:\"expiration_date\",type:\"text\",className:\"sq-input\",disabled:true,value:selectedCreditCardFullData.exp_month>=10?selectedCreditCardFullData.exp_month.toString()+\"/\"+selectedCreditCardFullData.exp_year.toString().substr(-2):\"0\"+selectedCreditCardFullData.exp_month.toString()+\"/\"+selectedCreditCardFullData.exp_year.toString().substr(-2)})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"Zip Code \\xA0\"),/*#__PURE__*/React.createElement(\"input\",{name:\"postal_code\",type:\"text\",className:\"sq-input\",disabled:true,value:selectedCreditCardFullData.billing_address.postal_code})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"sq-label\"},\"CVC \\xA0\"),/*#__PURE__*/React.createElement(\"input\",{name:\"cvc_code\",type:\"text\",className:\"sq-input\",disabled:true,value:selectedCreditCardFullData.card_brand.toLowerCase()===\"american_express\"?\"••••\":\"•••\"}))):null,/*#__PURE__*/React.createElement(CreditCardNumberInput,{label:\"Credit Card\"}),/*#__PURE__*/React.createElement(CreditCardExpirationDateInput,{label:\"Expiration\"}),/*#__PURE__*/React.createElement(CreditCardPostalCodeInput,{label:\"Zip Code\"}),/*#__PURE__*/React.createElement(CreditCardCVVInput,{label:\"CVC\"}),/*#__PURE__*/React.createElement(CreditCardSubmitButton,null,\"Book Appointment\")),/*#__PURE__*/React.createElement(\"div\",{className:\"sq-error-message\"},errorMessages.map(errorMessage=>/*#__PURE__*/React.createElement(\"li\",{key:\"sq-error-\".concat(errorMessage)},errorMessage))));};export default AdminPaymentInfo;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminSchedule/AdminCreateAppointment/AdminPaymentInfo/AdminPaymentInfo.js"],"names":["React","useState","useCallback","useEffect","useMemo","SquarePaymentForm","CreditCardNumberInput","CreditCardExpirationDateInput","CreditCardPostalCodeInput","CreditCardCVVInput","CreditCardSubmitButton","Dropdown","useSelector","useDispatch","axios","useMutation","updateClientSquareIDMutation","updateUnsavedSquareCardIDsMutation","ACTION_BOOKED_WITH_CARD_ID_RESET","ACTION_SQUARE_CUSTOMER_ID","ACTION_BOOKED_WITH_CARD_ID","AdminPaymentInfo","props","getClientsData","getClientsRefetch","handleSubmitBooking","dispatch","errorMessages","changeErrorMessage","cardHolderFirstName","changeCardHolderFirstName","cardHolderLastName","changeCardHolderLastName","squareStoredCreditCards","changeSquareStoredCreditCards","name","id","selectedCreditCard","changeSelectedCreditCard","selectedCreditCardFullData","changeSelectedCreditCardFullData","successfulCardNonce","changeSuccessfulCardNonce","selectedClient","changeSelectedClient","adminClientFirstName","state","admin_client_first_name","adminClientLastName","admin_client_last_name","adminClientEmail","admin_client_email","adminClientPhoneNumber","admin_client_phone_number","bookedWithCardID","booked_with_card_id","updateUnsavedSquareCardIDs","updateClientSquareID","length","creditCardSplitArr","split","fullData","data","find","x","card_brand","replace","trim","last_4","iFrameLabel","document","getElementsByClassName","filter","innerText","iFrameLabelHidden","className","includes","getElementById","classList","add","forEach","remove","clients","i","firstName","toLowerCase","lastName","email","phoneNumber","retrieveSquareCustomerFunction","post","squareCustomerId","headers","Authorization","process","env","REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN","catch","e","cardFullData","join","fetchData","customerData","renderStoredCreditCardOptions","unsavedSquareCardIDs","map","value","JSON","stringify","label","cardNonceResponseReceived","errors","nonce","cardData","buyerVerificationToken","error","message","matchedClient","squareCustomerData","family_name","given_name","email_address","phone_number","squarePostRequestFunction","then","res","squareData","card_nonce","billing_address","postal_code","billing_postal_code","cardholder_name","verification_token","customerId","parse","request","response","customer","variables","unsavedSquareCardID","some","card","exp_month","exp_year","matchedDuplicateCard","err","console","returningClientSquarePostRequestFunction","createVerificationDetails","amount","currencyCode","intent","billingContact","familyName","givenName","phone","REACT_APP_SQUARE_SANDBOX_APPLICATION_ID","REACT_APP_SQUARE_SANDBOX_LOCATION_ID","fontSize","padding","placeholderColor","backgroundColor","mediaMaxWidth","mediaMinWidth","flat","item","itemValue","target","toUpperCase","toString","substr","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect, useMemo } from \"react\";\r\nimport {\r\n  SquarePaymentForm,\r\n  CreditCardNumberInput,\r\n  CreditCardExpirationDateInput,\r\n  CreditCardPostalCodeInput,\r\n  CreditCardCVVInput,\r\n  CreditCardSubmitButton,\r\n} from \"react-square-payment-form\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport updateClientSquareIDMutation from \"../../../../../graphql/mutations/updateClientSquareIDMutation\";\r\nimport updateUnsavedSquareCardIDsMutation from \"../../../../../graphql/mutations/updateUnsavedSquareCardIDsMutation\";\r\nimport ACTION_BOOKED_WITH_CARD_ID_RESET from \"../../../../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID_RESET\";\r\nimport ACTION_SQUARE_CUSTOMER_ID from \"../../../../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID\";\r\nimport ACTION_BOOKED_WITH_CARD_ID from \"../../../../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID\";\r\nimport \"./AdminPaymentInfo.css\";\r\n\r\nconst AdminPaymentInfo = (props) => {\r\n  const { getClientsData, getClientsRefetch, handleSubmitBooking } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [errorMessages, changeErrorMessage] = useState([]);\r\n  const [cardHolderFirstName, changeCardHolderFirstName] = useState(\"\");\r\n  const [cardHolderLastName, changeCardHolderLastName] = useState(\"\");\r\n  const [squareStoredCreditCards, changeSquareStoredCreditCards] = useState(\"\");\r\n  const [selectedCreditCard, changeSelectedCreditCard] = useState({\r\n    name: \"\",\r\n    id: \"\",\r\n  });\r\n  const [\r\n    selectedCreditCardFullData,\r\n    changeSelectedCreditCardFullData,\r\n  ] = useState(\"\");\r\n  const [successfulCardNonce, changeSuccessfulCardNonce] = useState(false);\r\n  const [selectedClient, changeSelectedClient] = useState(\"\");\r\n\r\n  const adminClientFirstName = useSelector(\r\n    (state) => state.adminClientFirstName.admin_client_first_name\r\n  );\r\n  const adminClientLastName = useSelector(\r\n    (state) => state.adminClientLastName.admin_client_last_name\r\n  );\r\n  const adminClientEmail = useSelector(\r\n    (state) => state.adminClientEmail.admin_client_email\r\n  );\r\n  const adminClientPhoneNumber = useSelector(\r\n    (state) => state.adminClientPhoneNumber.admin_client_phone_number\r\n  );\r\n  const bookedWithCardID = useSelector(\r\n    (state) => state.bookedWithCardID.booked_with_card_id\r\n  );\r\n\r\n  const [updateUnsavedSquareCardIDs] = useMutation(\r\n    updateUnsavedSquareCardIDsMutation\r\n  );\r\n\r\n  const [updateClientSquareID] = useMutation(updateClientSquareIDMutation);\r\n\r\n  useEffect(() => {\r\n    if (selectedClient.length < 1) {\r\n      changeSelectedCreditCardFullData(\"\");\r\n      changeSelectedCreditCard({\r\n        name: \"\",\r\n        id: \"\",\r\n      });\r\n      changeSquareStoredCreditCards(\"\");\r\n    }\r\n  }, [selectedClient.length]);\r\n\r\n  useEffect(() => {\r\n    if (squareStoredCreditCards) {\r\n      if (\r\n        selectedCreditCard &&\r\n        selectedCreditCard.name &&\r\n        selectedCreditCard.id\r\n      ) {\r\n        const creditCardSplitArr = selectedCreditCard.name.split(\" -\");\r\n\r\n        const fullData = squareStoredCreditCards.data.find((x) => {\r\n          return (\r\n            x.card_brand === creditCardSplitArr[0].replace(\" \", \"_\").trim() &&\r\n            x.last_4 ===\r\n              creditCardSplitArr[creditCardSplitArr.length - 1].trim() &&\r\n            x.id === selectedCreditCard.id\r\n          );\r\n        });\r\n\r\n        if (fullData) {\r\n          changeSelectedCreditCardFullData(fullData);\r\n        }\r\n      }\r\n    }\r\n  }, [selectedCreditCard, squareStoredCreditCards]);\r\n\r\n  useEffect(() => {\r\n    const iFrameLabel = [...document.getElementsByClassName(\"sq-label\")].filter(\r\n      (x) =>\r\n        x.innerText === \"Credit Card\" ||\r\n        x.innerText === \"Expiration\" ||\r\n        x.innerText === \"Zip Code\" ||\r\n        x.innerText === \"CVC\"\r\n    );\r\n\r\n    const iFrameLabelHidden = [\r\n      ...document.getElementsByClassName(\"sq-label\"),\r\n    ].filter((x) => x.className.includes(\"sq-payment-form-hidden\"));\r\n\r\n    if (selectedCreditCardFullData) {\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-card-number\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-expiration-date\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-postal-code\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-cvv\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n\r\n      if (iFrameLabel) {\r\n        if (iFrameLabel.length > 0) {\r\n          iFrameLabel.forEach((x) => x.classList.add(\"sq-payment-form-hidden\"));\r\n        }\r\n      }\r\n    } else {\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-card-number\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-expiration-date\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-postal-code\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-cvv\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n\r\n      if (iFrameLabelHidden) {\r\n        if (iFrameLabelHidden.length > 0) {\r\n          iFrameLabelHidden.forEach((x) => {\r\n            x.classList.remove(\"sq-payment-form-hidden\");\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [selectedCreditCardFullData]);\r\n\r\n  useEffect(() => {\r\n    if (getClientsData) {\r\n      if (getClientsData.clients) {\r\n        changeSelectedClient(\r\n          getClientsData.clients.filter((x, i) => {\r\n            return (\r\n              x.firstName.toLowerCase() ===\r\n                adminClientFirstName.toLowerCase() &&\r\n              x.lastName.toLowerCase() === adminClientLastName.toLowerCase() &&\r\n              x.email.toLowerCase() === adminClientEmail.toLowerCase() &&\r\n              x.phoneNumber.toLowerCase() ===\r\n                adminClientPhoneNumber.toLowerCase()\r\n            );\r\n          })\r\n        );\r\n      }\r\n    }\r\n  }, [\r\n    adminClientLastName,\r\n    adminClientFirstName,\r\n    adminClientEmail,\r\n    adminClientPhoneNumber,\r\n    getClientsData,\r\n  ]);\r\n\r\n  const retrieveSquareCustomerFunction = useCallback(async () => {\r\n    return await axios\r\n      .post(\r\n        \"http://localhost:4000/retrieve_customer\",\r\n        {\r\n          data: {\r\n            squareCustomerId:\r\n              selectedClient.length > 0\r\n                ? selectedClient[0].squareCustomerId\r\n                : \"\",\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n          },\r\n        }\r\n      )\r\n      .catch((e) => changeSquareStoredCreditCards(\"\"));\r\n  }, [selectedClient]);\r\n\r\n  useEffect(() => {\r\n    if (squareStoredCreditCards) {\r\n      const cardFullData = squareStoredCreditCards.data.filter(\r\n        (x) => x.id === selectedCreditCard.id\r\n      )[0];\r\n\r\n      if (!selectedCreditCard.name) {\r\n        if (cardFullData) {\r\n          changeSelectedCreditCard({\r\n            name:\r\n              cardFullData.card_brand.split(\"_\").join(\" \") +\r\n              \" - \" +\r\n              cardFullData.last_4,\r\n            id: cardFullData.id,\r\n          });\r\n\r\n          changeSelectedCreditCardFullData(cardFullData);\r\n        }\r\n      }\r\n    }\r\n  }, [bookedWithCardID, squareStoredCreditCards, selectedCreditCard]);\r\n\r\n  const fetchData = useCallback(async () => {\r\n    const customerData = await retrieveSquareCustomerFunction();\r\n\r\n    changeSquareStoredCreditCards(customerData);\r\n  }, [retrieveSquareCustomerFunction]);\r\n\r\n  useMemo(() => {\r\n    if (selectedClient.length > 0) {\r\n      if (selectedClient[0].squareCustomerId) {\r\n        fetchData();\r\n      } else {\r\n        changeSquareStoredCreditCards(\"\");\r\n      }\r\n    } else {\r\n      if (selectedClient.length === 0) {\r\n        changeSquareStoredCreditCards(\"\");\r\n      }\r\n    }\r\n  }, [selectedClient, fetchData]);\r\n\r\n  const renderStoredCreditCardOptions = () => {\r\n    if (squareStoredCreditCards) {\r\n      if (squareStoredCreditCards.data) {\r\n        return squareStoredCreditCards.data\r\n          .filter((x) =>\r\n            selectedClient.length > 0\r\n              ? selectedClient[0].unsavedSquareCardIDs.includes(x.id)\r\n              : \"\"\r\n          )\r\n          .map((x, i) => {\r\n            return {\r\n              value: JSON.stringify({\r\n                name: x.card_brand.split(\"_\").join(\" \") + \" - \" + x.last_4,\r\n                id: x.id,\r\n              }),\r\n              label: x.card_brand.split(\"_\").join(\" \") + \" - \" + x.last_4,\r\n            };\r\n          });\r\n      } else {\r\n        return [\r\n          {\r\n            value: JSON.stringify({\r\n              name: \"\",\r\n              id: \"\",\r\n            }),\r\n            label: \"No cards saved on file\",\r\n          },\r\n        ];\r\n      }\r\n    } else {\r\n      return [\r\n        {\r\n          value: JSON.stringify({\r\n            name: \"\",\r\n            id: \"\",\r\n          }),\r\n          label: \"No cards saved on file\",\r\n        },\r\n      ];\r\n    }\r\n  };\r\n\r\n  const cardNonceResponseReceived = (\r\n    errors,\r\n    nonce,\r\n    cardData,\r\n    buyerVerificationToken\r\n  ) => {\r\n    if (errors[0] !== null) {\r\n      return changeErrorMessage(\r\n        errors.map((error) => (error ? error.message : null))\r\n      );\r\n    } else {\r\n      changeErrorMessage([]);\r\n\r\n      let matchedClient;\r\n\r\n      if (getClientsData) {\r\n        for (let i = 0; i < getClientsData.clients.length; i++) {\r\n          if (getClientsData.clients[i].email === adminClientEmail) {\r\n            matchedClient = getClientsData.clients[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      const squareCustomerData = {\r\n        family_name: adminClientFirstName,\r\n        given_name: adminClientLastName,\r\n        email_address: adminClientEmail,\r\n        phone_number: adminClientPhoneNumber,\r\n      };\r\n\r\n      const squarePostRequestFunction = () => {\r\n        axios\r\n          .post(\"http://localhost:4000/customers\", squareCustomerData, {\r\n            headers: {\r\n              Authorization:\r\n                \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n            },\r\n          })\r\n          .then((res) => {\r\n            const squareData = {\r\n              card_nonce: nonce,\r\n              billing_address: { postal_code: cardData.billing_postal_code },\r\n              cardholder_name:\r\n                (cardHolderFirstName\r\n                  ? cardHolderFirstName\r\n                  : adminClientFirstName\r\n                ).trim() +\r\n                \" \" +\r\n                (cardHolderLastName\r\n                  ? cardHolderLastName\r\n                  : adminClientLastName\r\n                ).trim(),\r\n              verification_token: buyerVerificationToken,\r\n              customerId: JSON.parse(res.request.response).customer.id,\r\n            };\r\n\r\n            if (matchedClient) {\r\n              if (!matchedClient.squareCustomerId) {\r\n                updateClientSquareID({\r\n                  variables: {\r\n                    squareCustomerId: JSON.parse(res.request.response).customer\r\n                      .id,\r\n                    firstName: adminClientFirstName,\r\n                    lastName: adminClientLastName,\r\n                    email: adminClientEmail,\r\n                  },\r\n                });\r\n\r\n                getClientsRefetch();\r\n              }\r\n            } else {\r\n              dispatch(\r\n                ACTION_SQUARE_CUSTOMER_ID(\r\n                  JSON.parse(res.request.response).customer.id\r\n                )\r\n              );\r\n            }\r\n\r\n            changeSuccessfulCardNonce(true);\r\n\r\n            updateUnsavedSquareCardIDs({\r\n              variables: {\r\n                unsavedSquareCardID: cardData.id,\r\n                firstName: adminClientFirstName,\r\n                lastName: adminClientLastName,\r\n                email: adminClientEmail,\r\n              },\r\n            });\r\n\r\n            getClientsRefetch();\r\n\r\n            return axios.post(\r\n              \"http://localhost:4000/customers/card\",\r\n              squareData,\r\n              {\r\n                headers: {\r\n                  Authorization:\r\n                    \"Bearer \" +\r\n                    process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                },\r\n              }\r\n            );\r\n          })\r\n          .then(async (res) => {\r\n            if (squareStoredCreditCards.data) {\r\n              if (\r\n                squareStoredCreditCards.data.some(\r\n                  (x) =>\r\n                    x.billing_address.postal_code ===\r\n                      res.data.card.billing_address.postal_code &&\r\n                    x.card_brand === res.data.card.card_brand &&\r\n                    x.cardholder_name === res.data.card.cardholder_name &&\r\n                    x.exp_month === res.data.card.exp_month &&\r\n                    x.exp_year === res.data.card.exp_year &&\r\n                    x.last_4 === res.data.card.last_4\r\n                )\r\n              ) {\r\n                const matchedDuplicateCard = squareStoredCreditCards.data.filter(\r\n                  (x) =>\r\n                    x.billing_address.postal_code ===\r\n                      res.data.card.billing_address.postal_code &&\r\n                    x.card_brand === res.data.card.card_brand &&\r\n                    x.cardholder_name === res.data.card.cardholder_name &&\r\n                    x.exp_month === res.data.card.exp_month &&\r\n                    x.exp_year === res.data.card.exp_year &&\r\n                    x.last_4 === res.data.card.last_4\r\n                )[0];\r\n\r\n                dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\r\n              }\r\n            }\r\n\r\n            dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\r\n\r\n            updateUnsavedSquareCardIDs({\r\n              variables: {\r\n                unsavedSquareCardID: res.data.card.id,\r\n                firstName: adminClientFirstName,\r\n                lastName: adminClientLastName,\r\n                email: adminClientEmail,\r\n              },\r\n            });\r\n\r\n            getClientsRefetch();\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      };\r\n\r\n      const returningClientSquarePostRequestFunction = async () => {\r\n        const squareData = {\r\n          card_nonce: nonce,\r\n          billing_address: { postal_code: cardData.billing_postal_code },\r\n          cardholder_name:\r\n            (cardHolderFirstName\r\n              ? cardHolderFirstName\r\n              : adminClientFirstName\r\n            ).trim() +\r\n            \" \" +\r\n            (cardHolderLastName\r\n              ? cardHolderLastName\r\n              : adminClientLastName\r\n            ).trim(),\r\n          verification_token: buyerVerificationToken,\r\n          customerId: matchedClient.squareCustomerId,\r\n        };\r\n\r\n        changeSuccessfulCardNonce(true);\r\n\r\n        return await axios\r\n          .post(\"http://localhost:4000/customers/card\", squareData, {\r\n            headers: {\r\n              Authorization:\r\n                \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n            },\r\n          })\r\n          .then(async (res) => {\r\n            if (squareStoredCreditCards.data) {\r\n              if (\r\n                squareStoredCreditCards.data.some(\r\n                  (x) =>\r\n                    x.billing_address.postal_code ===\r\n                      res.data.card.billing_address.postal_code &&\r\n                    x.card_brand === res.data.card.card_brand &&\r\n                    x.cardholder_name === res.data.card.cardholder_name &&\r\n                    x.exp_month === res.data.card.exp_month &&\r\n                    x.exp_year === res.data.card.exp_year &&\r\n                    x.last_4 === res.data.card.last_4\r\n                )\r\n              ) {\r\n                const matchedDuplicateCard = squareStoredCreditCards.data.filter(\r\n                  (x) =>\r\n                    x.billing_address.postal_code ===\r\n                      res.data.card.billing_address.postal_code &&\r\n                    x.card_brand === res.data.card.card_brand &&\r\n                    x.cardholder_name === res.data.card.cardholder_name &&\r\n                    x.exp_month === res.data.card.exp_month &&\r\n                    x.exp_year === res.data.card.exp_year &&\r\n                    x.last_4 === res.data.card.last_4\r\n                )[0];\r\n\r\n                dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\r\n              }\r\n            }\r\n\r\n            dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\r\n\r\n            updateUnsavedSquareCardIDs({\r\n              variables: {\r\n                unsavedSquareCardID: res.data.card.id,\r\n                firstName: matchedClient.firstName,\r\n                lastName: matchedClient.lastName,\r\n                email: matchedClient.email,\r\n              },\r\n            });\r\n\r\n            getClientsRefetch();\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      };\r\n\r\n      matchedClient\r\n        ? matchedClient.squareCustomerId\r\n          ? returningClientSquarePostRequestFunction()\r\n          : squarePostRequestFunction()\r\n        : squarePostRequestFunction();\r\n    }\r\n  };\r\n\r\n  const createVerificationDetails = () => {\r\n    return {\r\n      amount: \"\",\r\n      currencyCode: \"\",\r\n      intent: \"STORE\",\r\n      billingContact: {\r\n        familyName: adminClientLastName,\r\n        givenName: adminClientFirstName,\r\n        email: adminClientEmail,\r\n        phone: adminClientPhoneNumber,\r\n      },\r\n    };\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (successfulCardNonce) {\r\n      handleSubmitBooking();\r\n    }\r\n  }, [successfulCardNonce, handleSubmitBooking]);\r\n\r\n  return (\r\n    <div className=\"admin_square_payment_form_container\">\r\n      <SquarePaymentForm\r\n        sandbox={true}\r\n        applicationId={process.env.REACT_APP_SQUARE_SANDBOX_APPLICATION_ID}\r\n        locationId={process.env.REACT_APP_SQUARE_SANDBOX_LOCATION_ID}\r\n        cardNonceResponseReceived={cardNonceResponseReceived}\r\n        createVerificationDetails={createVerificationDetails}\r\n        inputStyles={[\r\n          {\r\n            fontSize: \"24px\",\r\n            padding: \"14px\",\r\n            placeholderColor: \"#a0a0a0\",\r\n            backgroundColor: \"transparent\",\r\n          },\r\n          {\r\n            mediaMaxWidth: \"1800px\",\r\n            mediaMinWidth: \"1600px\",\r\n            fontSize: \"16px\",\r\n          },\r\n          {\r\n            mediaMinWidth: \"1801px\",\r\n            fontSize: \"24px\",\r\n          },\r\n        ]}\r\n      >\r\n        <div className=\"admin_create_appointment_input_information_container\">\r\n          <div className=\"sq-label\">Choose a credit card</div>\r\n          <Dropdown\r\n            options={[\r\n              {\r\n                value: JSON.stringify({\r\n                  name: \"NEW CARD\",\r\n                  id: \"NEW CARD\",\r\n                }),\r\n                label: \"NEW CARD\",\r\n              },\r\n              ...renderStoredCreditCardOptions(),\r\n            ].flat()}\r\n            value={\r\n              selectedCreditCard\r\n                ? selectedCreditCard.name\r\n                  ? selectedCreditCard.name\r\n                  : \"\"\r\n                : \"\"\r\n            }\r\n            onChange={(item) => {\r\n              const itemValue = JSON.parse(item.value);\r\n\r\n              if (selectedCreditCard.name) {\r\n                dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                if (itemValue.name === \"\" || itemValue.name === \"NEW CARD\") {\r\n                  dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                  changeSelectedCreditCard({ name: \"\", id: \"\" });\r\n                  changeSelectedCreditCardFullData(\"\");\r\n                } else {\r\n                  dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                  changeSelectedCreditCard({ name: \"\", id: \"\" });\r\n                  changeSelectedCreditCardFullData(\"\");\r\n\r\n                  changeSelectedCreditCard({\r\n                    name: itemValue.name,\r\n                    id: itemValue.id,\r\n                  });\r\n\r\n                  const cardFullData = squareStoredCreditCards.data.filter(\r\n                    (x) => x.id === selectedCreditCard.id\r\n                  )[0];\r\n\r\n                  changeSelectedCreditCardFullData(cardFullData);\r\n                }\r\n              } else {\r\n                dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                changeSelectedCreditCard({ name: \"\", id: \"\" });\r\n                changeSelectedCreditCardFullData(\"\");\r\n\r\n                changeSelectedCreditCard({\r\n                  name: itemValue.name,\r\n                  id: itemValue.id,\r\n                });\r\n\r\n                const cardFullData = squareStoredCreditCards\r\n                  ? squareStoredCreditCards.data\r\n                    ? squareStoredCreditCards.data.filter(\r\n                        (x) => x.id === selectedCreditCard.id\r\n                      )[0]\r\n                    : null\r\n                  : null;\r\n\r\n                changeSelectedCreditCardFullData(cardFullData);\r\n              }\r\n            }}\r\n            controlClassName=\"sq-input\"\r\n            className=\"sq-creditcard\"\r\n            placeholder={\r\n              adminClientFirstName && adminClientLastName\r\n                ? \"NEW CARD\"\r\n                : \"No client selected\"\r\n            }\r\n            disabled={\r\n              adminClientFirstName && adminClientLastName ? false : true\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"admin_create_appointment_cardholder_container\">\r\n          <span className=\"sq-label\">Cardholder First Name</span>\r\n          <input\r\n            className=\"sq-input\"\r\n            placeholder=\"Enter first name\"\r\n            value={\r\n              selectedCreditCardFullData\r\n                ? selectedCreditCardFullData.cardholder_name\r\n                  ? selectedCreditCardFullData.cardholder_name.split(\" \")[0]\r\n                  : cardHolderFirstName\r\n                : cardHolderFirstName\r\n            }\r\n            disabled={selectedCreditCardFullData ? true : false}\r\n            onChange={(e) =>\r\n              changeCardHolderFirstName(e.target.value.toUpperCase())\r\n            }\r\n          />\r\n        </div>\r\n        <div className=\"admin_create_appointment_cardholder_container\">\r\n          <span className=\"sq-label\">Cardholder Last Name</span>\r\n          <input\r\n            className=\"sq-input\"\r\n            placeholder=\"Enter last name\"\r\n            value={\r\n              selectedCreditCardFullData\r\n                ? selectedCreditCardFullData.cardholder_name\r\n                  ? selectedCreditCardFullData.cardholder_name.split(\" \")[1]\r\n                  : cardHolderLastName\r\n                : cardHolderLastName\r\n            }\r\n            onChange={(e) =>\r\n              changeCardHolderLastName(e.target.value.toUpperCase())\r\n            }\r\n            disabled={selectedCreditCardFullData ? true : false}\r\n          />\r\n        </div>\r\n        {selectedCreditCardFullData ? (\r\n          <>\r\n            <div className=\"sq-selected-credit-card-details\">\r\n              {/* Space in \"Credit Card \" important to distinguish between new card and toggled card form inputs */}\r\n              <span className=\"sq-label\">Credit Card &nbsp;</span>\r\n              <input\r\n                name=\"credit_card\"\r\n                type=\"text\"\r\n                maxLength=\"100\"\r\n                className=\"sq-input\"\r\n                disabled={true}\r\n                value={\r\n                  selectedCreditCardFullData.card_brand.toLowerCase() ===\r\n                  \"american_express\"\r\n                    ? \"•••• •••••• •\" + selectedCreditCardFullData.last_4\r\n                    : \"•••• •••• •••• \" + selectedCreditCardFullData.last_4\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              {/* Space in \"Expiration \" important to distinguish between new card and toggled card form inputs */}\r\n              <span className=\"sq-label\">Expiration &nbsp;</span>\r\n              <input\r\n                name=\"expiration_date\"\r\n                type=\"text\"\r\n                className=\"sq-input\"\r\n                disabled={true}\r\n                value={\r\n                  selectedCreditCardFullData.exp_month >= 10\r\n                    ? selectedCreditCardFullData.exp_month.toString() +\r\n                      \"/\" +\r\n                      selectedCreditCardFullData.exp_year.toString().substr(-2)\r\n                    : \"0\" +\r\n                      selectedCreditCardFullData.exp_month.toString() +\r\n                      \"/\" +\r\n                      selectedCreditCardFullData.exp_year.toString().substr(-2)\r\n                }\r\n              />\r\n            </div>\r\n            <div>\r\n              {/* Space in \"Zip Code \" important to distinguish between new card and toggled card form inputs */}\r\n              <span className=\"sq-label\">Zip Code &nbsp;</span>\r\n              <input\r\n                name=\"postal_code\"\r\n                type=\"text\"\r\n                className=\"sq-input\"\r\n                disabled={true}\r\n                value={selectedCreditCardFullData.billing_address.postal_code}\r\n              />\r\n            </div>\r\n            <div>\r\n              {/* Space in \"CVC \" important to distinguish between new card and toggled card form inputs */}\r\n              <span className=\"sq-label\">CVC &nbsp;</span>\r\n              <input\r\n                name=\"cvc_code\"\r\n                type=\"text\"\r\n                className=\"sq-input\"\r\n                disabled={true}\r\n                value={\r\n                  selectedCreditCardFullData.card_brand.toLowerCase() ===\r\n                  \"american_express\"\r\n                    ? \"••••\"\r\n                    : \"•••\"\r\n                }\r\n              />\r\n            </div>\r\n          </>\r\n        ) : null}\r\n\r\n        <CreditCardNumberInput label=\"Credit Card\" />\r\n        <CreditCardExpirationDateInput label=\"Expiration\" />\r\n        <CreditCardPostalCodeInput label=\"Zip Code\" />\r\n        <CreditCardCVVInput label=\"CVC\" />\r\n        <CreditCardSubmitButton>Book Appointment</CreditCardSubmitButton>\r\n      </SquarePaymentForm>\r\n      <div className=\"sq-error-message\">\r\n        {errorMessages.map((errorMessage) => (\r\n          <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPaymentInfo;\r\n"]},"metadata":{},"sourceType":"module"}