{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar _flatten = _interopDefault(require('szfe-tools/lib/flatten'));\n\nvar _get = _interopDefault(require('szfe-tools/lib/get'));\n\nvar React = require('react');\n\nvar React__default = _interopDefault(React);\n\nvar createContext$1 = _interopDefault(require('create-react-context'));\n\nvar _run = _interopDefault(require('szfe-tools/lib/run'));\n\nvar _nextTick = _interopDefault(require('szfe-tools/lib/nextTick'));\n\nvar _isFunction = _interopDefault(require('szfe-tools/lib/isFunction'));\n\nvar _isUndefined = _interopDefault(require('szfe-tools/lib/isUndefined'));\n\nvar _isObject = _interopDefault(require('szfe-tools/lib/isObject'));\n\nvar hoistStatics = _interopDefault(require('hoist-non-react-statics'));\n\nvar _value = _interopDefault(require('szfe-tools/lib/value'));\n\nvar _debounce = _interopDefault(require('szfe-tools/lib/debounce'));\n\nvar _isArray = _interopDefault(require('szfe-tools/lib/isArray'));\n\nvar _globalThis = _interopDefault(require('szfe-tools/lib/globalThis'));\n\nvar NodeKey = _interopDefault(require('react-node-key'));\n\nvar _isExist = _interopDefault(require('szfe-tools/lib/isExist'));\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest();\n}\n\nfunction _toArray(arr) {\n  return _arrayWithHoles(arr) || _iterableToArray(arr) || _nonIterableRest();\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n} // 值类型判断 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n\nvar isRegExp = function isRegExp(val) {\n  return val instanceof RegExp;\n}; // 值类型判断 -------------------------------------------------------------\n\n\nvar aliveScopeContext = createContext$1();\nvar AliveScopeProvider = aliveScopeContext.Provider,\n    AliveScopeConsumer = aliveScopeContext.Consumer; // KeepAlive 组件的上下文，实现缓存生命周期功能\n\nvar aliveNodeContext = createContext$1();\nvar AliveNodeProvider = aliveNodeContext.Provider,\n    AliveNodeConsumer = aliveNodeContext.Consumer;\nvar _filehash = \"jUqy\";\nvar fixedContext = [];\nvar updateListenerCache = new Map();\n\nfunction fixContext(ctx) {\n  fixedContext.push(ctx);\n}\n\nvar createContext = function createContext() {\n  var ctx = createContext$1.apply(void 0, arguments);\n  fixContext(ctx);\n  return ctx;\n}; // 递归重建上下文 Provider\n\n\nvar ProviderBridge = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ProviderBridge, _PureComponent);\n\n  function ProviderBridge(props) {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ProviderBridge);\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ProviderBridge)).call.apply(_getPrototypeOf2, [this, props].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"unmount\", null);\n\n    var ctxValues = props.value;\n\n    if (ctxValues.length === 0) {\n      _this.state = {\n        ctxValue: null\n      };\n      return _possibleConstructorReturn(_this);\n    }\n\n    var _ctxValues = _slicedToArray(ctxValues, 1),\n        _ctxValues$ = _ctxValues[0],\n        ctx = _ctxValues$.ctx,\n        value = _ctxValues$.value,\n        onUpdate = _ctxValues$.onUpdate;\n\n    _this.state = {\n      ctxValue: value\n    };\n    _this.unmount = onUpdate(function (value) {\n      _this.setState({\n        ctxValue: value\n      });\n    });\n    return _this;\n  }\n\n  _createClass(ProviderBridge, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _run(this.unmount);\n    } // componentDidCatch(error) {\n    //   console.error('ProviderBridge Error', error)\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          ctxValues = _this$props.value,\n          children = _this$props.children;\n\n      if (ctxValues.length === 0) {\n        return children;\n      }\n\n      var ctxValue = this.state.ctxValue;\n\n      var _ctxValues2 = _toArray(ctxValues),\n          ctx = _ctxValues2[0].ctx,\n          restValues = _ctxValues2.slice(1);\n\n      var Provider = ctx.Provider;\n      var nextChildren = !_isUndefined(ctxValue) ? React__default.createElement(Provider, {\n        value: ctxValue,\n        _nk: \"\".concat(_filehash, \"11\")\n      }, children) : children; // 递归 ProviderBridge 修复多个上下文\n      // 此处未考虑待修复上下文顺序问题，按先来后到顺序处理，但理论上不应存在顺序问题\n\n      return restValues.length > 0 ? React__default.createElement(ProviderBridge, {\n        value: restValues,\n        _nk: \"\".concat(_filehash, \"21\")\n      }, nextChildren) : nextChildren;\n    }\n  }]);\n\n  return ProviderBridge;\n}(React.PureComponent); // 在 KeepAlive 位置使用待修复上下文的 Consumer 探测可能存在的上下文关系\n// 若成功捕获上下文则保存其内容，用以后续 Keeper 中上下文的重建\n\n\nvar ConsumerWrapper = /*#__PURE__*/function (_PureComponent2) {\n  _inherits(ConsumerWrapper, _PureComponent2);\n\n  function ConsumerWrapper(props) {\n    var _getPrototypeOf3;\n\n    var _this2;\n\n    _classCallCheck(this, ConsumerWrapper);\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(ConsumerWrapper)).call.apply(_getPrototypeOf3, [this, props].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this2), \"updateListener\", null);\n\n    _defineProperty(_assertThisInitialized(_this2), \"ctxInfo\", null);\n\n    var value = props.value,\n        ctx = props.ctx,\n        id = props.id;\n\n    if (_isUndefined(value)) {\n      return _possibleConstructorReturn(_this2);\n    } // 因 Consumer 探测器存在于 KeepAlive 外层故会随着 KeepAlive 卸载\n    // componentWillUnmount 中保留了已生成的更新监听器\n    // 此处重新挂载后恢复与对应 Keeper 中 ProviderBridge 的联系\n\n\n    _this2.updateListener = _get(updateListenerCache.get(ctx), id, new Map());\n    _this2.ctxInfo = {\n      ctx: ctx,\n      value: value,\n      // 注册上下文更新的监听，保证上下文更新时 Keeper 中 ProviderBridge 内容的同步\n      onUpdate: function onUpdate(updator) {\n        _this2.updateListener.set(updator, updator); // 返回更新监听器的注销方法\n\n\n        return function () {\n          return _this2.updateListener[\"delete\"](updator);\n        };\n      }\n    };\n    return _this2;\n  }\n\n  _createClass(ConsumerWrapper, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props2 = this.props,\n          value = _this$props2.value,\n          ctx = _this$props2.ctx,\n          id = _this$props2.id;\n\n      if (_isUndefined(value)) {\n        return;\n      } // 因 Consumer 探测器存在于 KeepAlive 外层故会随着 KeepAlive 卸载\n      // 此处保留其中已生成的更新监听器，用以在重新挂载后保持与对应 Keeper 中 ProviderBridge 的联系\n\n\n      updateListenerCache.set(ctx, _objectSpread2({}, _get(updateListenerCache.get(ctx), undefined, {}), _defineProperty({}, id, this.updateListener)));\n    } // 利用 shouldComponentUpdate 尽早将上下文更新的咨询通知到对应 Keeper 中 ProviderBridge\n    // TODO: 改用 componentWillReceiveProps 更早地进行更新，需注意与 getDerivedStateFromProps 新生命周期的兼容及可能存在的死循环问题\n\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(_ref) {\n      var value = _ref.value;\n      var prevValue = this.props.prevValue;\n      var shouldUpdate = prevValue !== value;\n\n      if (shouldUpdate) {\n        _run(this.updateListener, 'forEach', function (fn) {\n          return fn(value);\n        });\n      }\n\n      return shouldUpdate;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props3 = this.props,\n          value = _this$props3.value,\n          renderWrapper = _this$props3.renderWrapper,\n          renderContent = _this$props3.renderContent,\n          id = _this$props3.id;\n      return renderWrapper(function (ctx$$) {\n        return renderContent(_isUndefined(value) ? ctx$$ : [].concat(_toConsumableArray(ctx$$), [_this3.ctxInfo]));\n      });\n    }\n  }]);\n\n  return ConsumerWrapper;\n}(React.PureComponent); // 对 ConsumerWrapper 的递归结构，会在 devtool 中生成较深的嵌套结构，可用 hooks 消除嵌套结构\n\n\nfunction RecursiveConsumerBridge(_ref2) {\n  var renderChildren = _ref2.children,\n      id = _ref2.id;\n  var renderWrapper = fixedContext.reduce(function (render, ctx) {\n    var Consumer = ctx.Consumer;\n\n    var renderWrapper = function renderWrapper(renderContent) {\n      return React__default.createElement(Consumer, {\n        _nk: \"\".concat(_filehash, \"31\")\n      }, function (value) {\n        return React__default.createElement(ConsumerWrapper, _extends({\n          value: value,\n          ctx: ctx,\n          renderWrapper: render,\n          renderContent: renderContent,\n          id: id\n        }, {\n          _nk: \"\".concat(_filehash, \"41\")\n        }));\n      });\n    };\n\n    return renderWrapper;\n  }, function (renderContent) {\n    return renderContent([]);\n  });\n  return renderWrapper(renderChildren);\n} // 若支持 Hooks，就不需要递归了，相关实现解释可参考 ConsumerWrapper\n\n\nfunction HooksConsumerBridge(_ref3) {\n  var renderChildren = _ref3.children,\n      id = _ref3.id;\n  var context$$ = fixedContext.map(function (ctx) {\n    var value = React.useContext(ctx);\n    var prevValueRef = React.useRef(value);\n\n    var _useRef = React.useRef(_get(updateListenerCache.get(ctx), id, new Map())),\n        updateListener = _useRef.current; // 尽可能早地进行更新\n\n\n    if (prevValueRef.current !== value) {\n      _nextTick(function () {\n        return _run(updateListener, 'forEach', function (fn) {\n          return fn(value);\n        });\n      });\n    }\n\n    prevValueRef.current = value;\n    React.useEffect(function () {\n      return function () {\n        if (_isUndefined(value)) {\n          return;\n        }\n\n        updateListenerCache.set(ctx, _objectSpread2({}, _get(updateListenerCache.get(ctx), undefined, {}), _defineProperty({}, id, updateListener)));\n      };\n    }, []);\n    return {\n      ctx: ctx,\n      value: value,\n      onUpdate: function onUpdate(fn) {\n        updateListener.set(fn, fn);\n        return function () {\n          return updateListener[\"delete\"](fn);\n        };\n      }\n    };\n  }).filter(function (_ref4) {\n    var value = _ref4.value;\n    return !_isUndefined(value);\n  });\n  return renderChildren(context$$);\n}\n\nvar ConsumerBridge = [React.useContext, React.useRef, React.useEffect].every(_isFunction) ? HooksConsumerBridge : RecursiveConsumerBridge;\n\nvar _temp;\n\nvar _filehash$1 = \"46lG\";\nvar isSupported = _isFunction(React.lazy) && !_isUndefined(React.Suspense);\n\nvar SusNotSupported = function SusNotSupported(_ref) {\n  var children = _ref.children;\n  return _run(children);\n};\n\nvar Lazy = isSupported ? React.lazy(function () {\n  return new Promise(function () {\n    return null;\n  });\n}) : function () {\n  return null;\n};\n\nvar FallbackListener = /*#__PURE__*/function (_Component) {\n  _inherits(FallbackListener, _Component);\n\n  function FallbackListener() {\n    _classCallCheck(this, FallbackListener);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FallbackListener).apply(this, arguments));\n  }\n\n  _createClass(FallbackListener, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      _run(this.props, 'onStart');\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      _run(this.props, 'onEnd');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return FallbackListener;\n}(React.Component);\n\nfunction SuspenseBridge(_ref2) {\n  var children = _ref2.children,\n      sus$$ = _ref2.sus$$;\n  return (// 捕获 Keeper 内部可能存在的 lazy，并触发对应 KeepAlive 位置上的 LazyBridge\n    React__default.createElement(React.Suspense, {\n      fallback: React__default.createElement(FallbackListener, {\n        onStart: sus$$.onSuspenseStart,\n        onEnd: sus$$.onSuspenseEnd,\n        _nk: \"\".concat(_filehash$1, \"21\")\n      }),\n      _nk: \"\".concat(_filehash$1, \"11\")\n    }, children)\n  );\n}\n\nvar LazyBridge = isSupported ? (_temp = /*#__PURE__*/function (_Component2) {\n  _inherits(LazyBridge, _Component2);\n\n  function LazyBridge() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LazyBridge);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LazyBridge)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      suspense: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuspenseStart\", function () {\n      _this.setState({\n        suspense: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"onSuspenseEnd\", function () {\n      _this.setState({\n        suspense: false\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"sus$$\", {\n      onSuspenseStart: _this.onSuspenseStart,\n      onSuspenseEnd: _this.onSuspenseEnd\n    });\n\n    return _this;\n  }\n\n  _createClass(LazyBridge, [{\n    key: \"render\",\n    value: function render() {\n      var children = this.props.children;\n      return React__default.createElement(React.Fragment, null, _run(children, undefined, this.sus$$), this.state.suspense && React__default.createElement(Lazy, {\n        _nk: \"\".concat(_filehash$1, \"31\")\n      }));\n    }\n  }]);\n\n  return LazyBridge;\n}(React.Component), _temp) : SusNotSupported;\nvar SuspenseBridge$1 = isSupported ? SuspenseBridge : SusNotSupported;\n\nvar ErrorBoundaryBridge = /*#__PURE__*/function (_Component) {\n  _inherits(ErrorBoundaryBridge, _Component);\n\n  function ErrorBoundaryBridge() {\n    _classCallCheck(this, ErrorBoundaryBridge);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ErrorBoundaryBridge).apply(this, arguments));\n  }\n\n  _createClass(ErrorBoundaryBridge, [{\n    key: \"componentDidCatch\",\n    // Error Boundary 透传至对应 KeepAlive 实例位置\n    value: function componentDidCatch(error) {\n      var throwError = this.props.error$$;\n\n      _run(throwError, undefined, error, function () {\n        _run(throwError, undefined, null);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return this.props.children;\n    }\n  }]);\n\n  return ErrorBoundaryBridge;\n}(React.Component);\n\n_defineProperty(ErrorBoundaryBridge, \"getDerivedStateFromError\", function () {\n  return null;\n});\n\nvar ErrorThrower = /*#__PURE__*/function (_Component2) {\n  _inherits(ErrorThrower, _Component2);\n\n  function ErrorThrower() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ErrorThrower);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ErrorThrower)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      error: null\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"throwError\", function (error, cb) {\n      return _this.setState({\n        error: error\n      }, cb);\n    });\n\n    return _this;\n  }\n\n  _createClass(ErrorThrower, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.error) {\n        throw this.state.error;\n      }\n\n      return _run(this.props.children, undefined, this.throwError);\n    }\n  }]);\n\n  return ErrorThrower;\n}(React.Component);\n\nvar _filehash$2 = \"lajT\";\n\nfunction Bridge(_ref) {\n  var id = _ref.id,\n      children = _ref.children,\n      bridgeProps = _ref.bridgeProps;\n  var sus$$ = bridgeProps.sus$$,\n      ctx$$ = bridgeProps.ctx$$,\n      error$$ = bridgeProps.error$$;\n  return (\n    /* 由内向外透传 componentDidCatch 捕获的 error */\n    React__default.createElement(ErrorBoundaryBridge, {\n      error$$: error$$,\n      _nk: \"\".concat(_filehash$2, \"11\")\n    }, React__default.createElement(SuspenseBridge$1, {\n      sus$$: sus$$,\n      _nk: \"\".concat(_filehash$2, \"21\")\n    }, React__default.createElement(ProviderBridge, {\n      id: id,\n      value: ctx$$,\n      _nk: \"\".concat(_filehash$2, \"31\")\n    }, children)))\n  );\n} // 用于 KeepAlive 中，实现 KeepAlive 向外或向内的桥接代理\n\n\nfunction Acceptor(_ref2) {\n  var id = _ref2.id,\n      children = _ref2.children;\n  return (\n    /* 由内向外透传 componentDidCatch 捕获的 error */\n    React__default.createElement(ErrorThrower, {\n      _nk: \"\".concat(_filehash$2, \"41\")\n    }, function (error$$) {\n      return (\n        /* 由内向外透传 lazy 行为 */\n        React__default.createElement(LazyBridge, {\n          _nk: \"\".concat(_filehash$2, \"51\")\n        }, function (sus$$) {\n          return (\n            /* 由外向内透传可能被捕获的 Provider 数据 */\n            React__default.createElement(ConsumerBridge, {\n              id: id,\n              _nk: \"\".concat(_filehash$2, \"61\")\n            }, function (ctx$$) {\n              return _run(children, undefined, {\n                bridgeProps: {\n                  sus$$: sus$$,\n                  ctx$$: ctx$$,\n                  error$$: error$$\n                }\n              });\n            })\n          );\n        })\n      );\n    })\n  );\n}\n\nvar _filehash$3 = \"XKTv\";\nvar LIFECYCLE_ACTIVATE = 'componentDidActivate';\nvar LIFECYCLE_UNACTIVATE = 'componentWillUnactivate';\n\nvar withActivation = function withActivation(WrappedComponent) {\n  var HOC = /*#__PURE__*/function (_Component) {\n    _inherits(HOC, _Component);\n\n    function HOC() {\n      var _getPrototypeOf2;\n\n      var _this;\n\n      _classCallCheck(this, HOC);\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(HOC)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n      _defineProperty(_assertThisInitialized(_this), \"drop\", null);\n\n      return _this;\n    }\n\n    _createClass(HOC, [{\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        _run(this.drop);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        var _this2 = this;\n\n        var _this$props = this.props,\n            forwardedRef = _this$props.forwardedRef,\n            props = _objectWithoutProperties(_this$props, [\"forwardedRef\"]);\n\n        return React__default.createElement(AliveNodeConsumer, {\n          _nk: \"\".concat(_filehash$3, \"11\")\n        }, function () {\n          var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n              attach = _ref.attach;\n\n          return React__default.createElement(WrappedComponent, _extends({\n            ref: function ref(_ref2) {\n              if ([LIFECYCLE_ACTIVATE, LIFECYCLE_UNACTIVATE].every(function (lifecycleName) {\n                return !_isFunction(_get(_ref2, lifecycleName));\n              })) {\n                return;\n              }\n\n              _this2.drop = _run(attach, undefined, _ref2); // 以下保持 ref 功能\n\n              if (_isUndefined(forwardedRef)) {\n                return;\n              }\n\n              if (_isObject(forwardedRef) && 'current' in forwardedRef) {\n                forwardedRef.current = _ref2;\n                return;\n              }\n\n              _run(forwardedRef, undefined, _ref2);\n            }\n          }, props, {\n            _nk: \"\".concat(_filehash$3, \"21\")\n          }));\n        });\n      }\n    }]);\n\n    return HOC;\n  }(React.Component); // 由于 KeepAlive 内组件渲染与实际内容落后一个节拍\n  // 将导致真实节点的 componentDidMount 无法及时获取到 KeepAlive 中内容的 ref 值\n  // 此处对使用了 withActivation HOC 的组件 componentDidMount 做 nextTick 延时处理\n  // 修复上述问题\n\n\n  if (_isFunction(WrappedComponent.prototype.componentDidMount)) {\n    WrappedComponent.prototype._componentDidMount = WrappedComponent.prototype.componentDidMount;\n\n    WrappedComponent.prototype.componentDidMount = function componentDidMount() {\n      var _this3 = this;\n\n      _nextTick(function () {\n        return WrappedComponent.prototype._componentDidMount.call(_this3);\n      });\n    };\n  }\n\n  if (_isFunction(React.forwardRef)) {\n    var ForwardedRefHOC = React.forwardRef(function (props, ref) {\n      return React__default.createElement(HOC, _extends({}, props, {\n        forwardedRef: ref,\n        _nk: \"\".concat(_filehash$3, \"31\")\n      }));\n    });\n    return hoistStatics(ForwardedRefHOC, WrappedComponent);\n  } else {\n    return hoistStatics(HOC, WrappedComponent);\n  }\n};\n\nvar useActivation = function useActivation(funcName, func) {\n  // 兼容性判断\n  if ([React.useRef, React.useContext, React.useEffect].some(function (fn) {\n    return !_isFunction(fn);\n  })) {\n    return;\n  }\n\n  var ctxValue = React.useContext(aliveNodeContext); // 未处于 KeepAlive 中\n\n  if (!ctxValue) {\n    return;\n  }\n\n  var _useRef = React.useRef({}),\n      ref = _useRef.current;\n\n  var attach = ctxValue.attach;\n  ref[funcName] = func;\n  ref.drop = attach(ref);\n  React.useEffect(function () {\n    return function () {\n      return _run(ref.drop);\n    };\n  }, []);\n};\n\nvar useActivate = useActivation.bind(null, LIFECYCLE_ACTIVATE);\nvar useUnactivate = useActivation.bind(null, LIFECYCLE_UNACTIVATE);\nvar _filehash$4 = \"bNyU\";\n\nvar Keeper = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Keeper, _PureComponent);\n\n  function Keeper(props) {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Keeper);\n\n    for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      rest[_key - 1] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Keeper)).call.apply(_getPrototypeOf2, [this, props].concat(rest)));\n\n    _defineProperty(_assertThisInitialized(_this), \"listeners\", new Map());\n\n    _defineProperty(_assertThisInitialized(_this), \"wrapper\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"attach\", function (ref) {\n      var _listeners$set;\n\n      var listeners = _this.listeners;\n\n      if (!ref) {\n        return function () {\n          return null;\n        };\n      }\n\n      if (ref.isKeepAlive) {\n        _nextTick(function () {\n          var _this$props = _this.props,\n              id = _this$props.id,\n              store = _this$props.store;\n          var cache = store.get(id);\n          cache.aliveNodesId = new Set([].concat(_toConsumableArray(cache.aliveNodesId), [ref.id]));\n        });\n      }\n\n      listeners.set(ref, (_listeners$set = {}, _defineProperty(_listeners$set, LIFECYCLE_ACTIVATE, function () {\n        return _run(ref, LIFECYCLE_ACTIVATE);\n      }), _defineProperty(_listeners$set, LIFECYCLE_UNACTIVATE, function () {\n        return _run(ref, LIFECYCLE_UNACTIVATE);\n      }), _listeners$set)); // 返回 listenerRemover 用以在对应组件卸载时解除监听\n\n      return function () {\n        listeners[\"delete\"](ref);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"contextValue\", {\n      id: _this.props.id,\n      attach: _this.attach\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refresh\", function (cb) {\n      return _this.setState({\n        key: Math.random()\n      }, cb);\n    });\n\n    _this.state = {\n      children: props.children,\n      bridgeProps: props.bridgeProps,\n      key: Math.random()\n    };\n    return _this;\n  }\n\n  _createClass(Keeper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this,\n          _store$set;\n\n      var _this$props2 = this.props,\n          store = _this$props2.store,\n          id = _this$props2.id;\n      var listeners = this.listeners;\n      var node = this.wrapper; // 已存在检测，防止意外现象\n\n      if (store.has(id)) {\n        return;\n      }\n\n      store.set(id, (_store$set = {\n        listeners: listeners,\n        aliveNodesId: [],\n        inited: false,\n        cached: false,\n        wrapper: node,\n        nodes: _toConsumableArray(node.children)\n      }, _defineProperty(_store$set, LIFECYCLE_ACTIVATE, function () {\n        return _this2[LIFECYCLE_ACTIVATE]();\n      }), _defineProperty(_store$set, LIFECYCLE_UNACTIVATE, function () {\n        return _this2[LIFECYCLE_UNACTIVATE]();\n      }), _store$set));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props3 = this.props,\n          store = _this$props3.store,\n          keepers = _this$props3.keepers,\n          id = _this$props3.id; // 卸载前尝试归位 DOM 节点\n\n      try {\n        var cache = store.get(id);\n        cache.nodes.forEach(function (node) {\n          cache.wrapper.appendChild(node);\n        });\n      } catch (error) {// console.error(error) // do nothing\n      }\n\n      store[\"delete\"](id);\n      keepers[\"delete\"](id);\n    }\n  }, {\n    key: LIFECYCLE_ACTIVATE,\n    value: function value() {\n      this.listeners.forEach(function (listener) {\n        return _run(listener, [LIFECYCLE_ACTIVATE]);\n      });\n    }\n  }, {\n    key: LIFECYCLE_UNACTIVATE,\n    value: function value() {\n      var listeners = _toConsumableArray(this.listeners);\n\n      listeners.reverse().forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            listener = _ref2[1];\n\n        return _run(listener, [LIFECYCLE_UNACTIVATE]);\n      });\n    } // // 原先打算更新过程中先重置 dom 节点状态，更新后恢复 dom 节点\n    // // 但考虑到性能消耗可能过大，且可能因 dom 操作时机引发其他 react 渲染问题，故不使用\n    // // 对应 KeepAlive 处 update 也注释起来不使用\n    // // 组件更新后，更新 DOM 节点列表状态\n    // componentDidUpdate() {\n    //   const { store, id } = this.props\n    //   const node = this.wrapper\n    //   if (get(node, 'children.length') > 0) {\n    //     store[id].nodes = [...node.children]\n    //   }\n    //   console.log(store[id].nodes)\n    // }\n    // 生命周期绑定\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props4 = this.props,\n          id = _this$props4.id,\n          props = _objectWithoutProperties(_this$props4, [\"id\"]);\n\n      var _this$state = this.state,\n          children = _this$state.children,\n          bridgeProps = _this$state.bridgeProps,\n          key = _this$state.key;\n      return React__default.createElement(\"div\", {\n        ref: function ref(node) {\n          _this3.wrapper = node;\n        },\n        _nk: \"\".concat(_filehash$4, \"11\")\n      }, React__default.createElement(\"div\", {\n        key: \"keeper-container\",\n        className: \"ka-content\"\n      }, React__default.createElement(Bridge, {\n        id: id,\n        bridgeProps: bridgeProps,\n        _nk: \"\".concat(_filehash$4, \"21\")\n      }, React__default.createElement(AliveNodeProvider, {\n        value: this.contextValue,\n        _nk: \"\".concat(_filehash$4, \"31\")\n      }, React__default.cloneElement(children, {\n        key: \"\".concat(children.key, \":\").concat(key)\n      })))));\n    }\n  }]);\n\n  return Keeper;\n}(React.PureComponent);\n\nvar _filehash$5 = \"UVSV\";\nvar HANDLE_TYPE_DROP = 'drop';\nvar HANDLE_TYPE_REFRESH = 'refresh';\n\nvar AliveScope = /*#__PURE__*/function (_Component) {\n  _inherits(AliveScope, _Component);\n\n  function AliveScope() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AliveScope);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AliveScope)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"store\", new Map());\n\n    _defineProperty(_assertThisInitialized(_this), \"nodes\", new Map());\n\n    _defineProperty(_assertThisInitialized(_this), \"keepers\", new Map());\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (id, params) {\n      return new Promise(function (resolve) {\n        var keeper = _this.keepers.get(id);\n\n        var isNew = !keeper;\n        var now = Date.now();\n        var node = _this.nodes.get(id) || null;\n\n        _this.nodes.set(id, _objectSpread2({\n          id: id,\n          createTime: now,\n          updateTime: now\n        }, node, {}, params));\n\n        if (isNew) {\n          _this.helpers = _objectSpread2({}, _this.helpers);\n\n          _this.forceUpdate(resolve);\n        } else {\n          var children = params.children,\n              bridgeProps = params.bridgeProps;\n          keeper.setState({\n            children: children,\n            bridgeProps: bridgeProps\n          }, resolve);\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"keep\", function (id, params) {\n      return new Promise(function (resolve) {\n        _this.update(id, _objectSpread2({\n          id: id\n        }, params)).then(function () {\n          resolve(_this.store.get(id));\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCachingNodesByName\", function (name) {\n      return _this.getCachingNodes().filter(function (node) {\n        return isRegExp(name) ? name.test(node.name) : node.name === name;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getScopeIds\", function (ids) {\n      // 递归采集 scope alive nodes id\n      var getCachingNodesId = function getCachingNodesId(id) {\n        var aliveNodesId = _get(_this.getCache(id), 'aliveNodesId', []);\n\n        if (aliveNodesId.size > 0) {\n          return [id, _toConsumableArray(aliveNodesId).map(getCachingNodesId)];\n        }\n\n        return [id].concat(_toConsumableArray(aliveNodesId));\n      };\n\n      return _flatten(ids.map(function (id) {\n        return getCachingNodesId(id);\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dropById\", function (id) {\n      return _this.handleNodes([id], HANDLE_TYPE_DROP);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dropScopeByIds\", function (ids) {\n      return _this.handleNodes(_this.getScopeIds(ids), HANDLE_TYPE_DROP);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"drop\", function (name) {\n      return _this.handleNodes(_this.getCachingNodesByName(name).map(function (node) {\n        return node.id;\n      }), HANDLE_TYPE_DROP);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"dropScope\", function (name) {\n      return _this.dropScopeByIds(_this.getCachingNodesByName(name).map(function (_ref) {\n        var id = _ref.id;\n        return id;\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshById\", function (id) {\n      return _this.handleNodes([id], HANDLE_TYPE_REFRESH);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshScopeByIds\", function (ids) {\n      return _this.handleNodes(_this.getScopeIds(ids), HANDLE_TYPE_REFRESH);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refresh\", function (name) {\n      return _this.handleNodes(_this.getCachingNodesByName(name).map(function (node) {\n        return node.id;\n      }), HANDLE_TYPE_REFRESH);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"refreshScope\", function (name) {\n      return _this.refreshScopeByIds(_this.getCachingNodesByName(name).map(function (_ref2) {\n        var id = _ref2.id;\n        return id;\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleNodes\", function (nodesId) {\n      var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : HANDLE_TYPE_DROP;\n      return new Promise(function (resolve) {\n        var willRefreshKeepers = [];\n        var willDropNodes = [];\n        nodesId.forEach(function (id) {\n          var cache = _this.store.get(id);\n\n          if (!cache) {\n            return;\n          }\n\n          var canRefresh = type === HANDLE_TYPE_REFRESH && !_get(cache, 'cached');\n\n          var canDrop = type === HANDLE_TYPE_DROP && _get(cache, 'cached') || _get(cache, 'willDrop');\n\n          if (canDrop) {\n            // 用在多层 KeepAlive 同时触发 drop 时，避免触发深层 KeepAlive 节点的缓存生命周期\n            cache.willDrop = true;\n\n            _this.nodes[\"delete\"](id);\n\n            willDropNodes.push(id);\n          }\n\n          if (canRefresh) {\n            var keeper = _this.keepers.get(id);\n\n            willRefreshKeepers.push(keeper);\n          }\n        });\n        Promise.all([willDropNodes.length === 0 ? Promise.resolve(false) : new Promise(function (resolve) {\n          _this.helpers = _objectSpread2({}, _this.helpers);\n\n          _this.forceUpdate(function () {\n            return resolve(true);\n          });\n        }), willRefreshKeepers.length === 0 ? Promise.resolve(false) : Promise.all(willRefreshKeepers.map(function (keeper) {\n          return new Promise(function (resolve) {\n            return keeper.refresh(resolve);\n          });\n        }))]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              dropSuccessfully = _ref4[0],\n              refreshSuccessfully = _ref4[1];\n\n          return resolve(Boolean(dropSuccessfully || refreshSuccessfully));\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"clear\", function () {\n      return _this.handleNodes(_this.getCachingNodes().map(function (_ref5) {\n        var id = _ref5.id;\n        return id;\n      }));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCache\", function (id) {\n      return _this.store.get(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getNode\", function (id) {\n      return _this.nodes.get(id);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getCachingNodes\", function () {\n      return _toConsumableArray(_this.nodes.values());\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"helpers\", {\n      keep: _this.keep,\n      update: _this.update,\n      drop: _this.drop,\n      dropScope: _this.dropScope,\n      dropById: _this.dropById,\n      dropScopeByIds: _this.dropScopeByIds,\n      refresh: _this.refresh,\n      refreshScope: _this.refreshScope,\n      refreshById: _this.refreshById,\n      refreshScopeByIds: _this.refreshScopeByIds,\n      getScopeIds: _this.getScopeIds,\n      clear: _this.clear,\n      getCache: _this.getCache,\n      getNode: _this.getNode,\n      getCachingNodes: _this.getCachingNodes\n    });\n\n    return _this;\n  }\n\n  _createClass(AliveScope, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var children = this.props.children;\n      return React__default.createElement(AliveScopeProvider, {\n        value: this.helpers,\n        _nk: \"\".concat(_filehash$5, \"11\")\n      }, children, React__default.createElement(\"div\", {\n        style: {\n          display: 'none'\n        },\n        _nk: \"\".concat(_filehash$5, \"21\")\n      }, _toConsumableArray(this.nodes.values()).map(function (_ref6) {\n        var children = _ref6.children,\n            props = _objectWithoutProperties(_ref6, [\"children\"]);\n\n        return React__default.createElement(Keeper, _extends({\n          key: props.id\n        }, props, {\n          store: _this2.store,\n          keepers: _this2.keepers,\n          ref: function ref(keeper) {\n            _this2.keepers.set(props.id, keeper);\n          },\n          _nk: \"iAr\".concat(_filehash$5, \"31\")\n        }), children);\n      })));\n    }\n  }]);\n\n  return AliveScope;\n}(React.Component);\n\nvar _filehash$6 = \"X7Aa\";\n\nfunction controllerCherryPick(controller) {\n  var drop = controller.drop,\n      dropScope = controller.dropScope,\n      refresh = controller.refresh,\n      refreshScope = controller.refreshScope,\n      clear = controller.clear,\n      getCachingNodes = controller.getCachingNodes;\n  return {\n    drop: drop,\n    dropScope: dropScope,\n    refresh: refresh,\n    refreshScope: refreshScope,\n    clear: clear,\n    getCachingNodes: getCachingNodes\n  };\n}\n\nvar expandKeepAlive = function expandKeepAlive(KeepAlive) {\n  var renderContent = function renderContent(_ref) {\n    var idPrefix = _ref.idPrefix,\n        helpers = _ref.helpers,\n        props = _ref.props;\n\n    var isOutsideAliveScope = _isUndefined(helpers);\n\n    if (isOutsideAliveScope) {\n      console.error('You should not use <KeepAlive /> outside a <AliveScope>');\n    }\n\n    return isOutsideAliveScope ? _get(props, 'children', null) : React__default.createElement(NodeKey, {\n      prefix: idPrefix,\n      key: props._nk,\n      _nk: \"\".concat(_filehash$6, \"11\")\n    }, function (id) {\n      return React__default.createElement(Acceptor, {\n        id: id,\n        _nk: \"\".concat(_filehash$6, \"21\")\n      }, function (bridgeProps) {\n        return React__default.createElement(KeepAlive, _extends({\n          key: id\n        }, props, bridgeProps, {\n          id: id,\n          _helpers: helpers,\n          _nk: \"\".concat(_filehash$6, \"31\")\n        }));\n      });\n    });\n  };\n\n  var HookExpand = function HookExpand(_ref2) {\n    var idPrefix = _ref2.id,\n        props = _objectWithoutProperties(_ref2, [\"id\"]);\n\n    return renderContent({\n      idPrefix: idPrefix,\n      helpers: React.useContext(aliveScopeContext),\n      props: props\n    });\n  };\n\n  var WithExpand = function WithExpand(_ref3) {\n    var idPrefix = _ref3.id,\n        props = _objectWithoutProperties(_ref3, [\"id\"]);\n\n    return React__default.createElement(AliveScopeConsumer, {\n      _nk: \"\".concat(_filehash$6, \"41\")\n    }, function (helpers) {\n      return renderContent({\n        idPrefix: idPrefix,\n        helpers: helpers,\n        props: props\n      });\n    });\n  };\n\n  return _isFunction(React.useContext) ? HookExpand : WithExpand;\n};\n\nvar withAliveScope = function withAliveScope(WrappedComponent) {\n  var renderContent = function renderContent(_ref4) {\n    var helpers = _ref4.helpers,\n        props = _ref4.props,\n        forwardedRef = _ref4.forwardedRef;\n    return React__default.createElement(WrappedComponent, _extends({}, props, helpers, {\n      ref: forwardedRef,\n      _nk: \"\".concat(_filehash$6, \"51\")\n    }));\n  };\n\n  var HookScope = function HookScope(_ref5) {\n    var forwardedRef = _ref5.forwardedRef,\n        props = _objectWithoutProperties(_ref5, [\"forwardedRef\"]);\n\n    return renderContent({\n      helpers: controllerCherryPick(React.useContext(aliveScopeContext) || {}),\n      props: props,\n      forwardedRef: forwardedRef\n    });\n  };\n\n  var WithScope = function WithScope(_ref6) {\n    var forwardedRef = _ref6.forwardedRef,\n        props = _objectWithoutProperties(_ref6, [\"forwardedRef\"]);\n\n    return React__default.createElement(AliveScopeConsumer, {\n      _nk: \"\".concat(_filehash$6, \"42\")\n    }, function () {\n      var controller = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return renderContent({\n        helpers: controllerCherryPick(controller),\n        props: props,\n        forwardedRef: forwardedRef\n      });\n    });\n  };\n\n  var HOCWithAliveScope = _isFunction(React.useContext) ? HookScope : WithScope;\n\n  if (_isFunction(React.forwardRef)) {\n    var ForwardedRefHOC = React.forwardRef(function (props, ref) {\n      return React__default.createElement(HOCWithAliveScope, _extends({}, props, {\n        forwardedRef: ref,\n        _nk: \"\".concat(_filehash$6, \"61\")\n      }));\n    });\n    return hoistStatics(ForwardedRefHOC, WrappedComponent);\n  } else {\n    return hoistStatics(HOCWithAliveScope, WrappedComponent);\n  }\n};\n\nvar useAliveController = function useAliveController() {\n  if (!_isFunction(React.useContext)) {\n    return {};\n  }\n\n  var ctxValue = React.useContext(aliveScopeContext);\n\n  if (!ctxValue) {\n    return {};\n  }\n\n  return controllerCherryPick(ctxValue);\n};\n\nfunction isScrollableNode() {\n  var node = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (!_isExist(node)) {\n    return false;\n  }\n\n  return node.scrollWidth > node.clientWidth || node.scrollHeight > node.clientHeight;\n}\n\nfunction getScrollableNodes(from) {\n  if (!_isFunction(_get(_globalThis, 'document.querySelectorAll'))) {\n    return [];\n  }\n\n  return [].concat(_toConsumableArray(_value(_run(from, 'querySelectorAll', '*'), [])), [from]).filter(isScrollableNode);\n}\n\nfunction saveScrollPosition(from) {\n  var nodes = _toConsumableArray(new Set(_toConsumableArray(_flatten(from.map(getScrollableNodes)))));\n\n  var saver = nodes.map(function (node) {\n    return [node, {\n      x: node.scrollLeft,\n      y: node.scrollTop\n    }];\n  });\n  return function revert() {\n    saver.forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          node = _ref2[0],\n          _ref2$ = _ref2[1],\n          x = _ref2$.x,\n          y = _ref2$.y;\n\n      node.scrollLeft = x;\n      node.scrollTop = y;\n    });\n  };\n}\n\nvar body = _get(_globalThis, 'document.body');\n\nvar screenScrollingElement = _get(_globalThis, 'document.scrollingElement', _get(_globalThis, 'document.documentElement', {}));\n\nvar getErrorTips = function getErrorTips(name) {\n  return \"<KeepAlive \".concat(name ? \"name=\\\"\".concat(name, \"\\\" \") : '', \"/> Too many transient updates, may have encountered an infinite loop of updates, forced to pause the update\\nThere are serious performance issues with the update results you are currently seeing\\nMay encounter an implied bug, please don't use KeepAlive and contact the author to solve\");\n};\n\nvar parseWhenResult = function parseWhenResult(res) {\n  if (_isArray(res)) {\n    return res;\n  }\n\n  return [res];\n};\n\nvar KeepAlive = /*#__PURE__*/function (_Component) {\n  _inherits(KeepAlive, _Component); // 用作 Keeper 识别 KeepAlive\n  // 用作 Keeper 识别 KeepAlive\n\n\n  function KeepAlive(props) {\n    var _this;\n\n    _classCallCheck(this, KeepAlive);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(KeepAlive).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"updateTimes\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"errorTips\", _debounce(function () {\n      var name = _this.props.name;\n      console.error(getErrorTips(name));\n    }, 100));\n\n    _defineProperty(_assertThisInitialized(_this), \"releaseUpdateTimes\", _debounce(function () {\n      _this.updateTimes = 0;\n    }, 16));\n\n    _defineProperty(_assertThisInitialized(_this), \"needForceStopUpdate\", function () {\n      var needForceStopUpdate = _this.updateTimes > 64;\n\n      if (needForceStopUpdate) {\n        _this.errorTips();\n      }\n\n      _this.updateTimes++;\n\n      _this.releaseUpdateTimes();\n\n      return needForceStopUpdate;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"isKeepAlive\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"cached\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"inject\", function () {\n      var didActivate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var _this$props = _this.props,\n          id = _this$props.id,\n          saveScrollPosition = _this$props.saveScrollPosition,\n          _helpers = _this$props._helpers;\n\n      var cache = _helpers.getCache(id); // DOM 操作有风险，try catch 护体\n\n\n      try {\n        // // 原计划不增加额外的节点，直接将 Keeper 中所有内容节点一一迁移\n        // // 后发现缺乏统一 react 认可的外层包裹，可能会造成 react dom 操作的错误\n        // // 且将导致 KeepAlive 进行 update 时需先恢复各 dom 节点的组件归属，成本过高\n        // // 故此处增加统一的 div 外层，Keeper 中与 KeepAlive 中各一个且外层不做移除处理\n        // this.parentNode = this.placeholder.parentNode\n        // cache.nodes.forEach(node => {\n        //   this.parentNode.insertBefore(node, this.placeholder)\n        // })\n        // this.parentNode.removeChild(this.placeholder)\n        // 将 AliveScopeProvider 中的渲染内容通过 dom 操作置回当前 KeepAlive\n        cache.nodes.forEach(function (node) {\n          _this.placeholder.appendChild(node);\n        });\n\n        if (didActivate && saveScrollPosition) {\n          // 恢复该节点下各可滚动元素的滚动位置\n          _run(cache.revertScrollPos);\n        }\n      } catch (error) {// console.error(error)\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"eject\", function () {\n      var willUnactivate = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      var _this$props2 = _this.props,\n          id = _this$props2.id,\n          _helpers = _this$props2._helpers;\n\n      var cache = _helpers.getCache(id);\n\n      var nodesNeedToSaveScrollPosition = _flatten(_flatten([_this.props.saveScrollPosition]).map(function (flag) {\n        if (flag === true) {\n          return cache.nodes;\n        }\n\n        if (flag === 'screen') {\n          return [screenScrollingElement, body];\n        }\n\n        return _toConsumableArray(_value(_run(_globalThis, 'document.querySelectorAll', flag), []));\n      })).filter(Boolean); // DOM 操作有风险，try catch 护体\n\n\n      try {\n        if (willUnactivate && nodesNeedToSaveScrollPosition.length > 0) {\n          // 保存该节点下各可滚动元素的滚动位置\n          cache.revertScrollPos = saveScrollPosition(nodesNeedToSaveScrollPosition);\n        } // // 原计划不增加额外的节点，直接将 Keeper 中所有内容节点一一迁移\n        // // 后发现缺乏统一 react 认可的外层包裹，可能会造成 react dom 操作的错误\n        // // 且将导致 KeepAlive 进行 update 时需先恢复各 dom 节点的组件归属，成本过高\n        // // 故此处增加统一的 div 外层，Keeper 中与 KeepAlive 中各一个且外层不做移除处理\n        // this.parentNode.insertBefore(this.placeholder, cache.nodes[0])\n        // cache.nodes.forEach(node => {\n        //   if (willUnactivate) {\n        //     this.parentNode.removeChild(node)\n        //   } else {\n        //     cache.wrapper.appendChild(node)\n        //   }\n        // })\n        // this.parentNode.insertBefore(this.placeholder, cache.nodes[0])\n        // 将 KeepAlive 中的节点恢复为原先的占位节点，保证卸载操作正常进行\n\n\n        cache.nodes.forEach(function (node) {\n          if (willUnactivate) {\n            _this.placeholder.removeChild(node);\n          } else {\n            cache.wrapper.appendChild(node);\n          }\n        });\n      } catch (error) {// console.error(error)\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"init\", function () {\n      var _this$props3 = _this.props,\n          _helpers = _this$props3._helpers,\n          id = _this$props3.id,\n          children = _this$props3.children,\n          rest = _objectWithoutProperties(_this$props3, [\"_helpers\", \"id\", \"children\"]); // 将 children 渲染至 AliveScopeProvider 中\n\n\n      _helpers.keep(id, _objectSpread2({\n        children: children,\n        getInstance: function getInstance() {\n          return _assertThisInitialized(_this);\n        }\n      }, rest)).then(function (cache) {\n        // fix #22\n        if (!cache) {\n          return;\n        }\n\n        _this.inject(); // 触发 didActivate 生命周期\n\n\n        if (cache.inited) {\n          _run(_assertThisInitialized(_this), LIFECYCLE_ACTIVATE);\n        } else {\n          cache.inited = true;\n        }\n\n        _this.cached = false;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function () {\n      var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _helpers = _ref._helpers,\n          id = _ref.id,\n          name = _ref.name,\n          rest = _objectWithoutProperties(_ref, [\"_helpers\", \"id\", \"name\"]);\n\n      if (!_helpers || _this.cached || _this.needForceStopUpdate(name)) {\n        return;\n      } // // 原先打算更新过程中先重置 dom 节点状态，更新后恢复 dom 节点\n      // // 但考虑到性能消耗可能过大，且可能因 dom 操作时机引发其他 react 渲染问题，故不使用\n      // // 对应 Keeper 处 componentDidUpdate 也注释起来不使用\n      // this.eject(false)\n\n\n      _helpers.update(id, _objectSpread2({\n        name: name,\n        getInstance: function getInstance() {\n          return _assertThisInitialized(_this);\n        }\n      }, rest)); // this.inject(false)\n\n    });\n\n    _this.id = props.id;\n\n    _this.init() // 继承响应父级 KeepAlive 的生命周期\n    ;\n\n    [LIFECYCLE_ACTIVATE, LIFECYCLE_UNACTIVATE].forEach(function (lifecycleName) {\n      _this[lifecycleName] = function () {\n        var _this$props4 = _this.props,\n            id = _this$props4.id,\n            _helpers = _this$props4._helpers;\n\n        var cache = _helpers.getCache(id);\n\n        var node = _helpers.getNode(id);\n\n        if (node && lifecycleName == LIFECYCLE_ACTIVATE) {\n          node.updateTime = Date.now();\n        }\n\n        var cached = lifecycleName === LIFECYCLE_UNACTIVATE; // 若组件即将卸载则不再触发缓存生命周期\n\n        if (!cache || cache.willDrop) {\n          // 若组件在父 KeepAlive 缓存期间被卸载，后续恢复后需重新触发 init\n          if (_this.cached && !cached) {\n            _this.init();\n          }\n\n          return;\n        }\n\n        _run(cache, lifecycleName);\n\n        cache.cached = cached;\n        _this.cached = cached;\n      };\n    });\n    return _this;\n  } // DOM 操作将实际内容插入占位元素\n\n\n  _createClass(KeepAlive, [{\n    key: \"shouldComponentUpdate\",\n    // 利用 shouldComponentUpdate 提前触发组件更新\n    value: function shouldComponentUpdate(nextProps) {\n      this.update(nextProps);\n      return false;\n    } // 组件卸载时重置 dom 状态，保证 react dom 操作正常进行，并触发 unactivate 生命周期\n\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var _this$props5 = this.props,\n          id = _this$props5.id,\n          _helpers = _this$props5._helpers,\n          _this$props5$when = _this$props5.when,\n          calcWhen = _this$props5$when === void 0 ? true : _this$props5$when;\n\n      var cache = _helpers.getCache(id);\n\n      var _parseWhenResult = parseWhenResult(_run(calcWhen)),\n          _parseWhenResult2 = _slicedToArray(_parseWhenResult, 2),\n          when = _parseWhenResult2[0],\n          isScope = _parseWhenResult2[1];\n\n      if (!cache) {\n        return;\n      }\n\n      this.eject();\n      delete cache.getInstance;\n\n      if (!when) {\n        if (isScope) {\n          var needToDrop = [cache].concat(_toConsumableArray(_helpers.getScopeIds([id]).map(function (id) {\n            return _helpers.getCache(id);\n          })));\n          needToDrop.forEach(function (cache) {\n            cache.willDrop = true;\n          });\n\n          _nextTick(function () {\n            return _helpers.dropScopeByIds([id]);\n          });\n        } else {\n          cache.willDrop = true;\n\n          _nextTick(function () {\n            return _helpers.dropById(id);\n          });\n        }\n      } // 触发 willUnactivate 生命周期\n\n\n      _run(this, LIFECYCLE_UNACTIVATE);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React__default.createElement(\"div\", {\n        key: \"keep-alive-placeholder\",\n        className: \"ka-wrapper\",\n        ref: function ref(node) {\n          _this2.placeholder = node;\n        }\n      });\n    }\n  }]);\n\n  return KeepAlive;\n}(React.Component); // 兼容 SSR 服务端渲染\n\n\n_defineProperty(KeepAlive, \"defaultProps\", {\n  saveScrollPosition: true\n});\n\nfunction SSRKeepAlive(_ref2) {\n  var children = _ref2.children;\n  return React__default.createElement(\"div\", {\n    key: \"keep-alive-placeholder\",\n    className: \"ka-wrapper\"\n  }, React__default.createElement(\"div\", {\n    key: \"keeper-container\",\n    className: \"ka-content\"\n  }, children));\n}\n\nvar KeepAlive$1 = _isFunction(_get(_globalThis, 'document.getElementById')) ? expandKeepAlive(withActivation(KeepAlive)) : SSRKeepAlive;\nexports.AliveScope = AliveScope;\nexports.KeepAlive = KeepAlive$1;\nexports.NodeKey = NodeKey;\nexports.createContext = createContext;\nexports.default = KeepAlive$1;\nexports.fixContext = fixContext;\nexports.useActivate = useActivate;\nexports.useAliveController = useAliveController;\nexports.useUnactivate = useUnactivate;\nexports.withActivation = withActivation;\nexports.withAliveScope = withAliveScope;","map":{"version":3,"sources":["../src/helpers/is/index.js","../src/core/context.js","../src/core/Bridge/Context.js","../src/core/Bridge/Suspense.js","../src/core/Bridge/ErrorBoundary.js","../src/core/Bridge/index.js","../src/core/lifecycles.js","../src/core/Keeper.js","../src/core/AliveScope.js","../src/core/withAliveScope.js","../src/helpers/saveScrollPosition.js","../src/core/KeepAlive.js"],"names":["isRegExp","val","aliveScopeContext","createContext","Provider","AliveScopeProvider","Consumer","AliveScopeConsumer","aliveNodeContext","AliveNodeProvider","AliveNodeConsumer","fixedContext","updateListenerCache","ctx","createReactContext","fixContext","ProviderBridge","PureComponent","args","ctxValues","props","ctxValue","value","onUpdate","children","restValues","nextChildren","ConsumerWrapper","id","prevValue","shouldUpdate","fn","renderWrapper","renderContent","renderChildren","context$$","useContext","prevValueRef","useRef","updateListener","useEffect","ConsumerBridge","isSupported","lazy","Suspense","SusNotSupported","Lazy","FallbackListener","Component","sus$$","React","LazyBridge","suspense","onSuspenseStart","onSuspenseEnd","Fragment","ErrorBoundaryBridge","error","throwError","ErrorThrower","bridgeProps","ctx$$","error$$","LIFECYCLE_ACTIVATE","LIFECYCLE_UNACTIVATE","withActivation","HOC","forwardedRef","attach","WrappedComponent","forwardRef","ForwardedRefHOC","hoistStatics","useActivation","ref","useActivate","useUnactivate","Keeper","rest","key","Math","store","listeners","node","aliveNodesId","inited","cached","wrapper","nodes","keepers","cache","listener","HANDLE_TYPE_DROP","HANDLE_TYPE_REFRESH","AliveScope","keeper","isNew","now","Date","createTime","updateTime","params","resolve","name","getCachingNodesId","type","willRefreshKeepers","willDropNodes","nodesId","canRefresh","canDrop","Promise","dropSuccessfully","refreshSuccessfully","Boolean","keep","update","drop","dropScope","dropById","dropScopeByIds","refresh","refreshScope","refreshById","refreshScopeByIds","getScopeIds","clear","getCache","getNode","getCachingNodes","display","controller","expandKeepAlive","idPrefix","helpers","isOutsideAliveScope","console","HookExpand","WithExpand","withAliveScope","HookScope","controllerCherryPick","WithScope","HOCWithAliveScope","useAliveController","from","saver","x","y","scrollTop","body","screenScrollingElement","getErrorTips","parseWhenResult","KeepAlive","saveScrollPosition","needForceStopUpdate","_helpers","lifecycleName","didActivate","willUnactivate","nodesNeedToSaveScrollPosition","flag","getInstance","nextProps","calcWhen","when","isScope","needToDrop"],"mappings":"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","sourcesContent":["// 值类型判断 +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\nexport const isRegExp = (val) => val instanceof RegExp\n// 值类型判断 -------------------------------------------------------------\n","import createContext from 'create-react-context'\n\n// 整个 KeepAlive 功能的上下文，将 KeepAlive 的组件藏于其 Provider 中，保证其不会被卸载\nexport const aliveScopeContext = createContext()\nexport const {\n  Provider: AliveScopeProvider,\n  Consumer: AliveScopeConsumer,\n} = aliveScopeContext\n\n// KeepAlive 组件的上下文，实现缓存生命周期功能\nexport const aliveNodeContext = createContext()\nexport const {\n  Provider: AliveNodeProvider,\n  Consumer: AliveNodeConsumer,\n} = aliveNodeContext\n","/**\n * 本文件用于修复 KeepAlive 转移 children 后的自定义上下文丢失问题\n * 问题及方案最初的探讨可参考以下\n * https://github.com/StructureBuilder/react-keep-alive/issues/36\n */\nimport React, { PureComponent, useContext, useRef, useEffect } from 'react'\nimport createReactContext from 'create-react-context'\nimport { run, get, nextTick, isUndefined, isFunction } from 'szfe-tools'\n\nconst fixedContext = []\nconst updateListenerCache = new Map()\n\nexport function fixContext(ctx) {\n  fixedContext.push(ctx)\n}\n\nexport const createContext = (...args) => {\n  const ctx = createReactContext(...args)\n\n  fixContext(ctx)\n  return ctx\n}\n\n// 递归重建上下文 Provider\nexport class ProviderBridge extends PureComponent {\n  unmount = null\n  constructor(props, ...args) {\n    super(props, ...args)\n\n    const { value: ctxValues } = props\n\n    if (ctxValues.length === 0) {\n      this.state = {\n        ctxValue: null,\n      }\n\n      return\n    }\n\n    const [{ ctx, value, onUpdate }] = ctxValues\n\n    this.state = {\n      ctxValue: value,\n    }\n\n    this.unmount = onUpdate((value) => {\n      this.setState({\n        ctxValue: value,\n      })\n    })\n  }\n\n  componentWillUnmount() {\n    run(this.unmount)\n  }\n\n  // componentDidCatch(error) {\n  //   console.error('ProviderBridge Error', error)\n  // }\n\n  render() {\n    const { value: ctxValues, children } = this.props\n\n    if (ctxValues.length === 0) {\n      return children\n    }\n\n    const { ctxValue } = this.state\n    const [{ ctx }, ...restValues] = ctxValues\n    const { Provider } = ctx\n\n    const nextChildren = !isUndefined(ctxValue) ? (\n      <Provider value={ctxValue}>{children}</Provider>\n    ) : (\n      children\n    )\n\n    // 递归 ProviderBridge 修复多个上下文\n    // 此处未考虑待修复上下文顺序问题，按先来后到顺序处理，但理论上不应存在顺序问题\n    return restValues.length > 0 ? (\n      <ProviderBridge value={restValues}>{nextChildren}</ProviderBridge>\n    ) : (\n      nextChildren\n    )\n  }\n}\n\n// 在 KeepAlive 位置使用待修复上下文的 Consumer 探测可能存在的上下文关系\n// 若成功捕获上下文则保存其内容，用以后续 Keeper 中上下文的重建\nclass ConsumerWrapper extends PureComponent {\n  updateListener = null\n  ctxInfo = null\n  constructor(props, ...args) {\n    super(props, ...args)\n\n    const { value, ctx, id } = props\n    if (isUndefined(value)) {\n      return\n    }\n\n    // 因 Consumer 探测器存在于 KeepAlive 外层故会随着 KeepAlive 卸载\n    // componentWillUnmount 中保留了已生成的更新监听器\n    // 此处重新挂载后恢复与对应 Keeper 中 ProviderBridge 的联系\n    this.updateListener = get(updateListenerCache.get(ctx), id, new Map())\n    this.ctxInfo = {\n      ctx,\n      value,\n      // 注册上下文更新的监听，保证上下文更新时 Keeper 中 ProviderBridge 内容的同步\n      onUpdate: (updator) => {\n        this.updateListener.set(updator, updator)\n\n        // 返回更新监听器的注销方法\n        return () => this.updateListener.delete(updator)\n      },\n    }\n  }\n\n  componentWillUnmount() {\n    const { value, ctx, id } = this.props\n    if (isUndefined(value)) {\n      return\n    }\n\n    // 因 Consumer 探测器存在于 KeepAlive 外层故会随着 KeepAlive 卸载\n    // 此处保留其中已生成的更新监听器，用以在重新挂载后保持与对应 Keeper 中 ProviderBridge 的联系\n    updateListenerCache.set(ctx, {\n      ...get(updateListenerCache.get(ctx), undefined, {}),\n      [id]: this.updateListener,\n    })\n  }\n\n  // 利用 shouldComponentUpdate 尽早将上下文更新的咨询通知到对应 Keeper 中 ProviderBridge\n  // TODO: 改用 componentWillReceiveProps 更早地进行更新，需注意与 getDerivedStateFromProps 新生命周期的兼容及可能存在的死循环问题\n  shouldComponentUpdate({ value }) {\n    const { prevValue } = this.props\n    const shouldUpdate = prevValue !== value\n\n    if (shouldUpdate) {\n      run(this.updateListener, 'forEach', (fn) => fn(value))\n    }\n\n    return shouldUpdate\n  }\n\n  render() {\n    const { value, renderWrapper, renderContent, id } = this.props\n\n    return renderWrapper((ctx$$) =>\n      renderContent(isUndefined(value) ? ctx$$ : [...ctx$$, this.ctxInfo])\n    )\n  }\n}\n\n// 对 ConsumerWrapper 的递归结构，会在 devtool 中生成较深的嵌套结构，可用 hooks 消除嵌套结构\nfunction RecursiveConsumerBridge({ children: renderChildren, id }) {\n  const renderWrapper = fixedContext.reduce(\n    (render, ctx) => {\n      const { Consumer } = ctx\n\n      const renderWrapper = (renderContent) => (\n        <Consumer>\n          {(value) => (\n            <ConsumerWrapper\n              {...{\n                value,\n                ctx,\n                renderWrapper: render,\n                renderContent,\n                id,\n              }}\n            />\n          )}\n        </Consumer>\n      )\n\n      return renderWrapper\n    },\n    (renderContent) => renderContent([])\n  )\n\n  return renderWrapper(renderChildren)\n}\n\n// 若支持 Hooks，就不需要递归了，相关实现解释可参考 ConsumerWrapper\nfunction HooksConsumerBridge({ children: renderChildren, id }) {\n  const context$$ = fixedContext\n    .map((ctx) => {\n      const value = useContext(ctx)\n      const prevValueRef = useRef(value)\n      const { current: updateListener } = useRef(\n        get(updateListenerCache.get(ctx), id, new Map())\n      )\n\n      // 尽可能早地进行更新\n      if (prevValueRef.current !== value) {\n        nextTick(() => run(updateListener, 'forEach', (fn) => fn(value)))\n      }\n      prevValueRef.current = value\n\n      useEffect(() => {\n        return () => {\n          if (isUndefined(value)) {\n            return\n          }\n\n          updateListenerCache.set(ctx, {\n            ...get(updateListenerCache.get(ctx), undefined, {}),\n            [id]: updateListener,\n          })\n        }\n      }, [])\n\n      return {\n        ctx,\n        value,\n        onUpdate: (fn) => {\n          updateListener.set(fn, fn)\n\n          return () => updateListener.delete(fn)\n        },\n      }\n    })\n    .filter(({ value }) => !isUndefined(value))\n\n  return renderChildren(context$$)\n}\n\nexport const ConsumerBridge = [useContext, useRef, useEffect].every(isFunction)\n  ? HooksConsumerBridge\n  : RecursiveConsumerBridge\n","import React, { lazy, Suspense, Component, Fragment } from 'react'\nimport { run, isUndefined, isFunction } from 'szfe-tools'\n\n// 兼容性检测\nconst isSupported = isFunction(lazy) && !isUndefined(Suspense)\nconst SusNotSupported = ({ children }) => run(children)\n\nconst Lazy = isSupported ? lazy(() => new Promise(() => null)) : () => null\n\nclass FallbackListener extends Component {\n  componentDidMount() {\n    run(this.props, 'onStart')\n  }\n\n  componentWillUnmount() {\n    run(this.props, 'onEnd')\n  }\n\n  render() {\n    return null\n  }\n}\n\nfunction SuspenseBridge({ children, sus$$ }) {\n  return (\n    // 捕获 Keeper 内部可能存在的 lazy，并触发对应 KeepAlive 位置上的 LazyBridge\n    <Suspense\n      fallback={\n        <FallbackListener\n          onStart={sus$$.onSuspenseStart}\n          onEnd={sus$$.onSuspenseEnd}\n        />\n      }\n    >\n      {children}\n    </Suspense>\n  )\n}\n\nexport const LazyBridge = isSupported\n  ? class LazyBridge extends Component {\n      state = {\n        suspense: false,\n      }\n\n      onSuspenseStart = () => {\n        this.setState({\n          suspense: true,\n        })\n      }\n\n      onSuspenseEnd = () => {\n        this.setState({\n          suspense: false,\n        })\n      }\n\n      sus$$ = {\n        onSuspenseStart: this.onSuspenseStart,\n        onSuspenseEnd: this.onSuspenseEnd,\n      }\n\n      render() {\n        const { children } = this.props\n\n        return (\n          <Fragment>\n            {run(children, undefined, this.sus$$)}\n            {/* 渲染 Lazy 以触发 KeepAlive 所处位置外部可能存在的 Suspense */}\n            {this.state.suspense && <Lazy />}\n          </Fragment>\n        )\n      }\n    }\n  : SusNotSupported\n\nexport default isSupported ? SuspenseBridge : SusNotSupported\n","import { Component } from 'react'\nimport { run } from 'szfe-tools'\n\nexport default class ErrorBoundaryBridge extends Component {\n  // Error Boundary 透传至对应 KeepAlive 实例位置\n  static getDerivedStateFromError = () => null\n  componentDidCatch(error) {\n    const { error$$: throwError } = this.props\n\n    run(throwError, undefined, error, () => {\n      run(throwError, undefined, null)\n    })\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport class ErrorThrower extends Component {\n  state = {\n    error: null,\n  }\n\n  throwError = (error, cb) => this.setState({ error }, cb)\n  render() {\n    if (this.state.error) {\n      throw this.state.error\n    }\n\n    return run(this.props.children, undefined, this.throwError)\n  }\n}\n","import React from 'react'\nimport { run } from 'szfe-tools'\n\nimport { ProviderBridge, ConsumerBridge } from './Context'\nimport SuspenseBridge, { LazyBridge } from './Suspense'\nimport ErrorBoundaryBridge, { ErrorThrower } from './ErrorBoundary'\n\n// 用于 Keeper 中，实现 Keeper 向外或向内的桥接代理\nexport default function Bridge({ id, children, bridgeProps }) {\n  const { sus$$, ctx$$, error$$ } = bridgeProps\n\n  return (\n    /* 由内向外透传 componentDidCatch 捕获的 error */\n    <ErrorBoundaryBridge error$$={error$$}>\n      {/* 由内向外透传 lazy 行为 */}\n      <SuspenseBridge sus$$={sus$$}>\n        {/* 由外向内透传可能存在的 Consumer 数据 */}\n        <ProviderBridge id={id} value={ctx$$}>\n          {children}\n        </ProviderBridge>\n      </SuspenseBridge>\n    </ErrorBoundaryBridge>\n  )\n}\n\n// 用于 KeepAlive 中，实现 KeepAlive 向外或向内的桥接代理\nexport function Acceptor({ id, children }) {\n  return (\n    /* 由内向外透传 componentDidCatch 捕获的 error */\n    <ErrorThrower>\n      {(error$$) => (\n        /* 由内向外透传 lazy 行为 */\n        <LazyBridge>\n          {(sus$$) => (\n            /* 由外向内透传可能被捕获的 Provider 数据 */\n            <ConsumerBridge id={id}>\n              {(ctx$$) =>\n                run(children, undefined, {\n                  bridgeProps: {\n                    sus$$,\n                    ctx$$,\n                    error$$,\n                  },\n                })\n              }\n            </ConsumerBridge>\n          )}\n        </LazyBridge>\n      )}\n    </ErrorThrower>\n  )\n}\n","import React, {\n  Component,\n  forwardRef,\n  useEffect,\n  useRef,\n  useContext,\n} from 'react'\nimport hoistStatics from 'hoist-non-react-statics'\nimport {\n  get,\n  run,\n  nextTick,\n  isObject,\n  isFunction,\n  isUndefined,\n} from 'szfe-tools'\n\nimport { AliveNodeConsumer, aliveNodeContext } from './context'\n\nexport const LIFECYCLE_ACTIVATE = 'componentDidActivate'\nexport const LIFECYCLE_UNACTIVATE = 'componentWillUnactivate'\n\nexport const withActivation = (WrappedComponent) => {\n  class HOC extends Component {\n    drop = null\n\n    componentWillUnmount() {\n      run(this.drop)\n    }\n\n    render() {\n      const { forwardedRef, ...props } = this.props\n\n      return (\n        <AliveNodeConsumer>\n          {({ attach } = {}) => (\n            <WrappedComponent\n              ref={(ref) => {\n                if (\n                  [LIFECYCLE_ACTIVATE, LIFECYCLE_UNACTIVATE].every(\n                    (lifecycleName) => !isFunction(get(ref, lifecycleName))\n                  )\n                ) {\n                  return\n                }\n                this.drop = run(attach, undefined, ref)\n\n                // 以下保持 ref 功能\n                if (isUndefined(forwardedRef)) {\n                  return\n                }\n\n                if (isObject(forwardedRef) && 'current' in forwardedRef) {\n                  forwardedRef.current = ref\n                  return\n                }\n\n                run(forwardedRef, undefined, ref)\n              }}\n              {...props}\n            />\n          )}\n        </AliveNodeConsumer>\n      )\n    }\n  }\n\n  // 由于 KeepAlive 内组件渲染与实际内容落后一个节拍\n  // 将导致真实节点的 componentDidMount 无法及时获取到 KeepAlive 中内容的 ref 值\n  // 此处对使用了 withActivation HOC 的组件 componentDidMount 做 nextTick 延时处理\n  // 修复上述问题\n\n  if (isFunction(WrappedComponent.prototype.componentDidMount)) {\n    WrappedComponent.prototype._componentDidMount =\n      WrappedComponent.prototype.componentDidMount\n    WrappedComponent.prototype.componentDidMount = function componentDidMount() {\n      nextTick(() => WrappedComponent.prototype._componentDidMount.call(this))\n    }\n  }\n\n  if (isFunction(forwardRef)) {\n    const ForwardedRefHOC = forwardRef((props, ref) => (\n      <HOC {...props} forwardedRef={ref} />\n    ))\n\n    return hoistStatics(ForwardedRefHOC, WrappedComponent)\n  } else {\n    return hoistStatics(HOC, WrappedComponent)\n  }\n}\n\nconst useActivation = (funcName, func) => {\n  // 兼容性判断\n  if ([useRef, useContext, useEffect].some((fn) => !isFunction(fn))) {\n    return\n  }\n\n  const ctxValue = useContext(aliveNodeContext)\n\n  // 未处于 KeepAlive 中\n  if (!ctxValue) {\n    return\n  }\n\n  const { current: ref } = useRef({})\n  const { attach } = ctxValue\n\n  ref[funcName] = func\n  ref.drop = attach(ref)\n\n  useEffect(() => {\n    return () => run(ref.drop)\n  }, [])\n}\n\nexport const useActivate = useActivation.bind(null, LIFECYCLE_ACTIVATE)\nexport const useUnactivate = useActivation.bind(null, LIFECYCLE_UNACTIVATE)\n","import React, { PureComponent } from 'react'\nimport { get, run, nextTick } from 'szfe-tools'\n\nimport Bridge from './Bridge'\nimport { AliveNodeProvider } from './context'\nimport { LIFECYCLE_ACTIVATE, LIFECYCLE_UNACTIVATE } from './lifecycles'\n\nexport default class Keeper extends PureComponent {\n  listeners = new Map()\n  wrapper = null\n\n  constructor(props, ...rest) {\n    super(props, ...rest)\n\n    this.state = {\n      children: props.children,\n      bridgeProps: props.bridgeProps,\n      key: Math.random(),\n    }\n  }\n\n  componentDidMount() {\n    const { store, id } = this.props\n    const listeners = this.listeners\n    const node = this.wrapper\n\n    // 已存在检测，防止意外现象\n    if (store.has(id)) {\n      return\n    }\n\n    store.set(id, {\n      listeners,\n      aliveNodesId: [],\n      inited: false,\n      cached: false,\n      wrapper: node,\n      nodes: [...node.children],\n      [LIFECYCLE_ACTIVATE]: () => this[LIFECYCLE_ACTIVATE](),\n      [LIFECYCLE_UNACTIVATE]: () => this[LIFECYCLE_UNACTIVATE](),\n    })\n  }\n\n  componentWillUnmount() {\n    const { store, keepers, id } = this.props\n    // 卸载前尝试归位 DOM 节点\n    try {\n      const cache = store.get(id)\n      cache.nodes.forEach((node) => {\n        cache.wrapper.appendChild(node)\n      })\n    } catch (error) {\n      // console.error(error) // do nothing\n    }\n    store.delete(id)\n    keepers.delete(id)\n  }\n\n  [LIFECYCLE_ACTIVATE]() {\n    this.listeners.forEach((listener) => run(listener, [LIFECYCLE_ACTIVATE]))\n  }\n\n  [LIFECYCLE_UNACTIVATE]() {\n    const listeners = [...this.listeners]\n\n    listeners\n      .reverse()\n      .forEach(([, listener]) => run(listener, [LIFECYCLE_UNACTIVATE]))\n  }\n\n  // // 原先打算更新过程中先重置 dom 节点状态，更新后恢复 dom 节点\n  // // 但考虑到性能消耗可能过大，且可能因 dom 操作时机引发其他 react 渲染问题，故不使用\n  // // 对应 KeepAlive 处 update 也注释起来不使用\n  // // 组件更新后，更新 DOM 节点列表状态\n  // componentDidUpdate() {\n  //   const { store, id } = this.props\n  //   const node = this.wrapper\n  //   if (get(node, 'children.length') > 0) {\n  //     store[id].nodes = [...node.children]\n  //   }\n\n  //   console.log(store[id].nodes)\n  // }\n\n  // 生命周期绑定\n  attach = (ref) => {\n    const listeners = this.listeners\n\n    if (!ref) {\n      return () => null\n    }\n\n    if (ref.isKeepAlive) {\n      nextTick(() => {\n        const { id, store } = this.props\n        const cache = store.get(id)\n        cache.aliveNodesId = new Set([...cache.aliveNodesId, ref.id])\n      })\n    }\n\n    listeners.set(ref, {\n      [LIFECYCLE_ACTIVATE]: () => run(ref, LIFECYCLE_ACTIVATE),\n      [LIFECYCLE_UNACTIVATE]: () => run(ref, LIFECYCLE_UNACTIVATE),\n    })\n\n    // 返回 listenerRemover 用以在对应组件卸载时解除监听\n    return () => {\n      listeners.delete(ref)\n    }\n  }\n\n  // 静态化节点上下文内容，防止重复渲染\n  contextValue = {\n    id: this.props.id,\n    attach: this.attach,\n  }\n\n  refresh = (cb) =>\n    this.setState(\n      {\n        key: Math.random(),\n      },\n      cb\n    )\n\n  render() {\n    const { id, ...props } = this.props\n    const { children, bridgeProps, key } = this.state\n\n    return (\n      <div\n        ref={(node) => {\n          this.wrapper = node\n        }}\n      >\n        <div key=\"keeper-container\" nodeKeyIgnore className=\"ka-content\">\n          <Bridge id={id} bridgeProps={bridgeProps}>\n            <AliveNodeProvider value={this.contextValue}>\n              {React.cloneElement(children, {\n                key: `${children.key}:${key}`,\n              })}\n            </AliveNodeProvider>\n          </Bridge>\n        </div>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { get, flatten } from 'szfe-tools'\n\nimport { isRegExp } from '../helpers/is'\nimport { AliveScopeProvider } from './context'\nimport Keeper from './Keeper'\n\nconst HANDLE_TYPE_DROP = 'drop'\nconst HANDLE_TYPE_REFRESH = 'refresh'\n\nexport default class AliveScope extends Component {\n  store = new Map()\n  nodes = new Map()\n  keepers = new Map()\n\n  update = (id, params) =>\n    new Promise((resolve) => {\n      const keeper = this.keepers.get(id)\n      const isNew = !keeper\n      const now = Date.now()\n      const node = this.nodes.get(id) || null\n      this.nodes.set(id, {\n        id,\n        createTime: now,\n        updateTime: now,\n        ...node,\n        ...params,\n      })\n\n      if (isNew) {\n        this.helpers = { ...this.helpers }\n\n        this.forceUpdate(resolve)\n      } else {\n        const { children, bridgeProps } = params\n        keeper.setState({ children, bridgeProps }, resolve)\n      }\n    })\n\n  keep = (id, params) =>\n    new Promise((resolve) => {\n      this.update(id, {\n        id,\n        ...params,\n      }).then(() => {\n        resolve(this.store.get(id))\n      })\n    })\n\n  getCachingNodesByName = (name) =>\n    this.getCachingNodes().filter((node) =>\n      isRegExp(name) ? name.test(node.name) : node.name === name\n    )\n\n  getScopeIds = (ids) => {\n    // 递归采集 scope alive nodes id\n    const getCachingNodesId = (id) => {\n      const aliveNodesId = get(this.getCache(id), 'aliveNodesId', [])\n\n      if (aliveNodesId.size > 0) {\n        return [id, [...aliveNodesId].map(getCachingNodesId)]\n      }\n\n      return [id, ...aliveNodesId]\n    }\n\n    return flatten(ids.map((id) => getCachingNodesId(id)))\n  }\n\n  dropById = (id) => this.handleNodes([id], HANDLE_TYPE_DROP)\n  dropScopeByIds = (ids) =>\n    this.handleNodes(this.getScopeIds(ids), HANDLE_TYPE_DROP)\n\n  drop = (name) =>\n    this.handleNodes(\n      this.getCachingNodesByName(name).map((node) => node.id),\n      HANDLE_TYPE_DROP\n    )\n\n  dropScope = (name) =>\n    this.dropScopeByIds(this.getCachingNodesByName(name).map(({ id }) => id))\n\n  refreshById = (id) => this.handleNodes([id], HANDLE_TYPE_REFRESH)\n  refreshScopeByIds = (ids) =>\n    this.handleNodes(this.getScopeIds(ids), HANDLE_TYPE_REFRESH)\n\n  refresh = (name) =>\n    this.handleNodes(\n      this.getCachingNodesByName(name).map((node) => node.id),\n      HANDLE_TYPE_REFRESH\n    )\n\n  refreshScope = (name) =>\n    this.refreshScopeByIds(this.getCachingNodesByName(name).map(({ id }) => id))\n\n  handleNodes = (nodesId, type = HANDLE_TYPE_DROP) =>\n    new Promise((resolve) => {\n      const willRefreshKeepers = []\n      const willDropNodes = []\n\n      nodesId.forEach((id) => {\n        const cache = this.store.get(id)\n\n        if (!cache) {\n          return\n        }\n\n        const canRefresh = type === HANDLE_TYPE_REFRESH && !get(cache, 'cached')\n        const canDrop =\n          (type === HANDLE_TYPE_DROP && get(cache, 'cached')) ||\n          get(cache, 'willDrop')\n\n        if (canDrop) {\n          // 用在多层 KeepAlive 同时触发 drop 时，避免触发深层 KeepAlive 节点的缓存生命周期\n          cache.willDrop = true\n          this.nodes.delete(id)\n          willDropNodes.push(id)\n        }\n\n        if (canRefresh) {\n          const keeper = this.keepers.get(id)\n          willRefreshKeepers.push(keeper)\n        }\n      })\n\n      Promise.all([\n        willDropNodes.length === 0\n          ? Promise.resolve(false)\n          : new Promise((resolve) => {\n              this.helpers = { ...this.helpers }\n              this.forceUpdate(() => resolve(true))\n            }),\n        willRefreshKeepers.length === 0\n          ? Promise.resolve(false)\n          : Promise.all(\n              willRefreshKeepers.map(\n                (keeper) => new Promise((resolve) => keeper.refresh(resolve))\n              )\n            ),\n      ]).then(([dropSuccessfully, refreshSuccessfully]) =>\n        resolve(Boolean(dropSuccessfully || refreshSuccessfully))\n      )\n    })\n\n  clear = () => this.handleNodes(this.getCachingNodes().map(({ id }) => id))\n\n  getCache = (id) => this.store.get(id)\n  getNode = (id) => this.nodes.get(id)\n  getCachingNodes = () => [...this.nodes.values()]\n\n  // 静态化节点上下文内容，防止重复渲染\n  helpers = {\n    keep: this.keep,\n    update: this.update,\n    drop: this.drop,\n    dropScope: this.dropScope,\n    dropById: this.dropById,\n    dropScopeByIds: this.dropScopeByIds,\n    refresh: this.refresh,\n    refreshScope: this.refreshScope,\n    refreshById: this.refreshById,\n    refreshScopeByIds: this.refreshScopeByIds,\n    getScopeIds: this.getScopeIds,\n    clear: this.clear,\n    getCache: this.getCache,\n    getNode: this.getNode,\n    getCachingNodes: this.getCachingNodes,\n  }\n\n  render() {\n    const { children } = this.props\n\n    return (\n      <AliveScopeProvider value={this.helpers}>\n        {children}\n        <div style={{ display: 'none' }}>\n          {[...this.nodes.values()].map(({ children, ...props }) => (\n            <Keeper\n              key={props.id}\n              {...props}\n              store={this.store}\n              keepers={this.keepers}\n              ref={(keeper) => {\n                this.keepers.set(props.id, keeper)\n              }}\n            >\n              {children}\n            </Keeper>\n          ))}\n        </div>\n      </AliveScopeProvider>\n    )\n  }\n}\n","import React, { forwardRef, useContext } from 'react'\nimport hoistStatics from 'hoist-non-react-statics'\nimport { get, isFunction, isUndefined } from 'szfe-tools'\n\nimport { Acceptor } from './Bridge'\nimport NodeKey from './NodeKey'\nimport { AliveScopeConsumer, aliveScopeContext } from './context'\n\nfunction controllerCherryPick(controller) {\n  const {\n    drop,\n    dropScope,\n    refresh,\n    refreshScope,\n    clear,\n    getCachingNodes,\n  } = controller\n  return { drop, dropScope, refresh, refreshScope, clear, getCachingNodes }\n}\n\nexport const expandKeepAlive = (KeepAlive) => {\n  const renderContent = ({ idPrefix, helpers, props }) => {\n    const isOutsideAliveScope = isUndefined(helpers)\n\n    if (isOutsideAliveScope) {\n      console.error('You should not use <KeepAlive /> outside a <AliveScope>')\n    }\n\n    return isOutsideAliveScope ? (\n      get(props, 'children', null)\n    ) : (\n      <NodeKey prefix={idPrefix} key={props._nk}>\n        {(id) => (\n          <Acceptor id={id}>\n            {(bridgeProps) => (\n              <KeepAlive\n                key={id}\n                {...props}\n                {...bridgeProps}\n                id={id}\n                _helpers={helpers}\n              />\n            )}\n          </Acceptor>\n        )}\n      </NodeKey>\n    )\n  }\n  const HookExpand = ({ id: idPrefix, ...props }) =>\n    renderContent({ idPrefix, helpers: useContext(aliveScopeContext), props })\n\n  const WithExpand = ({ id: idPrefix, ...props }) => (\n    <AliveScopeConsumer>\n      {(helpers) => renderContent({ idPrefix, helpers, props })}\n    </AliveScopeConsumer>\n  )\n\n  return isFunction(useContext) ? HookExpand : WithExpand\n}\n\nconst withAliveScope = (WrappedComponent) => {\n  const renderContent = ({ helpers, props, forwardedRef }) => (\n    <WrappedComponent {...props} {...helpers} ref={forwardedRef} />\n  )\n\n  const HookScope = ({ forwardedRef, ...props }) =>\n    renderContent({\n      helpers: controllerCherryPick(useContext(aliveScopeContext) || {}),\n      props,\n      forwardedRef,\n    })\n\n  const WithScope = ({ forwardedRef, ...props }) => (\n    <AliveScopeConsumer>\n      {(controller = {}) =>\n        renderContent({\n          helpers: controllerCherryPick(controller),\n          props,\n          forwardedRef,\n        })\n      }\n    </AliveScopeConsumer>\n  )\n\n  const HOCWithAliveScope = isFunction(useContext) ? HookScope : WithScope\n\n  if (isFunction(forwardRef)) {\n    const ForwardedRefHOC = forwardRef((props, ref) => (\n      <HOCWithAliveScope {...props} forwardedRef={ref} />\n    ))\n\n    return hoistStatics(ForwardedRefHOC, WrappedComponent)\n  } else {\n    return hoistStatics(HOCWithAliveScope, WrappedComponent)\n  }\n}\n\nexport const useAliveController = () => {\n  if (!isFunction(useContext)) {\n    return {}\n  }\n\n  const ctxValue = useContext(aliveScopeContext)\n\n  if (!ctxValue) {\n    return {}\n  }\n\n  return controllerCherryPick(ctxValue)\n}\n\nexport default withAliveScope\n","import {\n  globalThis as root,\n  get,\n  run,\n  value,\n  isFunction,\n  isExist,\n  flatten,\n} from 'szfe-tools'\n\nfunction isScrollableNode(node = {}) {\n  if (!isExist(node)) {\n    return false\n  }\n\n  return (\n    node.scrollWidth > node.clientWidth || node.scrollHeight > node.clientHeight\n  )\n}\n\nfunction getScrollableNodes(from) {\n  if (!isFunction(get(root, 'document.querySelectorAll'))) {\n    return []\n  }\n\n  return [...value(run(from, 'querySelectorAll', '*'), []), from].filter(\n    isScrollableNode\n  )\n}\n\nexport default function saveScrollPosition(from) {\n  const nodes = [...new Set([...flatten(from.map(getScrollableNodes))])]\n\n  const saver = nodes.map((node) => [\n    node,\n    {\n      x: node.scrollLeft,\n      y: node.scrollTop,\n    },\n  ])\n\n  return function revert() {\n    saver.forEach(([node, { x, y }]) => {\n      node.scrollLeft = x\n      node.scrollTop = y\n    })\n  }\n}\n","import React, { Component } from 'react'\nimport {\n  value,\n  get,\n  run,\n  globalThis as root,\n  nextTick,\n  isFunction,\n  isArray,\n  debounce,\n  flatten,\n} from 'szfe-tools'\n\nimport { expandKeepAlive } from './withAliveScope'\nimport {\n  LIFECYCLE_ACTIVATE,\n  LIFECYCLE_UNACTIVATE,\n  withActivation,\n} from './lifecycles'\nimport saveScrollPosition from '../helpers/saveScrollPosition'\n\nconst body = get(root, 'document.body')\nconst screenScrollingElement = get(\n  root,\n  'document.scrollingElement',\n  get(root, 'document.documentElement', {})\n)\n\nconst getErrorTips = (name) =>\n  `<KeepAlive ${\n    name ? `name=\"${name}\" ` : ''\n  }/> Too many transient updates, may have encountered an infinite loop of updates, forced to pause the update\nThere are serious performance issues with the update results you are currently seeing\nMay encounter an implied bug, please don't use KeepAlive and contact the author to solve`\n\nconst parseWhenResult = (res) => {\n  if (isArray(res)) {\n    return res\n  }\n\n  return [res]\n}\n\nclass KeepAlive extends Component {\n  static defaultProps = {\n    saveScrollPosition: true,\n  }\n  // 本段为 KeepAlive 更新隐患检测，通过检测 KeepAlive 瞬时更新次数来判断是否进入死循环，并在 update 中强制阻止更新\n  updateTimes = 0\n  errorTips = debounce(() => {\n    const { name } = this.props\n    console.error(getErrorTips(name))\n  }, 100)\n  releaseUpdateTimes = debounce(() => {\n    this.updateTimes = 0\n  }, 16)\n  needForceStopUpdate = () => {\n    const needForceStopUpdate = this.updateTimes > 64\n\n    if (needForceStopUpdate) {\n      this.errorTips()\n    }\n\n    this.updateTimes++\n    this.releaseUpdateTimes()\n\n    return needForceStopUpdate\n  }\n\n  id = null // 用作 Keeper 识别 KeepAlive\n  isKeepAlive = true // 用作 Keeper 识别 KeepAlive\n  cached = false\n  constructor(props) {\n    super(props)\n    this.id = props.id\n    this.init()\n\n    // 继承响应父级 KeepAlive 的生命周期\n    ;[LIFECYCLE_ACTIVATE, LIFECYCLE_UNACTIVATE].forEach((lifecycleName) => {\n      this[lifecycleName] = () => {\n        const { id, _helpers } = this.props\n        const cache = _helpers.getCache(id)\n        const node = _helpers.getNode(id)\n        if (node && lifecycleName == LIFECYCLE_ACTIVATE) {\n          node.updateTime = Date.now()\n        }\n\n        const cached = lifecycleName === LIFECYCLE_UNACTIVATE\n\n        // 若组件即将卸载则不再触发缓存生命周期\n        if (!cache || cache.willDrop) {\n          // 若组件在父 KeepAlive 缓存期间被卸载，后续恢复后需重新触发 init\n          if (this.cached && !cached) {\n            this.init()\n          }\n          return\n        }\n\n        run(cache, lifecycleName)\n        cache.cached = cached\n        this.cached = cached\n      }\n    })\n  }\n\n  // DOM 操作将实际内容插入占位元素\n  inject = (didActivate = true) => {\n    const { id, saveScrollPosition, _helpers } = this.props\n    const cache = _helpers.getCache(id)\n    // DOM 操作有风险，try catch 护体\n    try {\n      // // 原计划不增加额外的节点，直接将 Keeper 中所有内容节点一一迁移\n      // // 后发现缺乏统一 react 认可的外层包裹，可能会造成 react dom 操作的错误\n      // // 且将导致 KeepAlive 进行 update 时需先恢复各 dom 节点的组件归属，成本过高\n      // // 故此处增加统一的 div 外层，Keeper 中与 KeepAlive 中各一个且外层不做移除处理\n      // this.parentNode = this.placeholder.parentNode\n      // cache.nodes.forEach(node => {\n      //   this.parentNode.insertBefore(node, this.placeholder)\n      // })\n      // this.parentNode.removeChild(this.placeholder)\n      // 将 AliveScopeProvider 中的渲染内容通过 dom 操作置回当前 KeepAlive\n      cache.nodes.forEach((node) => {\n        this.placeholder.appendChild(node)\n      })\n\n      if (didActivate && saveScrollPosition) {\n        // 恢复该节点下各可滚动元素的滚动位置\n        run(cache.revertScrollPos)\n      }\n    } catch (error) {\n      // console.error(error)\n    }\n  }\n\n  // DOM 操作将实际内容移出占位元素\n  eject = (willUnactivate = true) => {\n    const { id, _helpers } = this.props\n    const cache = _helpers.getCache(id)\n    const nodesNeedToSaveScrollPosition = flatten(\n      flatten([this.props.saveScrollPosition]).map((flag) => {\n        if (flag === true) {\n          return cache.nodes\n        }\n\n        if (flag === 'screen') {\n          return [screenScrollingElement, body]\n        }\n\n        return [...value(run(root, 'document.querySelectorAll', flag), [])]\n      })\n    ).filter(Boolean)\n\n    // DOM 操作有风险，try catch 护体\n    try {\n      if (willUnactivate && nodesNeedToSaveScrollPosition.length > 0) {\n        // 保存该节点下各可滚动元素的滚动位置\n        cache.revertScrollPos = saveScrollPosition(\n          nodesNeedToSaveScrollPosition\n        )\n      }\n\n      // // 原计划不增加额外的节点，直接将 Keeper 中所有内容节点一一迁移\n      // // 后发现缺乏统一 react 认可的外层包裹，可能会造成 react dom 操作的错误\n      // // 且将导致 KeepAlive 进行 update 时需先恢复各 dom 节点的组件归属，成本过高\n      // // 故此处增加统一的 div 外层，Keeper 中与 KeepAlive 中各一个且外层不做移除处理\n      // this.parentNode.insertBefore(this.placeholder, cache.nodes[0])\n      // cache.nodes.forEach(node => {\n      //   if (willUnactivate) {\n      //     this.parentNode.removeChild(node)\n      //   } else {\n      //     cache.wrapper.appendChild(node)\n      //   }\n      // })\n      // this.parentNode.insertBefore(this.placeholder, cache.nodes[0])\n      // 将 KeepAlive 中的节点恢复为原先的占位节点，保证卸载操作正常进行\n      cache.nodes.forEach((node) => {\n        if (willUnactivate) {\n          this.placeholder.removeChild(node)\n        } else {\n          cache.wrapper.appendChild(node)\n        }\n      })\n    } catch (error) {\n      // console.error(error)\n    }\n  }\n\n  init = () => {\n    const { _helpers, id, children, ...rest } = this.props\n\n    // 将 children 渲染至 AliveScopeProvider 中\n    _helpers\n      .keep(id, {\n        children,\n        getInstance: () => this,\n        ...rest,\n      })\n      .then((cache) => {\n        // fix #22\n        if (!cache) {\n          return\n        }\n\n        this.inject()\n\n        // 触发 didActivate 生命周期\n        if (cache.inited) {\n          run(this, LIFECYCLE_ACTIVATE)\n        } else {\n          cache.inited = true\n        }\n        this.cached = false\n      })\n  }\n\n  update = ({ _helpers, id, name, ...rest } = {}) => {\n    if (!_helpers || this.cached || this.needForceStopUpdate(name)) {\n      return\n    }\n\n    // // 原先打算更新过程中先重置 dom 节点状态，更新后恢复 dom 节点\n    // // 但考虑到性能消耗可能过大，且可能因 dom 操作时机引发其他 react 渲染问题，故不使用\n    // // 对应 Keeper 处 componentDidUpdate 也注释起来不使用\n    // this.eject(false)\n    _helpers.update(id, {\n      name,\n      getInstance: () => this,\n      ...rest,\n    })\n    // this.inject(false)\n  }\n\n  // 利用 shouldComponentUpdate 提前触发组件更新\n  shouldComponentUpdate(nextProps) {\n    this.update(nextProps)\n\n    return false\n  }\n\n  // 组件卸载时重置 dom 状态，保证 react dom 操作正常进行，并触发 unactivate 生命周期\n  componentWillUnmount() {\n    const { id, _helpers, when: calcWhen = true } = this.props\n    const cache = _helpers.getCache(id)\n    const [when, isScope] = parseWhenResult(run(calcWhen))\n\n    if (!cache) {\n      return\n    }\n\n    this.eject()\n    delete cache.getInstance\n\n    if (!when) {\n      if (isScope) {\n        const needToDrop = [\n          cache,\n          ..._helpers.getScopeIds([id]).map((id) => _helpers.getCache(id)),\n        ]\n\n        needToDrop.forEach((cache) => {\n          cache.willDrop = true\n        })\n        nextTick(() => _helpers.dropScopeByIds([id]))\n      } else {\n        cache.willDrop = true\n        nextTick(() => _helpers.dropById(id))\n      }\n    }\n\n    // 触发 willUnactivate 生命周期\n    run(this, LIFECYCLE_UNACTIVATE)\n  }\n\n  render() {\n    return (\n      <div\n        key=\"keep-alive-placeholder\"\n        nodeKeyIgnore\n        className=\"ka-wrapper\"\n        ref={(node) => {\n          this.placeholder = node\n        }}\n      />\n    )\n  }\n}\n\n// 兼容 SSR 服务端渲染\nfunction SSRKeepAlive({ children }) {\n  return (\n    <div key=\"keep-alive-placeholder\" nodeKeyIgnore className=\"ka-wrapper\">\n      <div key=\"keeper-container\" nodeKeyIgnore className=\"ka-content\">\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default isFunction(get(root, 'document.getElementById'))\n  ? expandKeepAlive(withActivation(KeepAlive))\n  : SSRKeepAlive\n"]},"metadata":{},"sourceType":"script"}