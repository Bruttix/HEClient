{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useMemo}from\"react\";import{useDispatch,useSelector}from\"react-redux\";import{FormGroup,FormFeedback,Label,Input}from\"reactstrap\";import{useQuery}from\"@apollo/react-hooks\";import getClientsQuery from\"../../../../graphql/queries/getClientsQuery\";import isEmail from\"validator/lib/isEmail\";import ACTION_CREATE_ACCOUNT_EMAIL from\"../../../../actions/CreateAccount/CreateAccountEmail/ACTION_CREATE_ACCOUNT_EMAIL\";import ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID from\"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Invalid/ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID\";import ACTION_CREATE_ACCOUNT_EMAIL_VALID from\"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Valid/ACTION_CREATE_ACCOUNT_EMAIL_VALID\";import ACTION_CREATE_ACCOUNT_EMAIL_INVALID from\"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Invalid/ACTION_CREATE_ACCOUNT_EMAIL_INVALID\";import ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID from\"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Valid/ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID\";import ACTION_CREATE_ACCOUNT_EMAIL_RESET from\"../../../../actions/CreateAccount/CreateAccountEmail/ACTION_CREATE_ACCOUNT_EMAIL_RESET\";import\"../SignUp.css\";const CreateAccountEmail=()=>{const dispatch=useDispatch();// Email States\nconst createAccountEmail=useSelector(state=>state.createAccountEmail.create_account_email);const createAccountEmailValid=useSelector(state=>state.createAccountEmailValid.create_account_email_valid);const createAccountEmailInvalid=useSelector(state=>state.createAccountEmailInvalid.create_account_email_invalid);const _useState=useState(false),_useState2=_slicedToArray(_useState,2),emailAlreadyRegistered=_useState2[0],changeEmailAlreadyRegistered=_useState2[1];// Regular Expression for Email Validation - allows only one @ and only one period while not allowing special characters or spaces\nconst emailReg=/^[^\\s@#!]+@{1}[^\\s@.#!]+\\.{1}[^\\s@.]+$/;const _useQuery=useQuery(getClientsQuery,{fetchPolicy:\"no-cache\"}),data=_useQuery.data;const validateEmail=e=>{const validEmail=emailReg.test(e.currentTarget.value);const validatorTest=isEmail(e.currentTarget.value);dispatch(ACTION_CREATE_ACCOUNT_EMAIL(e.currentTarget.value.trim()));if(!emailAlreadyRegistered){if(validEmail&&validatorTest){dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID());dispatch(ACTION_CREATE_ACCOUNT_EMAIL_VALID());}else{dispatch(ACTION_CREATE_ACCOUNT_EMAIL_INVALID());dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID());}}else{dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID());dispatch(ACTION_CREATE_ACCOUNT_EMAIL_VALID());}};useMemo(()=>{if(createAccountEmail){if(data){for(let i=0;i<data.clients.length;i++){if(data.clients[i].email===createAccountEmail){if(data.clients[i].password!==null||data.clients[i].tokenCount>0){changeEmailAlreadyRegistered(true);dispatch(ACTION_CREATE_ACCOUNT_EMAIL_INVALID());dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID());}}}}}},[dispatch,data,createAccountEmail]);const emailTyping=()=>{dispatch(ACTION_CREATE_ACCOUNT_EMAIL_RESET());changeEmailAlreadyRegistered(false);};return/*#__PURE__*/React.createElement(FormGroup,{className:\"sign_up_individual_form_field\"},/*#__PURE__*/React.createElement(Label,{for:\"createAccountEmail\"},/*#__PURE__*/React.createElement(\"div\",{className:\"required_label\"},\"Email\",/*#__PURE__*/React.createElement(\"p\",{className:\"required_label red_asterisk\"},\"* \"))),/*#__PURE__*/React.createElement(Input,{type:\"email\",name:\"createAccountEmail\",defaultValue:createAccountEmail,maxLength:128,placeholder:\"Email address\",className:\"input_field_sign_up\",onChange:emailTyping,onBlur:validateEmail,invalid:createAccountEmail===\"\"?false:createAccountEmailInvalid?true:false,valid:createAccountEmail===\"\"?false:createAccountEmailValid?true:false}),emailAlreadyRegistered?/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"This email has already been registered.\"):/*#__PURE__*/React.createElement(FormFeedback,{className:\"invalid_message_container\",invalid:\"true\"},\"Please enter a valid email address.\"));};export default CreateAccountEmail;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/account/signup/CreateAccountEmail/CreateAccountEmail.js"],"names":["React","useState","useMemo","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","useQuery","getClientsQuery","isEmail","ACTION_CREATE_ACCOUNT_EMAIL","ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID","ACTION_CREATE_ACCOUNT_EMAIL_VALID","ACTION_CREATE_ACCOUNT_EMAIL_INVALID","ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID","ACTION_CREATE_ACCOUNT_EMAIL_RESET","CreateAccountEmail","dispatch","createAccountEmail","state","create_account_email","createAccountEmailValid","create_account_email_valid","createAccountEmailInvalid","create_account_email_invalid","emailAlreadyRegistered","changeEmailAlreadyRegistered","emailReg","fetchPolicy","data","validateEmail","e","validEmail","test","currentTarget","value","validatorTest","trim","i","clients","length","email","password","tokenCount","emailTyping"],"mappings":"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","sourcesContent":["import React, { useState, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport getClientsQuery from \"../../../../graphql/queries/getClientsQuery\";\r\nimport isEmail from \"validator/lib/isEmail\";\r\nimport ACTION_CREATE_ACCOUNT_EMAIL from \"../../../../actions/CreateAccount/CreateAccountEmail/ACTION_CREATE_ACCOUNT_EMAIL\";\r\nimport ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Invalid/ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_EMAIL_VALID from \"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Valid/ACTION_CREATE_ACCOUNT_EMAIL_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_EMAIL_INVALID from \"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Invalid/ACTION_CREATE_ACCOUNT_EMAIL_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountEmail/Validation/Valid/ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_EMAIL_RESET from \"../../../../actions/CreateAccount/CreateAccountEmail/ACTION_CREATE_ACCOUNT_EMAIL_RESET\";\r\nimport \"../SignUp.css\";\r\n\r\nconst CreateAccountEmail = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Email States\r\n  const createAccountEmail = useSelector(\r\n    (state) => state.createAccountEmail.create_account_email\r\n  );\r\n  const createAccountEmailValid = useSelector(\r\n    (state) => state.createAccountEmailValid.create_account_email_valid\r\n  );\r\n  const createAccountEmailInvalid = useSelector(\r\n    (state) => state.createAccountEmailInvalid.create_account_email_invalid\r\n  );\r\n  const [emailAlreadyRegistered, changeEmailAlreadyRegistered] = useState(\r\n    false\r\n  );\r\n\r\n  // Regular Expression for Email Validation - allows only one @ and only one period while not allowing special characters or spaces\r\n  const emailReg = /^[^\\s@#!]+@{1}[^\\s@.#!]+\\.{1}[^\\s@.]+$/;\r\n\r\n  const { data } = useQuery(getClientsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const validateEmail = (e) => {\r\n    const validEmail = emailReg.test(e.currentTarget.value);\r\n    const validatorTest = isEmail(e.currentTarget.value);\r\n    dispatch(ACTION_CREATE_ACCOUNT_EMAIL(e.currentTarget.value.trim()));\r\n\r\n    if (!emailAlreadyRegistered) {\r\n      if (validEmail && validatorTest) {\r\n        dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID());\r\n        dispatch(ACTION_CREATE_ACCOUNT_EMAIL_VALID());\r\n      } else {\r\n        dispatch(ACTION_CREATE_ACCOUNT_EMAIL_INVALID());\r\n        dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID());\r\n      }\r\n    } else {\r\n      dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_INVALID());\r\n      dispatch(ACTION_CREATE_ACCOUNT_EMAIL_VALID());\r\n    }\r\n  };\r\n\r\n  useMemo(() => {\r\n    if (createAccountEmail) {\r\n      if (data) {\r\n        for (let i = 0; i < data.clients.length; i++) {\r\n          if (data.clients[i].email === createAccountEmail) {\r\n            if (\r\n              data.clients[i].password !== null ||\r\n              data.clients[i].tokenCount > 0\r\n            ) {\r\n              changeEmailAlreadyRegistered(true);\r\n              dispatch(ACTION_CREATE_ACCOUNT_EMAIL_INVALID());\r\n              dispatch(ACTION_CREATE_ACCOUNT_EMAIL_NOT_VALID());\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, data, createAccountEmail]);\r\n\r\n  const emailTyping = () => {\r\n    dispatch(ACTION_CREATE_ACCOUNT_EMAIL_RESET());\r\n    changeEmailAlreadyRegistered(false);\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"sign_up_individual_form_field\">\r\n      <Label for=\"createAccountEmail\">\r\n        <div className=\"required_label\">\r\n          Email<p className=\"required_label red_asterisk\">* </p>\r\n        </div>\r\n      </Label>\r\n      <Input\r\n        type=\"email\"\r\n        name=\"createAccountEmail\"\r\n        defaultValue={createAccountEmail}\r\n        maxLength={128}\r\n        placeholder=\"Email address\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={emailTyping}\r\n        onBlur={validateEmail}\r\n        invalid={\r\n          createAccountEmail === \"\"\r\n            ? false\r\n            : createAccountEmailInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          createAccountEmail === \"\"\r\n            ? false\r\n            : createAccountEmailValid\r\n            ? true\r\n            : false\r\n        }\r\n      />\r\n      {emailAlreadyRegistered ? (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          This email has already been registered.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Please enter a valid email address.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default CreateAccountEmail;\r\n"]},"metadata":{},"sourceType":"module"}