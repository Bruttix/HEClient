{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useEffect,useMemo}from\"react\";import{Switch,Route,Redirect,useLocation}from\"react-router-dom\";import AdminLoginPage from\"./AdminLogin/AdminLoginPage\";import AdminMenu from\"./AdminMenu/AdminMenu\";import AdminClients from\"./AdminClients/AdminClients\";import AdminSchedule from\"./AdminSchedule/AdminSchedule\";import AdminStaff from\"./AdminStaff/AdminStaff\";import AdminNotifications from\"./AdminNotifications/AdminNotifications\";import{useMutation,useQuery}from\"@apollo/react-hooks\";import getClientsQuery from\"../../graphql/queries/getClientsQuery\";import getAllAppointmentsQuery from\"../../graphql/queries/getAllAppointmentsQuery\";import getAllPersonalEventsQuery from\"../../graphql/queries/getAllPersonalEventsQuery\";import resetNotificationsMutation from\"../../graphql/mutations/resetNotificationsMutation\";import randomColor from\"randomcolor\";import LargeScreenSideMenu from\"../account/LargeScreenSideMenu/LargeScreenSideMenu\";import{Font}from\"@react-pdf/renderer\";import{useDispatch,useSelector}from\"react-redux\";// Font Relative Imports\nimport MontserratLightSrc from\"../../MontserratFont/ttf/Montserrat-Light.ttf\";import MontserratRegularSrc from\"../../MontserratFont/ttf/Montserrat-Regular.ttf\";import MontserratMediumSrc from\"../../MontserratFont/ttf/Montserrat-Medium.ttf\";import MontserratSemiBoldSrc from\"../../MontserratFont/ttf/Montserrat-SemiBold.ttf\";import MontserratBoldSrc from\"../../MontserratFont/ttf/Montserrat-Bold.ttf\";import MontserratBlackSrc from\"../../MontserratFont/ttf/Montserrat-Black.ttf\";import ACTION_ON_ACTIVITY_PAGE from\"../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE\";import ACTION_SPLASH_SCREEN_COMPLETE from\"../../actions/SplashScreenComplete/ACTION_SPLASH_SCREEN_COMPLETE\";import ACTION_SPLASH_SCREEN_HALFWAY from\"../../actions/SplashScreenHalfway/ACTION_SPLASH_SCREEN_HALFWAY\";import ACTION_NAVBAR_IS_VISIBLE from\"../../actions/NavbarIsVisible/ACTION_NAVBAR_IS_VISIBLE\";import ACTION_NAVBAR_NOT_VISIBLE from\"../../actions/NavbarIsVisible/ACTION_NAVBAR_NOT_VISIBLE\";import\"../../components/account/clientprofile/MyProfile/MyProfile.css\";import\"../../components/account/clientprofile/ConsentForm/ConsentForm.css\";import\"../../components/account/clientprofile/MyAppointments/MyAppointments.css\";import\"../../components/account/clientprofile/ClientProfile.css\";import\"../../components/checkout/SummaryReviewCards/SummaryReviewCards.css\";import\"../../bootstrap_forms.min.css\";const AdminRouter=React.forwardRef((props,ref)=>{const location=useLocation();const dispatch=useDispatch();const getEmployeeData=props.getEmployeeData,getEmployeeError=props.getEmployeeError,getEmployeesError=props.getEmployeesError,path=props.path,initialScreenSize=props.initialScreenSize,currentScreenSize=props.currentScreenSize,getEmployeeLoading=props.getEmployeeLoading,employeeDataRefetch=props.employeeDataRefetch,getEmployeesData=props.getEmployeesData,getEmployeesRefetch=props.getEmployeesRefetch,handleClickToScrollToHome=props.handleClickToScrollToHome;const _useQuery=useQuery(getClientsQuery,{fetchPolicy:\"no-cache\"}),getClientsData=_useQuery.data,getClientsRefetch=_useQuery.refetch,getClientsLoading=_useQuery.loading;const _useQuery2=useQuery(getAllAppointmentsQuery,{fetchPolicy:\"no-cache\"}),getAllAppointmentsData=_useQuery2.data,getAllAppointmentsRefetch=_useQuery2.refetch;const _useQuery3=useQuery(getAllPersonalEventsQuery,{fetchPolicy:\"no-cache\"}),getAllPersonalEventsData=_useQuery3.data,getAllPersonalEventsRefetch=_useQuery3.refetch;const splashScreenHalfway=useSelector(state=>state.splashScreenHalfway.splashScreenHalfway);const splashScreenComplete=useSelector(state=>state.splashScreenComplete.splashScreenComplete);const randomColorArray=useMemo(()=>{if(getClientsData){if(getClientsData.clients.length>0){return randomColor({count:getClientsData.clients.length,hue:\"#0081B1\",format:\"rgba\",luminosity:\"dark\",alpha:0.7});}}},[getClientsData]);const _useMutation=useMutation(resetNotificationsMutation),_useMutation2=_slicedToArray(_useMutation,1),resetNotifications=_useMutation2[0];useEffect(()=>{if(location.pathname===\"/admin\"){dispatch(ACTION_NAVBAR_NOT_VISIBLE());}else{dispatch(ACTION_NAVBAR_IS_VISIBLE());}},[dispatch,location.pathname]);useEffect(()=>{if(location.pathname.includes(\"activity\")){dispatch(ACTION_ON_ACTIVITY_PAGE());}},[location.pathname,dispatch]);const registerFont=()=>{Font.register({family:\"Montserrat\",fonts:[{src:MontserratLightSrc,fontStyle:\"normal\",fontWeight:300},{src:MontserratRegularSrc,fontStyle:\"normal\",fontWeight:400},{src:MontserratMediumSrc,fontStyle:\"normal\",fontWeight:500},{src:MontserratSemiBoldSrc,fontStyle:\"normal\",fontWeight:600},{src:MontserratBoldSrc,fontStyle:\"normal\",fontWeight:700},{src:MontserratBlackSrc,fontStyle:\"normal\",fontWeight:900}]});};useMemo(()=>{registerFont();},[]);useEffect(()=>{if(!splashScreenComplete){dispatch(ACTION_SPLASH_SCREEN_COMPLETE());}if(!splashScreenHalfway){dispatch(ACTION_SPLASH_SCREEN_HALFWAY());}},[dispatch,splashScreenComplete,splashScreenHalfway]);return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(LargeScreenSideMenu,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getEmployeeData:getEmployeeData?getEmployeeData:null,employeeDataRefetch:employeeDataRefetch,getClientsLoading:getClientsLoading,handleClickToScrollToHome:handleClickToScrollToHome,ref:ref,resetNotifications:resetNotifications}),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,{exact:true,path:path,render:()=>/*#__PURE__*/React.createElement(AdminLoginPage,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getEmployeeData:getEmployeeData?getEmployeeData:null,employeeDataRefetch:employeeDataRefetch})}),/*#__PURE__*/React.createElement(Route,{exact:true,path:path+\"/menu\",render:()=>/*#__PURE__*/React.createElement(AdminMenu,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getEmployeeData:getEmployeeData?getEmployeeData:null,employeeDataRefetch:employeeDataRefetch,resetNotifications:resetNotifications})}),/*#__PURE__*/React.createElement(Route,{exact:true,path:path+\"/activity\",onLeave:()=>resetNotifications(),render:()=>/*#__PURE__*/React.createElement(AdminNotifications,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getEmployeeData:getEmployeeData?getEmployeeData:null,getEmployeeLoading:getEmployeeLoading})}),/*#__PURE__*/React.createElement(Route,{exact:true,path:path+\"/clients\",render:()=>/*#__PURE__*/React.createElement(AdminClients,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getEmployeeData:getEmployeeData?getEmployeeData:null,getEmployeeError:getEmployeeError,getEmployeesError:getEmployeesError,getClientsData:getClientsData?getClientsData:null,getClientsRefetch:getClientsRefetch,getClientsLoading:getClientsLoading,randomColorArray:randomColorArray?randomColorArray:null,resetNotifications:resetNotifications,employeeDataRefetch:employeeDataRefetch,getEmployeesRefetch:getEmployeesRefetch})}),/*#__PURE__*/React.createElement(Route,{exact:true,path:path+\"/staff\",render:()=>/*#__PURE__*/React.createElement(AdminStaff,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getClientsData:getClientsData?getClientsData:null,getClientsLoading:getClientsLoading,getEmployeeData:getEmployeeData?getEmployeeData:null,getEmployeeError:getEmployeeError,getEmployeesError:getEmployeesError,employeeDataRefetch:employeeDataRefetch,getEmployeesData:getEmployeesData,getEmployeesRefetch:getEmployeesRefetch,getAllAppointmentsData:getAllAppointmentsData,getAllAppointmentsRefetch:getAllAppointmentsRefetch,randomColorArray:randomColorArray?randomColorArray:null,resetNotifications:resetNotifications})}),/*#__PURE__*/React.createElement(Route,{exact:true,path:path+\"/schedule\",render:()=>/*#__PURE__*/React.createElement(AdminSchedule,{initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,getAllAppointmentsData:getAllAppointmentsData,getAllAppointmentsRefetch:getAllAppointmentsRefetch,getEmployeeData:getEmployeeData?getEmployeeData:null,getEmployeeError:getEmployeeError,getEmployeesError:getEmployeesError,getEmployeesData:getEmployeesData?getEmployeesData:null,getClientsData:getClientsData?getClientsData:null,getClientsRefetch:getClientsRefetch,getAllPersonalEventsData:getAllPersonalEventsData,getAllPersonalEventsRefetch:getAllPersonalEventsRefetch,randomColorArray:randomColorArray?randomColorArray:null,resetNotifications:resetNotifications,employeeDataRefetch:employeeDataRefetch,getEmployeesRefetch:getEmployeesRefetch})}),/*#__PURE__*/React.createElement(Route,{render:()=>/*#__PURE__*/React.createElement(Redirect,{to:\"/\"})})));});export default AdminRouter;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminRouter.js"],"names":["React","useEffect","useMemo","Switch","Route","Redirect","useLocation","AdminLoginPage","AdminMenu","AdminClients","AdminSchedule","AdminStaff","AdminNotifications","useMutation","useQuery","getClientsQuery","getAllAppointmentsQuery","getAllPersonalEventsQuery","resetNotificationsMutation","randomColor","LargeScreenSideMenu","Font","useDispatch","useSelector","MontserratLightSrc","MontserratRegularSrc","MontserratMediumSrc","MontserratSemiBoldSrc","MontserratBoldSrc","MontserratBlackSrc","ACTION_ON_ACTIVITY_PAGE","ACTION_SPLASH_SCREEN_COMPLETE","ACTION_SPLASH_SCREEN_HALFWAY","ACTION_NAVBAR_IS_VISIBLE","ACTION_NAVBAR_NOT_VISIBLE","AdminRouter","forwardRef","props","ref","location","dispatch","getEmployeeData","getEmployeeError","getEmployeesError","path","initialScreenSize","currentScreenSize","getEmployeeLoading","employeeDataRefetch","getEmployeesData","getEmployeesRefetch","handleClickToScrollToHome","fetchPolicy","getClientsData","data","getClientsRefetch","refetch","getClientsLoading","loading","getAllAppointmentsData","getAllAppointmentsRefetch","getAllPersonalEventsData","getAllPersonalEventsRefetch","splashScreenHalfway","state","splashScreenComplete","randomColorArray","clients","length","count","hue","format","luminosity","alpha","resetNotifications","pathname","includes","registerFont","register","family","fonts","src","fontStyle","fontWeight"],"mappings":"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","sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { Switch, Route, Redirect, useLocation } from \"react-router-dom\";\r\nimport AdminLoginPage from \"./AdminLogin/AdminLoginPage\";\r\nimport AdminMenu from \"./AdminMenu/AdminMenu\";\r\nimport AdminClients from \"./AdminClients/AdminClients\";\r\nimport AdminSchedule from \"./AdminSchedule/AdminSchedule\";\r\nimport AdminStaff from \"./AdminStaff/AdminStaff\";\r\nimport AdminNotifications from \"./AdminNotifications/AdminNotifications\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport getClientsQuery from \"../../graphql/queries/getClientsQuery\";\r\nimport getAllAppointmentsQuery from \"../../graphql/queries/getAllAppointmentsQuery\";\r\nimport getAllPersonalEventsQuery from \"../../graphql/queries/getAllPersonalEventsQuery\";\r\nimport resetNotificationsMutation from \"../../graphql/mutations/resetNotificationsMutation\";\r\nimport randomColor from \"randomcolor\";\r\nimport LargeScreenSideMenu from \"../account/LargeScreenSideMenu/LargeScreenSideMenu\";\r\nimport { Font } from \"@react-pdf/renderer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// Font Relative Imports\r\nimport MontserratLightSrc from \"../../MontserratFont/ttf/Montserrat-Light.ttf\";\r\nimport MontserratRegularSrc from \"../../MontserratFont/ttf/Montserrat-Regular.ttf\";\r\nimport MontserratMediumSrc from \"../../MontserratFont/ttf/Montserrat-Medium.ttf\";\r\nimport MontserratSemiBoldSrc from \"../../MontserratFont/ttf/Montserrat-SemiBold.ttf\";\r\nimport MontserratBoldSrc from \"../../MontserratFont/ttf/Montserrat-Bold.ttf\";\r\nimport MontserratBlackSrc from \"../../MontserratFont/ttf/Montserrat-Black.ttf\";\r\nimport ACTION_ON_ACTIVITY_PAGE from \"../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE\";\r\nimport ACTION_SPLASH_SCREEN_COMPLETE from \"../../actions/SplashScreenComplete/ACTION_SPLASH_SCREEN_COMPLETE\";\r\nimport ACTION_SPLASH_SCREEN_HALFWAY from \"../../actions/SplashScreenHalfway/ACTION_SPLASH_SCREEN_HALFWAY\";\r\nimport ACTION_NAVBAR_IS_VISIBLE from \"../../actions/NavbarIsVisible/ACTION_NAVBAR_IS_VISIBLE\";\r\nimport ACTION_NAVBAR_NOT_VISIBLE from \"../../actions/NavbarIsVisible/ACTION_NAVBAR_NOT_VISIBLE\";\r\nimport \"../../components/account/clientprofile/MyProfile/MyProfile.css\";\r\nimport \"../../components/account/clientprofile/ConsentForm/ConsentForm.css\";\r\nimport \"../../components/account/clientprofile/MyAppointments/MyAppointments.css\";\r\nimport \"../../components/account/clientprofile/ClientProfile.css\";\r\nimport \"../../components/checkout/SummaryReviewCards/SummaryReviewCards.css\";\r\nimport \"../../bootstrap_forms.min.css\";\r\n\r\nconst AdminRouter = React.forwardRef((props, ref) => {\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    getEmployeeData,\r\n    getEmployeeError,\r\n    getEmployeesError,\r\n    path,\r\n    initialScreenSize,\r\n    currentScreenSize,\r\n    getEmployeeLoading,\r\n    employeeDataRefetch,\r\n    getEmployeesData,\r\n    getEmployeesRefetch,\r\n    handleClickToScrollToHome,\r\n  } = props;\r\n\r\n  const {\r\n    data: getClientsData,\r\n    refetch: getClientsRefetch,\r\n    loading: getClientsLoading,\r\n  } = useQuery(getClientsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const {\r\n    data: getAllAppointmentsData,\r\n    refetch: getAllAppointmentsRefetch,\r\n  } = useQuery(getAllAppointmentsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const {\r\n    data: getAllPersonalEventsData,\r\n    refetch: getAllPersonalEventsRefetch,\r\n  } = useQuery(getAllPersonalEventsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const splashScreenHalfway = useSelector(\r\n    (state) => state.splashScreenHalfway.splashScreenHalfway\r\n  );\r\n  const splashScreenComplete = useSelector(\r\n    (state) => state.splashScreenComplete.splashScreenComplete\r\n  );\r\n\r\n  const randomColorArray = useMemo(() => {\r\n    if (getClientsData) {\r\n      if (getClientsData.clients.length > 0) {\r\n        return randomColor({\r\n          count: getClientsData.clients.length,\r\n          hue: \"#0081B1\",\r\n          format: \"rgba\",\r\n          luminosity: \"dark\",\r\n          alpha: 0.7,\r\n        });\r\n      }\r\n    }\r\n  }, [getClientsData]);\r\n\r\n  const [resetNotifications] = useMutation(resetNotificationsMutation);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname === \"/admin\") {\r\n      dispatch(ACTION_NAVBAR_NOT_VISIBLE());\r\n    } else {\r\n      dispatch(ACTION_NAVBAR_IS_VISIBLE());\r\n    }\r\n  }, [dispatch, location.pathname]);\r\n\r\n  useEffect(() => {\r\n    if (location.pathname.includes(\"activity\")) {\r\n      dispatch(ACTION_ON_ACTIVITY_PAGE());\r\n    }\r\n  }, [location.pathname, dispatch]);\r\n\r\n  const registerFont = () => {\r\n    Font.register({\r\n      family: \"Montserrat\",\r\n      fonts: [\r\n        {\r\n          src: MontserratLightSrc,\r\n          fontStyle: \"normal\",\r\n          fontWeight: 300,\r\n        },\r\n        {\r\n          src: MontserratRegularSrc,\r\n          fontStyle: \"normal\",\r\n          fontWeight: 400,\r\n        },\r\n        {\r\n          src: MontserratMediumSrc,\r\n          fontStyle: \"normal\",\r\n          fontWeight: 500,\r\n        },\r\n        {\r\n          src: MontserratSemiBoldSrc,\r\n          fontStyle: \"normal\",\r\n          fontWeight: 600,\r\n        },\r\n        {\r\n          src: MontserratBoldSrc,\r\n          fontStyle: \"normal\",\r\n          fontWeight: 700,\r\n        },\r\n        {\r\n          src: MontserratBlackSrc,\r\n          fontStyle: \"normal\",\r\n          fontWeight: 900,\r\n        },\r\n      ],\r\n    });\r\n  };\r\n\r\n  useMemo(() => {\r\n    registerFont();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!splashScreenComplete) {\r\n      dispatch(ACTION_SPLASH_SCREEN_COMPLETE());\r\n    }\r\n    if (!splashScreenHalfway) {\r\n      dispatch(ACTION_SPLASH_SCREEN_HALFWAY());\r\n    }\r\n  }, [dispatch, splashScreenComplete, splashScreenHalfway]);\r\n\r\n  return (\r\n    <>\r\n      <LargeScreenSideMenu\r\n        initialScreenSize={initialScreenSize}\r\n        currentScreenSize={currentScreenSize}\r\n        getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n        employeeDataRefetch={employeeDataRefetch}\r\n        getClientsLoading={getClientsLoading}\r\n        handleClickToScrollToHome={handleClickToScrollToHome}\r\n        ref={ref}\r\n        resetNotifications={resetNotifications}\r\n      />\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path={path}\r\n          render={() => (\r\n            <AdminLoginPage\r\n              initialScreenSize={initialScreenSize}\r\n              currentScreenSize={currentScreenSize}\r\n              getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n              employeeDataRefetch={employeeDataRefetch}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={path + \"/menu\"}\r\n          render={() => (\r\n            <AdminMenu\r\n              initialScreenSize={initialScreenSize}\r\n              currentScreenSize={currentScreenSize}\r\n              getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n              employeeDataRefetch={employeeDataRefetch}\r\n              resetNotifications={resetNotifications}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={path + \"/activity\"}\r\n          onLeave={() => resetNotifications()}\r\n          render={() => (\r\n            <AdminNotifications\r\n              initialScreenSize={initialScreenSize}\r\n              currentScreenSize={currentScreenSize}\r\n              getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n              getEmployeeLoading={getEmployeeLoading}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={path + \"/clients\"}\r\n          render={() => (\r\n            <AdminClients\r\n              initialScreenSize={initialScreenSize}\r\n              currentScreenSize={currentScreenSize}\r\n              getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n              getEmployeeError={getEmployeeError}\r\n              getEmployeesError={getEmployeesError}\r\n              getClientsData={getClientsData ? getClientsData : null}\r\n              getClientsRefetch={getClientsRefetch}\r\n              getClientsLoading={getClientsLoading}\r\n              randomColorArray={randomColorArray ? randomColorArray : null}\r\n              resetNotifications={resetNotifications}\r\n              employeeDataRefetch={employeeDataRefetch}\r\n              getEmployeesRefetch={getEmployeesRefetch}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={path + \"/staff\"}\r\n          render={() => (\r\n            <AdminStaff\r\n              initialScreenSize={initialScreenSize}\r\n              currentScreenSize={currentScreenSize}\r\n              getClientsData={getClientsData ? getClientsData : null}\r\n              getClientsLoading={getClientsLoading}\r\n              getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n              getEmployeeError={getEmployeeError}\r\n              getEmployeesError={getEmployeesError}\r\n              employeeDataRefetch={employeeDataRefetch}\r\n              getEmployeesData={getEmployeesData}\r\n              getEmployeesRefetch={getEmployeesRefetch}\r\n              getAllAppointmentsData={getAllAppointmentsData}\r\n              getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n              randomColorArray={randomColorArray ? randomColorArray : null}\r\n              resetNotifications={resetNotifications}\r\n            />\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={path + \"/schedule\"}\r\n          render={() => (\r\n            <AdminSchedule\r\n              initialScreenSize={initialScreenSize}\r\n              currentScreenSize={currentScreenSize}\r\n              getAllAppointmentsData={getAllAppointmentsData}\r\n              getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n              getEmployeeData={getEmployeeData ? getEmployeeData : null}\r\n              getEmployeeError={getEmployeeError}\r\n              getEmployeesError={getEmployeesError}\r\n              getEmployeesData={getEmployeesData ? getEmployeesData : null}\r\n              getClientsData={getClientsData ? getClientsData : null}\r\n              getClientsRefetch={getClientsRefetch}\r\n              getAllPersonalEventsData={getAllPersonalEventsData}\r\n              getAllPersonalEventsRefetch={getAllPersonalEventsRefetch}\r\n              randomColorArray={randomColorArray ? randomColorArray : null}\r\n              resetNotifications={resetNotifications}\r\n              employeeDataRefetch={employeeDataRefetch}\r\n              getEmployeesRefetch={getEmployeesRefetch}\r\n            />\r\n          )}\r\n        />\r\n        {/* If no path matches, redirect to home */}\r\n        <Route render={() => <Redirect to=\"/\" />} />\r\n      </Switch>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default AdminRouter;\r\n"]},"metadata":{},"sourceType":"module"}