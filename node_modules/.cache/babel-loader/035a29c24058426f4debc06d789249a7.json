{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HEC\\\\Client\\\\src\\\\components\\\\admin\\\\AdminSchedule\\\\AdminCreateAppointment\\\\Autosuggest\\\\SaltCaveAutosuggest.js\";\nimport React, { useState } from \"react\";\nimport Autosuggest from \"react-autosuggest\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport saltCaveSuggestions from \"../SaltCaveSuggestions\";\nimport ACTION_ADMIN_APPOINTMENT_DURATION from \"../../../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDuration/ACTION_ADMIN_APPOINTMENT_DURATION\";\nimport ACTION_ADMIN_SELECTED_TREATMENTS from \"../../../../../actions/Admin/AdminCreateAppointment/AdminSelectedTreatments/ACTION_ADMIN_SELECTED_TREATMENTS\";\n\nconst SaltCaveAutosuggest = props => {\n  const dispatch = useDispatch();\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        saltCaveInputSuggestions = _useState2[0],\n        changeSaltCaveInputSuggestions = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        saltCaveInput = _useState4[0],\n        changeSaltCaveInput = _useState4[1];\n\n  const adminAppointmentDuration = useSelector(state => state.adminAppointmentDuration.admin_appointment_duration);\n  const adminAppointmentDate = useSelector(state => state.adminAppointmentDate.admin_appointment_date);\n  const adminAppointmentTime = useSelector(state => state.adminAppointmentTime.admin_appointment_time);\n  const adminSelectedTreatments = useSelector(state => state.adminSelectedTreatments.admin_selected_treatments);\n\n  const saltCaveInputChange = (event, {\n    newValue\n  }) => {\n    changeSaltCaveInput(newValue);\n  };\n\n  const renderSaltCaveSuggestion = suggestion => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_treatment_suggestion_container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, suggestion.props.children[3].props.children ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin_individual_client_treatment_suggestion_picture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, suggestion.props.children[3].props.children) : null, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        color: suggestion.props.children[0].props.children ? suggestion.props.children[0].props.children.includes(\"Unavailable\") ? \"rgb(177, 177, 177)\" : \"#000\" : \"#000\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, suggestion.props.children[0].props.children), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, suggestion.props.children[2].props.children ? \"$\" + suggestion.props.children[2].props.children + \".00\" : null));\n  };\n\n  const _renderSectionTitle = section => {\n    if (section.sectionTitle) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        className: \"react_autosuggest_section_title_header\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, section.sectionTitle);\n    } else {\n      return null;\n    }\n  };\n\n  const _getSectionSuggestions = section => {\n    if (section.suggestions) {\n      return section.suggestions.map((x, i) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }\n        }, x.name), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, x.duration), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }\n        }, x.price), /*#__PURE__*/React.createElement(\"span\", {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }, x.picture));\n      });\n    }\n  };\n\n  const onSaltCaveSuggestionsFetchRequested = ({\n    value\n  }) => {\n    changeSaltCaveInputSuggestions(getSaltCaveSuggestions(value));\n  };\n\n  const onSaltCaveSuggestionsClearRequested = () => {\n    changeSaltCaveInputSuggestions([]);\n  };\n\n  const saltCaveInputProps = {\n    placeholder: \"Add Salt Cave\",\n    value: saltCaveInput,\n    onChange: saltCaveInputChange,\n    style: {\n      borderRight: \"1px solid transparent\"\n    }\n  };\n\n  const getSaltCaveSuggestionValue = suggestion => {\n    dispatch(ACTION_ADMIN_APPOINTMENT_DURATION(adminAppointmentDuration + suggestion.props.children[1].props.children));\n    dispatch(ACTION_ADMIN_SELECTED_TREATMENTS([...adminSelectedTreatments, suggestion]));\n    return \"\";\n  };\n\n  const getSaltCaveSuggestions = value => {\n    const inputValue = value ? value.trim().toLowerCase() : \"\";\n    const inputLength = inputValue.length;\n    const date = moment(adminAppointmentDate, \"L\").format(\"MMMM D, YYYY\");\n    const startTime = adminAppointmentTime;\n    const fifteenMinutesPrior = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").subtract(15, \"minutes\").format(\"MMMM D, YYYY h:mm A\");\n    const thirtyMinutesPrior = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").subtract(30, \"minutes\").format(\"MMMM D, YYYY h:mm A\");\n    const fortyFiveMinutesPrior = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").subtract(45, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const hourPrior = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").subtract(1, \"hours\").format(\"MMMM D, YYYY hh:mm A\");\n    const fifteenMinutesAfter = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(15 + adminAppointmentDuration, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const actualAppointmentStartTime = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").format(\"MMMM D, YYYY hh:mm A\");\n    const fifteenMinutesIntoAppointment = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(15, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const thirtyMinutesIntoAppointment = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(30, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const fortyFiveMinutesIntoAppointment = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(45, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const hourIntoAppointment = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(60, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const actualAppointmentEndTime = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(adminAppointmentDuration, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const thirtyMinutesAfter = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(30 + adminAppointmentDuration, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const fortyFiveMinutesAfter = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(45 + adminAppointmentDuration, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const hourAfter = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\").add(60 + adminAppointmentDuration, \"minutes\").format(\"MMMM D, YYYY hh:mm A\");\n    const filteredApps = props.getAllAppointmentsData ? props.getAllAppointmentsData.all_appointments.filter(x => {\n      if (x.esthetician === \"Salt Cave\") {\n        return x.esthetician === \"Salt Cave\";\n      } else {\n        return null;\n      }\n    }) : null;\n    const sameDayApps = filteredApps.filter(x => {\n      if (x.date === date) {\n        return x.date === date;\n      } else {\n        return null;\n      }\n    });\n    const bookedTimes = sameDayApps.map(x => {\n      const interval = x.duration / 5;\n      const bookedArr = [];\n\n      for (let i = 0; i < interval + 1; i++) {\n        const start = x.date + \" \" + x.startTime + \" \" + x.morningOrEvening;\n        bookedArr.push(moment(start, \"MMMM D, YYYY hh:mm A\").add(i * 5, \"minutes\").format(\"MMMM D, YYYY hh:mm A\"));\n      }\n\n      return bookedArr;\n    });\n    const bookedTimesArr = bookedTimes.flat();\n    const saltCaveSuggestionsArguments = saltCaveSuggestions(adminAppointmentDuration, adminAppointmentDate, adminAppointmentTime, adminSelectedTreatments ? adminSelectedTreatments : [], bookedTimesArr.includes(actualAppointmentStartTime) || bookedTimesArr.includes(fifteenMinutesPrior) || bookedTimesArr.includes(thirtyMinutesPrior), bookedTimesArr.includes(actualAppointmentStartTime) || bookedTimesArr.includes(fifteenMinutesPrior) || bookedTimesArr.includes(thirtyMinutesPrior) || bookedTimesArr.includes(fortyFiveMinutesPrior), bookedTimesArr.includes(actualAppointmentStartTime) || bookedTimesArr.includes(fifteenMinutesPrior) || bookedTimesArr.includes(thirtyMinutesPrior) || bookedTimesArr.includes(fortyFiveMinutesPrior) || bookedTimesArr.includes(hourPrior), bookedTimes.includes(actualAppointmentStartTime) || bookedTimesArr.includes(fifteenMinutesIntoAppointment) || bookedTimesArr.includes(thirtyMinutesIntoAppointment), bookedTimes.includes(actualAppointmentStartTime) || bookedTimesArr.includes(fifteenMinutesIntoAppointment) || bookedTimesArr.includes(thirtyMinutesIntoAppointment) || bookedTimesArr.includes(fortyFiveMinutesIntoAppointment), bookedTimes.includes(actualAppointmentStartTime) || bookedTimesArr.includes(fifteenMinutesIntoAppointment) || bookedTimesArr.includes(thirtyMinutesIntoAppointment) || bookedTimesArr.includes(fortyFiveMinutesIntoAppointment) || bookedTimesArr.includes(hourIntoAppointment), adminAppointmentDuration === 0 ? true : bookedTimesArr.includes(actualAppointmentEndTime) || bookedTimesArr.includes(fifteenMinutesAfter) || bookedTimesArr.includes(thirtyMinutesAfter), adminAppointmentDuration === 0 ? true : bookedTimesArr.includes(actualAppointmentEndTime) || bookedTimesArr.includes(fifteenMinutesAfter) || bookedTimesArr.includes(thirtyMinutesAfter) || bookedTimesArr.includes(fortyFiveMinutesAfter), adminAppointmentDuration === 0 ? true : bookedTimesArr.includes(actualAppointmentEndTime) || bookedTimesArr.includes(fifteenMinutesAfter) || bookedTimesArr.includes(thirtyMinutesAfter) || bookedTimesArr.includes(fortyFiveMinutesAfter) || bookedTimesArr.includes(hourAfter));\n\n    if (inputLength === 0) {\n      const sortedArr = [];\n\n      for (let i = 0; i < saltCaveSuggestionsArguments.length; i++) {\n        sortedArr.push({\n          sectionTitle: saltCaveSuggestionsArguments[i] ? saltCaveSuggestionsArguments[i].sectionTitle ? saltCaveSuggestionsArguments[i].sectionTitle : null : null,\n          suggestions: saltCaveSuggestionsArguments[i] ? saltCaveSuggestionsArguments[i].suggestions ? saltCaveSuggestionsArguments[i].suggestions.sort((a, b) => a.name ? a.name.localeCompare(b.name) : null) : null : null\n        });\n      }\n\n      return sortedArr;\n    } else {\n      const sortedArr = [];\n\n      for (let i = 0; i < saltCaveSuggestionsArguments.length; i++) {\n        sortedArr.push({\n          sectionTitle: saltCaveSuggestionsArguments[i] ? saltCaveSuggestionsArguments[i].sectionTitle ? saltCaveSuggestionsArguments[i].sectionTitle : null : null,\n          suggestions: saltCaveSuggestionsArguments[i] ? saltCaveSuggestionsArguments[i].suggestions.sort((a, b) => a.name ? a.name.localeCompare(b.name) : null).filter(x => {\n            const treatmentName = x.name;\n\n            if (treatmentName.toLowerCase().slice(0, inputLength) === inputValue) {\n              return treatmentName.toLowerCase().slice(0, inputLength) === inputValue;\n            } else {\n              return null;\n            }\n          }) : null\n        });\n        return sortedArr;\n      }\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_create_appointment_input_information_container\",\n    style: {\n      borderLeft: \"1px solid rgb(211, 211, 211)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Autosuggest, {\n    suggestions: saltCaveInputSuggestions,\n    onSuggestionsFetchRequested: onSaltCaveSuggestionsFetchRequested,\n    onSuggestionsClearRequested: onSaltCaveSuggestionsClearRequested,\n    getSuggestionValue: getSaltCaveSuggestionValue,\n    renderSuggestion: renderSaltCaveSuggestion,\n    inputProps: saltCaveInputProps,\n    shouldRenderSuggestions: () => true,\n    focusInputOnSuggestionClick: false,\n    multiSection: true,\n    renderSectionTitle: section => _renderSectionTitle(section),\n    getSectionSuggestions: section => _getSectionSuggestions(section),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: true,\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    className: \"react-autosuggest__input\",\n    style: {\n      borderLeft: \"1px solid transparent\",\n      borderRight: \"1px solid transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    role: \"combobox\",\n    \"aria-haspopup\": \"listbox\",\n    \"aria-owns\": \"react-autowhatever-1\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    \"aria-expanded\": \"false\",\n    className: \"react-autosuggest__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    disabled: true,\n    autoComplete: \"off\",\n    \"aria-autocomplete\": \"list\",\n    \"aria-controls\": \"react-autowhatever-1\",\n    className: \"react-autosuggest__input\",\n    style: {\n      borderLeft: \"1px solid transparent\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SaltCaveAutosuggest;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HEC/Client/src/components/admin/AdminSchedule/AdminCreateAppointment/Autosuggest/SaltCaveAutosuggest.js"],"names":["React","useState","Autosuggest","useDispatch","useSelector","moment","saltCaveSuggestions","ACTION_ADMIN_APPOINTMENT_DURATION","ACTION_ADMIN_SELECTED_TREATMENTS","SaltCaveAutosuggest","props","dispatch","saltCaveInputSuggestions","changeSaltCaveInputSuggestions","saltCaveInput","changeSaltCaveInput","adminAppointmentDuration","state","admin_appointment_duration","adminAppointmentDate","admin_appointment_date","adminAppointmentTime","admin_appointment_time","adminSelectedTreatments","admin_selected_treatments","saltCaveInputChange","event","newValue","renderSaltCaveSuggestion","suggestion","children","color","includes","renderSectionTitle","section","sectionTitle","getSectionSuggestions","suggestions","map","x","i","name","duration","price","picture","onSaltCaveSuggestionsFetchRequested","value","getSaltCaveSuggestions","onSaltCaveSuggestionsClearRequested","saltCaveInputProps","placeholder","onChange","style","borderRight","getSaltCaveSuggestionValue","inputValue","trim","toLowerCase","inputLength","length","date","format","startTime","fifteenMinutesPrior","subtract","thirtyMinutesPrior","fortyFiveMinutesPrior","hourPrior","fifteenMinutesAfter","add","actualAppointmentStartTime","fifteenMinutesIntoAppointment","thirtyMinutesIntoAppointment","fortyFiveMinutesIntoAppointment","hourIntoAppointment","actualAppointmentEndTime","thirtyMinutesAfter","fortyFiveMinutesAfter","hourAfter","filteredApps","getAllAppointmentsData","all_appointments","filter","esthetician","sameDayApps","bookedTimes","interval","bookedArr","start","morningOrEvening","push","bookedTimesArr","flat","saltCaveSuggestionsArguments","sortedArr","sort","a","b","localeCompare","treatmentName","slice","borderLeft"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport Autosuggest from \"react-autosuggest\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport saltCaveSuggestions from \"../SaltCaveSuggestions\";\r\nimport ACTION_ADMIN_APPOINTMENT_DURATION from \"../../../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDuration/ACTION_ADMIN_APPOINTMENT_DURATION\";\r\nimport ACTION_ADMIN_SELECTED_TREATMENTS from \"../../../../../actions/Admin/AdminCreateAppointment/AdminSelectedTreatments/ACTION_ADMIN_SELECTED_TREATMENTS\";\r\n\r\nconst SaltCaveAutosuggest = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const [saltCaveInputSuggestions, changeSaltCaveInputSuggestions] = useState(\r\n    []\r\n  );\r\n  const [saltCaveInput, changeSaltCaveInput] = useState(\"\");\r\n\r\n  const adminAppointmentDuration = useSelector(\r\n    (state) => state.adminAppointmentDuration.admin_appointment_duration\r\n  );\r\n  const adminAppointmentDate = useSelector(\r\n    (state) => state.adminAppointmentDate.admin_appointment_date\r\n  );\r\n  const adminAppointmentTime = useSelector(\r\n    (state) => state.adminAppointmentTime.admin_appointment_time\r\n  );\r\n  const adminSelectedTreatments = useSelector(\r\n    (state) => state.adminSelectedTreatments.admin_selected_treatments\r\n  );\r\n\r\n  const saltCaveInputChange = (event, { newValue }) => {\r\n    changeSaltCaveInput(newValue);\r\n  };\r\n\r\n  const renderSaltCaveSuggestion = (suggestion) => {\r\n    return (\r\n      <div className=\"admin_individual_client_treatment_suggestion_container\">\r\n        {suggestion.props.children[3].props.children ? (\r\n          <div className=\"admin_individual_client_treatment_suggestion_picture\">\r\n            {suggestion.props.children[3].props.children}\r\n          </div>\r\n        ) : null}\r\n\r\n        <p\r\n          style={{\r\n            color: suggestion.props.children[0].props.children\r\n              ? suggestion.props.children[0].props.children.includes(\r\n                  \"Unavailable\"\r\n                )\r\n                ? \"rgb(177, 177, 177)\"\r\n                : \"#000\"\r\n              : \"#000\",\r\n          }}\r\n        >\r\n          {suggestion.props.children[0].props.children}\r\n        </p>\r\n        <p>\r\n          {suggestion.props.children[2].props.children\r\n            ? \"$\" + suggestion.props.children[2].props.children + \".00\"\r\n            : null}\r\n        </p>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSectionTitle = (section) => {\r\n    if (section.sectionTitle) {\r\n      return (\r\n        <span className=\"react_autosuggest_section_title_header\">\r\n          {section.sectionTitle}\r\n        </span>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const getSectionSuggestions = (section) => {\r\n    if (section.suggestions) {\r\n      return section.suggestions.map((x, i) => {\r\n        return (\r\n          <>\r\n            <span key={i}>{x.name}</span>\r\n            <span key={i}>{x.duration}</span>\r\n            <span key={i}>{x.price}</span>\r\n            <span key={i}>{x.picture}</span>\r\n          </>\r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  const onSaltCaveSuggestionsFetchRequested = ({ value }) => {\r\n    changeSaltCaveInputSuggestions(getSaltCaveSuggestions(value));\r\n  };\r\n\r\n  const onSaltCaveSuggestionsClearRequested = () => {\r\n    changeSaltCaveInputSuggestions([]);\r\n  };\r\n\r\n  const saltCaveInputProps = {\r\n    placeholder: \"Add Salt Cave\",\r\n    value: saltCaveInput,\r\n    onChange: saltCaveInputChange,\r\n    style: { borderRight: \"1px solid transparent\" },\r\n  };\r\n\r\n  const getSaltCaveSuggestionValue = (suggestion) => {\r\n    dispatch(\r\n      ACTION_ADMIN_APPOINTMENT_DURATION(\r\n        adminAppointmentDuration + suggestion.props.children[1].props.children\r\n      )\r\n    );\r\n    dispatch(\r\n      ACTION_ADMIN_SELECTED_TREATMENTS([...adminSelectedTreatments, suggestion])\r\n    );\r\n\r\n    return \"\";\r\n  };\r\n\r\n  const getSaltCaveSuggestions = (value) => {\r\n    const inputValue = value ? value.trim().toLowerCase() : \"\";\r\n    const inputLength = inputValue.length;\r\n\r\n    const date = moment(adminAppointmentDate, \"L\").format(\"MMMM D, YYYY\");\r\n\r\n    const startTime = adminAppointmentTime;\r\n\r\n    const fifteenMinutesPrior = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .subtract(15, \"minutes\")\r\n      .format(\"MMMM D, YYYY h:mm A\");\r\n\r\n    const thirtyMinutesPrior = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .subtract(30, \"minutes\")\r\n      .format(\"MMMM D, YYYY h:mm A\");\r\n\r\n    const fortyFiveMinutesPrior = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .subtract(45, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const hourPrior = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\")\r\n      .subtract(1, \"hours\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fifteenMinutesAfter = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(15 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const actualAppointmentStartTime = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    ).format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fifteenMinutesIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(15, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const thirtyMinutesIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(30, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fortyFiveMinutesIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(45, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const hourIntoAppointment = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(60, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const actualAppointmentEndTime = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const thirtyMinutesAfter = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(30 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const fortyFiveMinutesAfter = moment(\r\n      date + \" \" + startTime,\r\n      \"MMMM D, YYYY hh:mm A\"\r\n    )\r\n      .add(45 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const hourAfter = moment(date + \" \" + startTime, \"MMMM D, YYYY hh:mm A\")\r\n      .add(60 + adminAppointmentDuration, \"minutes\")\r\n      .format(\"MMMM D, YYYY hh:mm A\");\r\n\r\n    const filteredApps = props.getAllAppointmentsData\r\n      ? props.getAllAppointmentsData.all_appointments.filter((x) => {\r\n          if (x.esthetician === \"Salt Cave\") {\r\n            return x.esthetician === \"Salt Cave\";\r\n          } else {\r\n            return null;\r\n          }\r\n        })\r\n      : null;\r\n\r\n    const sameDayApps = filteredApps.filter((x) => {\r\n      if (x.date === date) {\r\n        return x.date === date;\r\n      } else {\r\n        return null;\r\n      }\r\n    });\r\n\r\n    const bookedTimes = sameDayApps.map((x) => {\r\n      const interval = x.duration / 5;\r\n      const bookedArr = [];\r\n\r\n      for (let i = 0; i < interval + 1; i++) {\r\n        const start = x.date + \" \" + x.startTime + \" \" + x.morningOrEvening;\r\n\r\n        bookedArr.push(\r\n          moment(start, \"MMMM D, YYYY hh:mm A\")\r\n            .add(i * 5, \"minutes\")\r\n            .format(\"MMMM D, YYYY hh:mm A\")\r\n        );\r\n      }\r\n\r\n      return bookedArr;\r\n    });\r\n\r\n    const bookedTimesArr = bookedTimes.flat();\r\n\r\n    const saltCaveSuggestionsArguments = saltCaveSuggestions(\r\n      adminAppointmentDuration,\r\n      adminAppointmentDate,\r\n      adminAppointmentTime,\r\n      adminSelectedTreatments ? adminSelectedTreatments : [],\r\n      bookedTimesArr.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesPrior) ||\r\n        bookedTimesArr.includes(thirtyMinutesPrior),\r\n      bookedTimesArr.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesPrior) ||\r\n        bookedTimesArr.includes(thirtyMinutesPrior) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesPrior),\r\n      bookedTimesArr.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesPrior) ||\r\n        bookedTimesArr.includes(thirtyMinutesPrior) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesPrior) ||\r\n        bookedTimesArr.includes(hourPrior),\r\n      bookedTimes.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(thirtyMinutesIntoAppointment),\r\n      bookedTimes.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(thirtyMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesIntoAppointment),\r\n      bookedTimes.includes(actualAppointmentStartTime) ||\r\n        bookedTimesArr.includes(fifteenMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(thirtyMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(fortyFiveMinutesIntoAppointment) ||\r\n        bookedTimesArr.includes(hourIntoAppointment),\r\n      adminAppointmentDuration === 0\r\n        ? true\r\n        : bookedTimesArr.includes(actualAppointmentEndTime) ||\r\n            bookedTimesArr.includes(fifteenMinutesAfter) ||\r\n            bookedTimesArr.includes(thirtyMinutesAfter),\r\n      adminAppointmentDuration === 0\r\n        ? true\r\n        : bookedTimesArr.includes(actualAppointmentEndTime) ||\r\n            bookedTimesArr.includes(fifteenMinutesAfter) ||\r\n            bookedTimesArr.includes(thirtyMinutesAfter) ||\r\n            bookedTimesArr.includes(fortyFiveMinutesAfter),\r\n      adminAppointmentDuration === 0\r\n        ? true\r\n        : bookedTimesArr.includes(actualAppointmentEndTime) ||\r\n            bookedTimesArr.includes(fifteenMinutesAfter) ||\r\n            bookedTimesArr.includes(thirtyMinutesAfter) ||\r\n            bookedTimesArr.includes(fortyFiveMinutesAfter) ||\r\n            bookedTimesArr.includes(hourAfter)\r\n    );\r\n\r\n    if (inputLength === 0) {\r\n      const sortedArr = [];\r\n\r\n      for (let i = 0; i < saltCaveSuggestionsArguments.length; i++) {\r\n        sortedArr.push({\r\n          sectionTitle: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              : null\r\n            : null,\r\n          suggestions: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].suggestions\r\n              ? saltCaveSuggestionsArguments[i].suggestions.sort((a, b) =>\r\n                  a.name ? a.name.localeCompare(b.name) : null\r\n                )\r\n              : null\r\n            : null,\r\n        });\r\n      }\r\n      return sortedArr;\r\n    } else {\r\n      const sortedArr = [];\r\n\r\n      for (let i = 0; i < saltCaveSuggestionsArguments.length; i++) {\r\n        sortedArr.push({\r\n          sectionTitle: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              ? saltCaveSuggestionsArguments[i].sectionTitle\r\n              : null\r\n            : null,\r\n          suggestions: saltCaveSuggestionsArguments[i]\r\n            ? saltCaveSuggestionsArguments[i].suggestions\r\n                .sort((a, b) => (a.name ? a.name.localeCompare(b.name) : null))\r\n                .filter((x) => {\r\n                  const treatmentName = x.name;\r\n\r\n                  if (\r\n                    treatmentName.toLowerCase().slice(0, inputLength) ===\r\n                    inputValue\r\n                  ) {\r\n                    return (\r\n                      treatmentName.toLowerCase().slice(0, inputLength) ===\r\n                      inputValue\r\n                    );\r\n                  } else {\r\n                    return null;\r\n                  }\r\n                })\r\n            : null,\r\n        });\r\n        return sortedArr;\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"admin_create_appointment_input_information_container\"\r\n      style={{\r\n        borderLeft: \"1px solid rgb(211, 211, 211)\",\r\n      }}\r\n    >\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <Autosuggest\r\n          suggestions={saltCaveInputSuggestions}\r\n          onSuggestionsFetchRequested={onSaltCaveSuggestionsFetchRequested}\r\n          onSuggestionsClearRequested={onSaltCaveSuggestionsClearRequested}\r\n          getSuggestionValue={getSaltCaveSuggestionValue}\r\n          renderSuggestion={renderSaltCaveSuggestion}\r\n          inputProps={saltCaveInputProps}\r\n          shouldRenderSuggestions={() => true}\r\n          focusInputOnSuggestionClick={false}\r\n          multiSection={true}\r\n          renderSectionTitle={(section) => renderSectionTitle(section)}\r\n          getSectionSuggestions={(section) => getSectionSuggestions(section)}\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          autoComplete=\"off\"\r\n          aria-autocomplete=\"list\"\r\n          aria-controls=\"react-autowhatever-1\"\r\n          className=\"react-autosuggest__input\"\r\n          style={{\r\n            borderLeft: \"1px solid transparent\",\r\n            borderRight: \"1px solid transparent\",\r\n          }}\r\n        />\r\n      </div>\r\n      <div\r\n        role=\"combobox\"\r\n        aria-haspopup=\"listbox\"\r\n        aria-owns=\"react-autowhatever-1\"\r\n        aria-controls=\"react-autowhatever-1\"\r\n        aria-expanded=\"false\"\r\n        className=\"react-autosuggest__container\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          autoComplete=\"off\"\r\n          aria-autocomplete=\"list\"\r\n          aria-controls=\"react-autowhatever-1\"\r\n          className=\"react-autosuggest__input\"\r\n          style={{\r\n            borderLeft: \"1px solid transparent\",\r\n          }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SaltCaveAutosuggest;\r\n"]},"metadata":{},"sourceType":"module"}