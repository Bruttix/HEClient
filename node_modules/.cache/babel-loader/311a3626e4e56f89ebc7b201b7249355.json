{"ast":null,"code":"import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from\"react\";import{Redirect,Link}from\"react-router-dom\";import{faChevronLeft}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{useSelector,useDispatch}from\"react-redux\";import Dropdown from\"react-dropdown\";import AdminCalendarComponent from\"./AdminCalendarComponent\";import AdminCreateAppointment from\"./AdminCreateAppointment/AdminCreateAppointment\";import AdminPersonalEvent from\"./AdminPersonalEvent/AdminPersonalEvent\";import ACTION_ADMIN_APPOINTMENT_TIME from\"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentTime/ACTION_ADMIN_APPOINTMENT_TIME\";import ACTION_ADMIN_APPOINTMENT_DATE from\"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDate/ACTION_ADMIN_APPOINTMENT_DATE\";import ACTION_ADMIN_PERSONAL_EVENT_STAFF from\"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";import ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER from\"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentStaffMember/ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER\";import ACTION_ADMIN_PERSONAL_EVENT_DATE from\"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";import ACTION_ADMIN_PERSONAL_EVENT_START_TIME from\"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";import ACTION_ADMIN_PERSONAL_EVENT_END_TIME from\"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";import ACTION_ON_ACTIVITY_PAGE_RESET from\"../../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE_RESET\";import\"./AdminSchedule.css\";import\"../../payment_info/PaymentInfo.css\";const AdminSchedule=props=>{const dispatch=useDispatch();const getEmployeesData=props.getEmployeesData,getEmployeeData=props.getEmployeeData,getEmployeeError=props.getEmployeeError,getEmployeesError=props.getEmployeesError,employeeDataRefetch=props.employeeDataRefetch,getEmployeesRefetch=props.getEmployeesRefetch,resetNotifications=props.resetNotifications,initialScreenSize=props.initialScreenSize,currentScreenSize=props.currentScreenSize,getClientsData=props.getClientsData,getClientsRefetch=props.getClientsRefetch,randomColorArray=props.randomColorArray,getAllAppointmentsData=props.getAllAppointmentsData,getAllAppointmentsRefetch=props.getAllAppointmentsRefetch,getAllPersonalEventsData=props.getAllPersonalEventsData,getAllPersonalEventsRefetch=props.getAllPersonalEventsRefetch;const logoutClicked=useSelector(state=>state.logoutClicked.log_out_clicked);const adminAuthenticated=useSelector(state=>state.adminAuthenticated.admin_authenticated);const loadingSpinnerActive=useSelector(state=>state.loadingSpinnerActive.loading_spinner);const adminAppointmentStaffMember=useSelector(state=>state.adminAppointmentStaffMember.admin_appointment_staff_member);const cancelAppointmentClicked=useSelector(state=>state.cancelAppointmentClicked.cancelAppointmentClicked);const onActivityPage=useSelector(state=>state.onActivityPage.on_activity_page);const adminNotifications=useSelector(state=>state.adminNotifications.notifications);const _useState=useState(false),_useState2=_slicedToArray(_useState,2),createAppointmentClicked=_useState2[0],changeCreateAppointmentClicked=_useState2[1];const _useState3=useState(\"My Schedule\"),_useState4=_slicedToArray(_useState3,2),currentScheduleShown=_useState4[0],changeCurrentScheduleShown=_useState4[1];const _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),personalEventClicked=_useState6[0],changePersonalEventClicked=_useState6[1];const _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),stopTransition=_useState8[0],changeStopTransition=_useState8[1];const timeHeader=document.getElementsByClassName(\"rbc-time-header-content\");const redirectToAdminLogInPage=()=>{if(!adminAuthenticated){return/*#__PURE__*/React.createElement(Redirect,{to:\"/admin\"});}};const handleCreateAppointmentToggled=(startTime,endTime,date)=>{changeCreateAppointmentClicked(true);dispatch(ACTION_ADMIN_APPOINTMENT_TIME(startTime));dispatch(ACTION_ADMIN_APPOINTMENT_DATE(date));dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME(startTime));dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(endTime));dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(date));};const timeOptions=()=>{const minutesArr=[\"00\",\"15\",\"30\",\"45\"];const allTimeArr=[];for(let i=0;i<24;i++){for(let j=0;j<minutesArr.length;j++){allTimeArr.push((i>12?i-12:i===0?\"12\":i)+\":\"+minutesArr[j]+\" \"+(i>11?\"PM\":\"AM\"));}}return allTimeArr;};const employeeOptions=useCallback(()=>{if(getEmployeesData){if(getEmployeesData.employees){const estheticians=getEmployeesData.employees.filter(employee=>employee.employeeRole.includes(\"Esthetician\"));return estheticians.map(esthetician=>esthetician.firstName[0].toUpperCase()+esthetician.firstName.slice(1).toLowerCase()+\" \"+esthetician.lastName[0].toUpperCase()+esthetician.lastName.slice(1).toLowerCase());}}},[getEmployeesData]);const allEmployeeOptions=useCallback(()=>{if(getEmployeesData){if(getEmployeesData.employees){const allStaff=getEmployeesData.employees;return allStaff.map(staff=>staff.firstName[0].toUpperCase()+staff.firstName.slice(1).toLowerCase()+\" \"+staff.lastName[0].toUpperCase()+staff.lastName.slice(1).toLowerCase());}}},[getEmployeesData]);const renderLoggedInStaffName=()=>{if(getEmployeeData){if(getEmployeeData.employee){return[getEmployeeData.employee.firstName[0].toUpperCase()+getEmployeeData.employee.firstName.slice(1).toLowerCase()+\" \"+getEmployeeData.employee.lastName[0].toUpperCase()+getEmployeeData.employee.lastName.slice(1).toLowerCase()];}}};const renderScheduleSelectionDropdownOptions=()=>{if(getEmployeeData){if(getEmployeeData.employee){if(getEmployeeData.employee.employeeRole.includes(\"Admin\")){if(getEmployeesData){if(getEmployeesData.employees){const allStaff=getEmployeesData.employees;const newArr=[\"Salt Cave Schedule\"];if(allStaff){for(let i=0;i<allStaff.length;i++){const loggedInEmployeeFullName=getEmployeeData.employee.firstName[0].toUpperCase()+getEmployeeData.employee.firstName.slice(1).toLowerCase()+\" \"+getEmployeeData.employee.lastName[0].toUpperCase()+getEmployeeData.employee.lastName.slice(1).toLowerCase();const currentIndexFullName=allStaff[i].firstName[0].toUpperCase()+allStaff[i].firstName.slice(1).toLowerCase()+\" \"+allStaff[i].lastName[0].toUpperCase()+allStaff[i].lastName.slice(1).toLowerCase();if(loggedInEmployeeFullName===currentIndexFullName){newArr.unshift(\"My Schedule\");}else{newArr.push(currentIndexFullName+\"'s Schedule\");}}return newArr;}}else{return[\"My Schedule\"];}}else{return[\"My Schedule\"];}}else{return[\"My Schedule\"];}}else{return[\"My Schedule\"];}}else{return[\"My Schedule\"];}};useEffect(()=>{if(getEmployeeData){if(getEmployeeData.employee){const currentEmployee=getEmployeeData.employee;if(currentScheduleShown===\"My Schedule\"){if(!createAppointmentClicked){dispatch(ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(currentEmployee.firstName[0].toUpperCase()+currentEmployee.firstName.slice(1).toLowerCase()+\" \"+currentEmployee.lastName[0].toUpperCase()+currentEmployee.lastName.slice(1).toLowerCase()));dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(currentEmployee.firstName[0].toUpperCase()+currentEmployee.firstName.slice(1).toLowerCase()+\" \"+currentEmployee.lastName[0].toUpperCase()+currentEmployee.lastName.slice(1).toLowerCase()));}}else{const currentScheduleEmployee=currentScheduleShown.split(\"'\")[0];const currentScheduleFirstName=currentScheduleEmployee.split(\" \")[0];const currentScheduleLastName=currentScheduleEmployee.split(\" \")[1];if(!createAppointmentClicked){dispatch(ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(currentScheduleFirstName[0].toUpperCase()+currentScheduleFirstName.slice(1).toLowerCase()+\" \"+currentScheduleLastName[0].toUpperCase()+currentScheduleLastName.slice(1).toLowerCase()));dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(currentScheduleFirstName[0].toUpperCase()+currentScheduleFirstName.slice(1).toLowerCase()+\" \"+currentScheduleLastName[0].toUpperCase()+currentScheduleLastName.slice(1).toLowerCase()));}}}}},[dispatch,getEmployeeData,employeeOptions,adminAppointmentStaffMember,currentScheduleShown,createAppointmentClicked]);useEffect(()=>{if(onActivityPage){if(adminNotifications){if(adminNotifications.length>0){if(adminNotifications.some(item=>item.new)){resetNotifications();}}}dispatch(ACTION_ON_ACTIVITY_PAGE_RESET());}},[onActivityPage,dispatch,resetNotifications,adminNotifications]);// Styles react-big-calendar top header on select days\nuseEffect(()=>{const dayToday=new Date().getDay();// If not Saturday or Sunday, adjust header flex attribute\nif(dayToday>0){if(timeHeader){if(timeHeader[0]){timeHeader[0].style.flex=1;}}}else{if(timeHeader){if(timeHeader[0]){timeHeader[0].style.flex=0.99;}}}},[timeHeader]);useEffect(()=>{if(getEmployeeError){employeeDataRefetch();}},[getEmployeeError,employeeDataRefetch]);useEffect(()=>{if(getEmployeesError){getEmployeesRefetch();}},[getEmployeesError,getEmployeesRefetch]);return/*#__PURE__*/React.createElement(\"div\",{className:\"admin_schedule_container\"},redirectToAdminLogInPage(),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_schedule_header\",style:{zIndex:logoutClicked||loadingSpinnerActive||cancelAppointmentClicked?0:5}},/*#__PURE__*/React.createElement(Link,{to:\"/admin/menu\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"admin_schedule_back_arrow\",icon:faChevronLeft})),/*#__PURE__*/React.createElement(\"h1\",null,\"SCHEDULE\")),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_calendar_top_buttons_container\"},getEmployeeData?getEmployeeData.employee?/*#__PURE__*/React.createElement(Dropdown,{options:renderScheduleSelectionDropdownOptions(),onChange:choice=>changeCurrentScheduleShown(choice.value),value:currentScheduleShown,controlClassName:\"react-autosuggest__input\",className:\"react-autosuggest__container\",placeholder:currentScheduleShown?currentScheduleShown:\"Choose a Schedule\",placeholderClassName:currentScheduleShown?\"admin_create_appointent_dropdown_placeholder_time\":\"admin_create_appointent_dropdown_placeholder_no_time\"}):null:null,/*#__PURE__*/React.createElement(\"div\",{className:\"admin_calendar_create_personal_event_button\",onClick:()=>changePersonalEventClicked(true)},/*#__PURE__*/React.createElement(\"p\",null,\"Create Personal Event\")),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_calendar_create_appointment_button\",onClick:()=>changeCreateAppointmentClicked(true)},/*#__PURE__*/React.createElement(\"p\",null,\"Create Appointment\"))),/*#__PURE__*/React.createElement(AdminCreateAppointment,{personalEventClicked:personalEventClicked,createAppointmentClicked:createAppointmentClicked,changeCreateAppointmentClicked:changeCreateAppointmentClicked,changePersonalEventClicked:changePersonalEventClicked,getEmployeeData:getEmployeeData,getClientsData:getClientsData,getClientsRefetch:getClientsRefetch,getAllAppointmentsData:getAllAppointmentsData,randomColorArray:randomColorArray,getAllAppointmentsRefetch:getAllAppointmentsRefetch,timeOptions:timeOptions,allEmployeeOptions:allEmployeeOptions,changeStopTransition:changeStopTransition,stopTransition:stopTransition,renderLoggedInStaffName:renderLoggedInStaffName}),/*#__PURE__*/React.createElement(AdminPersonalEvent,{getAllPersonalEventsRefetch:getAllPersonalEventsRefetch,personalEventClicked:personalEventClicked,createAppointmentClicked:createAppointmentClicked,changePersonalEventClicked:changePersonalEventClicked,changeCreateAppointmentClicked:changeCreateAppointmentClicked,timeOptions:timeOptions,allEmployeeOptions:allEmployeeOptions,getEmployeeData:getEmployeeData,changeStopTransition:changeStopTransition,stopTransition:stopTransition,initialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,renderLoggedInStaffName:renderLoggedInStaffName}),/*#__PURE__*/React.createElement(AdminCalendarComponent,{getAllAppointmentsData:getAllAppointmentsData,getEmployeeData:getEmployeeData,getAllPersonalEventsData:getAllPersonalEventsData,getAllPersonalEventsRefetch:getAllPersonalEventsRefetch,handleCreateAppointmentToggled:handleCreateAppointmentToggled,getAllAppointmentsRefetch:getAllAppointmentsRefetch,intialScreenSize:initialScreenSize,currentScreenSize:currentScreenSize,allEmployeeOptions:allEmployeeOptions,timeOptions:timeOptions,createAppointmentClicked:createAppointmentClicked,personalEventClicked:personalEventClicked,currentScheduleShown:currentScheduleShown}));};export default AdminSchedule;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminSchedule/AdminSchedule.js"],"names":["React","useState","useEffect","useCallback","Redirect","Link","faChevronLeft","FontAwesomeIcon","useSelector","useDispatch","Dropdown","AdminCalendarComponent","AdminCreateAppointment","AdminPersonalEvent","ACTION_ADMIN_APPOINTMENT_TIME","ACTION_ADMIN_APPOINTMENT_DATE","ACTION_ADMIN_PERSONAL_EVENT_STAFF","ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER","ACTION_ADMIN_PERSONAL_EVENT_DATE","ACTION_ADMIN_PERSONAL_EVENT_START_TIME","ACTION_ADMIN_PERSONAL_EVENT_END_TIME","ACTION_ON_ACTIVITY_PAGE_RESET","AdminSchedule","props","dispatch","getEmployeesData","getEmployeeData","getEmployeeError","getEmployeesError","employeeDataRefetch","getEmployeesRefetch","resetNotifications","initialScreenSize","currentScreenSize","getClientsData","getClientsRefetch","randomColorArray","getAllAppointmentsData","getAllAppointmentsRefetch","getAllPersonalEventsData","getAllPersonalEventsRefetch","logoutClicked","state","log_out_clicked","adminAuthenticated","admin_authenticated","loadingSpinnerActive","loading_spinner","adminAppointmentStaffMember","admin_appointment_staff_member","cancelAppointmentClicked","onActivityPage","on_activity_page","adminNotifications","notifications","createAppointmentClicked","changeCreateAppointmentClicked","currentScheduleShown","changeCurrentScheduleShown","personalEventClicked","changePersonalEventClicked","stopTransition","changeStopTransition","timeHeader","document","getElementsByClassName","redirectToAdminLogInPage","handleCreateAppointmentToggled","startTime","endTime","date","timeOptions","minutesArr","allTimeArr","i","j","length","push","employeeOptions","employees","estheticians","filter","employee","employeeRole","includes","map","esthetician","firstName","toUpperCase","slice","toLowerCase","lastName","allEmployeeOptions","allStaff","staff","renderLoggedInStaffName","renderScheduleSelectionDropdownOptions","newArr","loggedInEmployeeFullName","currentIndexFullName","unshift","currentEmployee","currentScheduleEmployee","split","currentScheduleFirstName","currentScheduleLastName","some","item","new","dayToday","Date","getDay","style","flex","zIndex","choice","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport AdminCalendarComponent from \"./AdminCalendarComponent\";\r\nimport AdminCreateAppointment from \"./AdminCreateAppointment/AdminCreateAppointment\";\r\nimport AdminPersonalEvent from \"./AdminPersonalEvent/AdminPersonalEvent\";\r\nimport ACTION_ADMIN_APPOINTMENT_TIME from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentTime/ACTION_ADMIN_APPOINTMENT_TIME\";\r\nimport ACTION_ADMIN_APPOINTMENT_DATE from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDate/ACTION_ADMIN_APPOINTMENT_DATE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";\r\nimport ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentStaffMember/ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";\r\nimport ACTION_ON_ACTIVITY_PAGE_RESET from \"../../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE_RESET\";\r\nimport \"./AdminSchedule.css\";\r\nimport \"../../payment_info/PaymentInfo.css\";\r\n\r\nconst AdminSchedule = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    getEmployeesData,\r\n    getEmployeeData,\r\n    getEmployeeError,\r\n    getEmployeesError,\r\n    employeeDataRefetch,\r\n    getEmployeesRefetch,\r\n    resetNotifications,\r\n    initialScreenSize,\r\n    currentScreenSize,\r\n    getClientsData,\r\n    getClientsRefetch,\r\n    randomColorArray,\r\n    getAllAppointmentsData,\r\n    getAllAppointmentsRefetch,\r\n    getAllPersonalEventsData,\r\n    getAllPersonalEventsRefetch,\r\n  } = props;\r\n\r\n  const logoutClicked = useSelector(\r\n    (state) => state.logoutClicked.log_out_clicked\r\n  );\r\n  const adminAuthenticated = useSelector(\r\n    (state) => state.adminAuthenticated.admin_authenticated\r\n  );\r\n  const loadingSpinnerActive = useSelector(\r\n    (state) => state.loadingSpinnerActive.loading_spinner\r\n  );\r\n  const adminAppointmentStaffMember = useSelector(\r\n    (state) => state.adminAppointmentStaffMember.admin_appointment_staff_member\r\n  );\r\n  const cancelAppointmentClicked = useSelector(\r\n    (state) => state.cancelAppointmentClicked.cancelAppointmentClicked\r\n  );\r\n  const onActivityPage = useSelector(\r\n    (state) => state.onActivityPage.on_activity_page\r\n  );\r\n  const adminNotifications = useSelector(\r\n    (state) => state.adminNotifications.notifications\r\n  );\r\n\r\n  const [createAppointmentClicked, changeCreateAppointmentClicked] = useState(\r\n    false\r\n  );\r\n  const [currentScheduleShown, changeCurrentScheduleShown] = useState(\r\n    \"My Schedule\"\r\n  );\r\n  const [personalEventClicked, changePersonalEventClicked] = useState(false);\r\n  const [stopTransition, changeStopTransition] = useState(false);\r\n\r\n  const timeHeader = document.getElementsByClassName(\"rbc-time-header-content\");\r\n\r\n  const redirectToAdminLogInPage = () => {\r\n    if (!adminAuthenticated) {\r\n      return <Redirect to=\"/admin\" />;\r\n    }\r\n  };\r\n\r\n  const handleCreateAppointmentToggled = (startTime, endTime, date) => {\r\n    changeCreateAppointmentClicked(true);\r\n    dispatch(ACTION_ADMIN_APPOINTMENT_TIME(startTime));\r\n    dispatch(ACTION_ADMIN_APPOINTMENT_DATE(date));\r\n\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME(startTime));\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(endTime));\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(date));\r\n  };\r\n\r\n  const timeOptions = () => {\r\n    const minutesArr = [\"00\", \"15\", \"30\", \"45\"];\r\n    const allTimeArr = [];\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n      for (let j = 0; j < minutesArr.length; j++) {\r\n        allTimeArr.push(\r\n          (i > 12 ? i - 12 : i === 0 ? \"12\" : i) +\r\n            \":\" +\r\n            minutesArr[j] +\r\n            \" \" +\r\n            (i > 11 ? \"PM\" : \"AM\")\r\n        );\r\n      }\r\n    }\r\n\r\n    return allTimeArr;\r\n  };\r\n\r\n  const employeeOptions = useCallback(() => {\r\n    if (getEmployeesData) {\r\n      if (getEmployeesData.employees) {\r\n        const estheticians = getEmployeesData.employees.filter((employee) =>\r\n          employee.employeeRole.includes(\"Esthetician\")\r\n        );\r\n\r\n        return estheticians.map(\r\n          (esthetician) =>\r\n            esthetician.firstName[0].toUpperCase() +\r\n            esthetician.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            esthetician.lastName[0].toUpperCase() +\r\n            esthetician.lastName.slice(1).toLowerCase()\r\n        );\r\n      }\r\n    }\r\n  }, [getEmployeesData]);\r\n\r\n  const allEmployeeOptions = useCallback(() => {\r\n    if (getEmployeesData) {\r\n      if (getEmployeesData.employees) {\r\n        const allStaff = getEmployeesData.employees;\r\n\r\n        return allStaff.map(\r\n          (staff) =>\r\n            staff.firstName[0].toUpperCase() +\r\n            staff.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            staff.lastName[0].toUpperCase() +\r\n            staff.lastName.slice(1).toLowerCase()\r\n        );\r\n      }\r\n    }\r\n  }, [getEmployeesData]);\r\n\r\n  const renderLoggedInStaffName = () => {\r\n    if (getEmployeeData) {\r\n      if (getEmployeeData.employee) {\r\n        return [\r\n          getEmployeeData.employee.firstName[0].toUpperCase() +\r\n            getEmployeeData.employee.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            getEmployeeData.employee.lastName[0].toUpperCase() +\r\n            getEmployeeData.employee.lastName.slice(1).toLowerCase(),\r\n        ];\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderScheduleSelectionDropdownOptions = () => {\r\n    if (getEmployeeData) {\r\n      if (getEmployeeData.employee) {\r\n        if (getEmployeeData.employee.employeeRole.includes(\"Admin\")) {\r\n          if (getEmployeesData) {\r\n            if (getEmployeesData.employees) {\r\n              const allStaff = getEmployeesData.employees;\r\n\r\n              const newArr = [\"Salt Cave Schedule\"];\r\n\r\n              if (allStaff) {\r\n                for (let i = 0; i < allStaff.length; i++) {\r\n                  const loggedInEmployeeFullName =\r\n                    getEmployeeData.employee.firstName[0].toUpperCase() +\r\n                    getEmployeeData.employee.firstName.slice(1).toLowerCase() +\r\n                    \" \" +\r\n                    getEmployeeData.employee.lastName[0].toUpperCase() +\r\n                    getEmployeeData.employee.lastName.slice(1).toLowerCase();\r\n\r\n                  const currentIndexFullName =\r\n                    allStaff[i].firstName[0].toUpperCase() +\r\n                    allStaff[i].firstName.slice(1).toLowerCase() +\r\n                    \" \" +\r\n                    allStaff[i].lastName[0].toUpperCase() +\r\n                    allStaff[i].lastName.slice(1).toLowerCase();\r\n\r\n                  if (loggedInEmployeeFullName === currentIndexFullName) {\r\n                    newArr.unshift(\"My Schedule\");\r\n                  } else {\r\n                    newArr.push(currentIndexFullName + \"'s Schedule\");\r\n                  }\r\n                }\r\n\r\n                return newArr;\r\n              }\r\n            } else {\r\n              return [\"My Schedule\"];\r\n            }\r\n          } else {\r\n            return [\"My Schedule\"];\r\n          }\r\n        } else {\r\n          return [\"My Schedule\"];\r\n        }\r\n      } else {\r\n        return [\"My Schedule\"];\r\n      }\r\n    } else {\r\n      return [\"My Schedule\"];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getEmployeeData) {\r\n      if (getEmployeeData.employee) {\r\n        const currentEmployee = getEmployeeData.employee;\r\n\r\n        if (currentScheduleShown === \"My Schedule\") {\r\n          if (!createAppointmentClicked) {\r\n            dispatch(\r\n              ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(\r\n                currentEmployee.firstName[0].toUpperCase() +\r\n                  currentEmployee.firstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentEmployee.lastName[0].toUpperCase() +\r\n                  currentEmployee.lastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n\r\n            dispatch(\r\n              ACTION_ADMIN_PERSONAL_EVENT_STAFF(\r\n                currentEmployee.firstName[0].toUpperCase() +\r\n                  currentEmployee.firstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentEmployee.lastName[0].toUpperCase() +\r\n                  currentEmployee.lastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n          }\r\n        } else {\r\n          const currentScheduleEmployee = currentScheduleShown.split(\"'\")[0];\r\n          const currentScheduleFirstName = currentScheduleEmployee.split(\r\n            \" \"\r\n          )[0];\r\n          const currentScheduleLastName = currentScheduleEmployee.split(\" \")[1];\r\n\r\n          if (!createAppointmentClicked) {\r\n            dispatch(\r\n              ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(\r\n                currentScheduleFirstName[0].toUpperCase() +\r\n                  currentScheduleFirstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentScheduleLastName[0].toUpperCase() +\r\n                  currentScheduleLastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n\r\n            dispatch(\r\n              ACTION_ADMIN_PERSONAL_EVENT_STAFF(\r\n                currentScheduleFirstName[0].toUpperCase() +\r\n                  currentScheduleFirstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentScheduleLastName[0].toUpperCase() +\r\n                  currentScheduleLastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    getEmployeeData,\r\n    employeeOptions,\r\n    adminAppointmentStaffMember,\r\n    currentScheduleShown,\r\n    createAppointmentClicked,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (onActivityPage) {\r\n      if (adminNotifications) {\r\n        if (adminNotifications.length > 0) {\r\n          if (adminNotifications.some((item) => item.new)) {\r\n            resetNotifications();\r\n          }\r\n        }\r\n      }\r\n      dispatch(ACTION_ON_ACTIVITY_PAGE_RESET());\r\n    }\r\n  }, [onActivityPage, dispatch, resetNotifications, adminNotifications]);\r\n\r\n  // Styles react-big-calendar top header on select days\r\n  useEffect(() => {\r\n    const dayToday = new Date().getDay();\r\n\r\n    // If not Saturday or Sunday, adjust header flex attribute\r\n    if (dayToday > 0) {\r\n      if (timeHeader) {\r\n        if (timeHeader[0]) {\r\n          timeHeader[0].style.flex = 1;\r\n        }\r\n      }\r\n    } else {\r\n      if (timeHeader) {\r\n        if (timeHeader[0]) {\r\n          timeHeader[0].style.flex = 0.99;\r\n        }\r\n      }\r\n    }\r\n  }, [timeHeader]);\r\n\r\n  useEffect(() => {\r\n    if (getEmployeeError) {\r\n      employeeDataRefetch();\r\n    }\r\n  }, [getEmployeeError, employeeDataRefetch]);\r\n\r\n  useEffect(() => {\r\n    if (getEmployeesError) {\r\n      getEmployeesRefetch();\r\n    }\r\n  }, [getEmployeesError, getEmployeesRefetch]);\r\n\r\n  return (\r\n    <div className=\"admin_schedule_container\">\r\n      {redirectToAdminLogInPage()}\r\n      <div\r\n        className=\"admin_schedule_header\"\r\n        style={{\r\n          zIndex:\r\n            logoutClicked || loadingSpinnerActive || cancelAppointmentClicked\r\n              ? 0\r\n              : 5,\r\n        }}\r\n      >\r\n        <Link to=\"/admin/menu\">\r\n          <FontAwesomeIcon\r\n            className=\"admin_schedule_back_arrow\"\r\n            icon={faChevronLeft}\r\n          />\r\n        </Link>\r\n        <h1>SCHEDULE</h1>\r\n      </div>\r\n      <div className=\"admin_calendar_top_buttons_container\">\r\n        {getEmployeeData ? (\r\n          getEmployeeData.employee ? (\r\n            <Dropdown\r\n              options={renderScheduleSelectionDropdownOptions()}\r\n              onChange={(choice) => changeCurrentScheduleShown(choice.value)}\r\n              value={currentScheduleShown}\r\n              controlClassName=\"react-autosuggest__input\"\r\n              className=\"react-autosuggest__container\"\r\n              placeholder={\r\n                currentScheduleShown\r\n                  ? currentScheduleShown\r\n                  : \"Choose a Schedule\"\r\n              }\r\n              placeholderClassName={\r\n                currentScheduleShown\r\n                  ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                  : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n              }\r\n            />\r\n          ) : null\r\n        ) : null}\r\n        <div\r\n          className=\"admin_calendar_create_personal_event_button\"\r\n          onClick={() => changePersonalEventClicked(true)}\r\n        >\r\n          <p>Create Personal Event</p>\r\n        </div>\r\n        <div\r\n          className=\"admin_calendar_create_appointment_button\"\r\n          onClick={() => changeCreateAppointmentClicked(true)}\r\n        >\r\n          <p>Create Appointment</p>\r\n        </div>\r\n      </div>\r\n      <AdminCreateAppointment\r\n        personalEventClicked={personalEventClicked}\r\n        createAppointmentClicked={createAppointmentClicked}\r\n        changeCreateAppointmentClicked={changeCreateAppointmentClicked}\r\n        changePersonalEventClicked={changePersonalEventClicked}\r\n        getEmployeeData={getEmployeeData}\r\n        getClientsData={getClientsData}\r\n        getClientsRefetch={getClientsRefetch}\r\n        getAllAppointmentsData={getAllAppointmentsData}\r\n        randomColorArray={randomColorArray}\r\n        getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n        timeOptions={timeOptions}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        changeStopTransition={changeStopTransition}\r\n        stopTransition={stopTransition}\r\n        renderLoggedInStaffName={renderLoggedInStaffName}\r\n      />\r\n      <AdminPersonalEvent\r\n        getAllPersonalEventsRefetch={getAllPersonalEventsRefetch}\r\n        personalEventClicked={personalEventClicked}\r\n        createAppointmentClicked={createAppointmentClicked}\r\n        changePersonalEventClicked={changePersonalEventClicked}\r\n        changeCreateAppointmentClicked={changeCreateAppointmentClicked}\r\n        timeOptions={timeOptions}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        getEmployeeData={getEmployeeData}\r\n        changeStopTransition={changeStopTransition}\r\n        stopTransition={stopTransition}\r\n        initialScreenSize={initialScreenSize}\r\n        currentScreenSize={currentScreenSize}\r\n        renderLoggedInStaffName={renderLoggedInStaffName}\r\n      />\r\n      <AdminCalendarComponent\r\n        getAllAppointmentsData={getAllAppointmentsData}\r\n        getEmployeeData={getEmployeeData}\r\n        getAllPersonalEventsData={getAllPersonalEventsData}\r\n        getAllPersonalEventsRefetch={getAllPersonalEventsRefetch}\r\n        handleCreateAppointmentToggled={handleCreateAppointmentToggled}\r\n        getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n        intialScreenSize={initialScreenSize}\r\n        currentScreenSize={currentScreenSize}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        timeOptions={timeOptions}\r\n        createAppointmentClicked={createAppointmentClicked}\r\n        personalEventClicked={personalEventClicked}\r\n        currentScheduleShown={currentScheduleShown}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSchedule;\r\n"]},"metadata":{},"sourceType":"module"}