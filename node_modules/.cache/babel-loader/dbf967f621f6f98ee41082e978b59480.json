{"ast":null,"code":"var _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\admin\\\\AdminLogin\\\\AdminNewPassword\\\\AdminNewPassword.js\";\nimport React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\nimport ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Invalid/ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID\";\nimport ACTION_ADMIN_NEW_PASSWORD from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/ACTION_ADMIN_NEW_PASSWORD\";\nimport ACTION_ADMIN_NEW_PASSWORD_INVALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Invalid/ACTION_ADMIN_NEW_PASSWORD_INVALID\";\nimport ACTION_ADMIN_NEW_PASSWORD_VALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Valid/ACTION_ADMIN_NEW_PASSWORD_VALID\";\nimport ACTION_ADMIN_NEW_PASSWORD_NOT_VALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Valid/ACTION_ADMIN_NEW_PASSWORD_NOT_VALID\";\nimport ACTION_ADMIN_NEW_PASSWORD_RESET from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/ACTION_ADMIN_NEW_PASSWORD_RESET\";\nimport \"../AdminLoginPage.css\";\n\nconst AdminNewPassword = () => {\n  const dispatch = useDispatch(); // Admin New Password States\n\n  const adminNewPassword = useSelector(state => state.adminNewPassword.admin_new_password);\n  const adminNewPasswordInvalid = useSelector(state => state.adminNewPasswordInvalid.admin_new_password_invalid);\n  const adminNewPasswordValid = useSelector(state => state.adminNewPasswordValid.admin_new_password_valid);\n\n  const adminPasswordTyping = () => {\n    dispatch(ACTION_ADMIN_NEW_PASSWORD_RESET());\n    dispatch(ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID());\n  }; // Regular Expression for Password Validation - must be at least 8 characters long, must contain at least 1 lowercase character, 1 uppercase character, and 1 number\n\n\n  const passwordReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\n\n  const validatePassword = e => {\n    const validPassword = passwordReg.test(e.currentTarget.value);\n    dispatch(ACTION_ADMIN_NEW_PASSWORD(e.currentTarget.value.trim()));\n\n    if (validPassword) {\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID());\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_VALID());\n    } else {\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_INVALID());\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_NOT_VALID());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"adminLoginPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, \"New Password\")), /*#__PURE__*/React.createElement(Input, {\n    type: \"password\",\n    name: \"createNewAdminPassword\",\n    defaultValue: adminNewPassword,\n    maxLength: 128,\n    placeholder: \"Enter new password here\",\n    className: \"input_field_sign_up\",\n    onChange: adminPasswordTyping,\n    onBlur: validatePassword,\n    invalid: adminNewPassword === \"\" ? false : adminNewPasswordInvalid ? true : false,\n    valid: adminNewPassword === \"\" ? false : adminNewPasswordValid ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), adminNewPassword.length < 8 ? /*#__PURE__*/React.createElement(FormFeedback, {\n    className: \"invalid_message_container\",\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, \"Password must be at least 8 characters long.\") : /*#__PURE__*/React.createElement(FormFeedback, {\n    className: \"invalid_message_container\",\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Password must contain at least 1 lowercase character, 1 uppercase character, and 1 number.\"));\n};\n\nexport default AdminNewPassword;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminLogin/AdminNewPassword/AdminNewPassword.js"],"names":["React","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID","ACTION_ADMIN_NEW_PASSWORD","ACTION_ADMIN_NEW_PASSWORD_INVALID","ACTION_ADMIN_NEW_PASSWORD_VALID","ACTION_ADMIN_NEW_PASSWORD_NOT_VALID","ACTION_ADMIN_NEW_PASSWORD_RESET","AdminNewPassword","dispatch","adminNewPassword","state","admin_new_password","adminNewPasswordInvalid","admin_new_password_invalid","adminNewPasswordValid","admin_new_password_valid","adminPasswordTyping","passwordReg","validatePassword","e","validPassword","test","currentTarget","value","trim","length"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Invalid/ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID\";\r\nimport ACTION_ADMIN_NEW_PASSWORD from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/ACTION_ADMIN_NEW_PASSWORD\";\r\nimport ACTION_ADMIN_NEW_PASSWORD_INVALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Invalid/ACTION_ADMIN_NEW_PASSWORD_INVALID\";\r\nimport ACTION_ADMIN_NEW_PASSWORD_VALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Valid/ACTION_ADMIN_NEW_PASSWORD_VALID\";\r\nimport ACTION_ADMIN_NEW_PASSWORD_NOT_VALID from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/Valid/ACTION_ADMIN_NEW_PASSWORD_NOT_VALID\";\r\nimport ACTION_ADMIN_NEW_PASSWORD_RESET from \"../../../../actions/Admin/AdminLogin/AdminNewPassword/ACTION_ADMIN_NEW_PASSWORD_RESET\";\r\nimport \"../AdminLoginPage.css\";\r\n\r\nconst AdminNewPassword = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Admin New Password States\r\n  const adminNewPassword = useSelector(\r\n    (state) => state.adminNewPassword.admin_new_password\r\n  );\r\n  const adminNewPasswordInvalid = useSelector(\r\n    (state) => state.adminNewPasswordInvalid.admin_new_password_invalid\r\n  );\r\n  const adminNewPasswordValid = useSelector(\r\n    (state) => state.adminNewPasswordValid.admin_new_password_valid\r\n  );\r\n\r\n  const adminPasswordTyping = () => {\r\n    dispatch(ACTION_ADMIN_NEW_PASSWORD_RESET());\r\n    dispatch(ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID());\r\n  };\r\n\r\n  // Regular Expression for Password Validation - must be at least 8 characters long, must contain at least 1 lowercase character, 1 uppercase character, and 1 number\r\n  const passwordReg = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$/;\r\n\r\n  const validatePassword = (e) => {\r\n    const validPassword = passwordReg.test(e.currentTarget.value);\r\n    dispatch(ACTION_ADMIN_NEW_PASSWORD(e.currentTarget.value.trim()));\r\n\r\n    if (validPassword) {\r\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_NOT_INVALID());\r\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_VALID());\r\n    } else {\r\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_INVALID());\r\n      dispatch(ACTION_ADMIN_NEW_PASSWORD_NOT_VALID());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormGroup>\r\n      <Label for=\"adminLoginPassword\">\r\n        <div className=\"required_label\">New Password</div>\r\n      </Label>\r\n      <Input\r\n        type=\"password\"\r\n        name=\"createNewAdminPassword\"\r\n        defaultValue={adminNewPassword}\r\n        maxLength={128}\r\n        placeholder=\"Enter new password here\"\r\n        className=\"input_field_sign_up\"\r\n        onChange={adminPasswordTyping}\r\n        onBlur={validatePassword}\r\n        invalid={\r\n          adminNewPassword === \"\"\r\n            ? false\r\n            : adminNewPasswordInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          adminNewPassword === \"\" ? false : adminNewPasswordValid ? true : false\r\n        }\r\n      />\r\n      {adminNewPassword.length < 8 ? (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Password must be at least 8 characters long.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Password must contain at least 1 lowercase character, 1 uppercase\r\n          character, and 1 number.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default AdminNewPassword;\r\n"]},"metadata":{},"sourceType":"module"}