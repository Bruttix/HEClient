{"ast":null,"code":"import React from\"react\";import{BiCalendarCheck}from\"react-icons/bi\";import{IoMdTime}from\"react-icons/io\";import{format}from\"timeago.js\";const ConfirmAppointmentNotification=props=>{const notification=props.notification,employee=props.employee;const associatedClientName=notification.associatedClientFirstName+\" \"+notification.associatedClientLastName;const createdByName=notification.createdByFirstName+\" \"+notification.createdByLastName;const signedInEmployeeName=employee.firstName+\" \"+employee.lastName;return/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_notification_container\",style:{background:notification.new===true?\"rgba(211, 211, 211, 0.3)\":\"transparent\"}},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_notification_main_icon_container\"},/*#__PURE__*/React.createElement(BiCalendarCheck,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_notification_message_info\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"strong\",null,createdByName===signedInEmployeeName?\"You\":createdByName===associatedClientName?associatedClientName:createdByName),\" \",\"confirmed an appointment\",createdByName!==signedInEmployeeName&&createdByName!==associatedClientName?/*#__PURE__*/React.createElement(\"strong\",null,\" for \",associatedClientName,\" \"):\" \",\"with\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,createdByName===signedInEmployeeName?associatedClientName:createdByName===associatedClientName?\"you\":\"you\"),\" \",\"scheduled for \",/*#__PURE__*/React.createElement(\"strong\",null,notification.date),\" at\",\" \",/*#__PURE__*/React.createElement(\"strong\",null,notification.time),\".\"),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_notification_time_ago\"},/*#__PURE__*/React.createElement(IoMdTime,null),\" \",notification.createdAt?format(new Date(parseInt(notification._id.substring(0,8),16)*1000)):null)));};export default ConfirmAppointmentNotification;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminNotifications/Notifications/Appointments/ConfirmAppointmentNotification.js"],"names":["React","BiCalendarCheck","IoMdTime","format","ConfirmAppointmentNotification","props","notification","employee","associatedClientName","associatedClientFirstName","associatedClientLastName","createdByName","createdByFirstName","createdByLastName","signedInEmployeeName","firstName","lastName","background","new","date","time","createdAt","Date","parseInt","_id","substring"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,eAAT,KAAgC,gBAAhC,CACA,OAASC,QAAT,KAAyB,gBAAzB,CACA,OAASC,MAAT,KAAuB,YAAvB,CAEA,KAAMC,CAAAA,8BAA8B,CAAIC,KAAD,EAAW,MACxCC,CAAAA,YADwC,CACbD,KADa,CACxCC,YADwC,CAC1BC,QAD0B,CACbF,KADa,CAC1BE,QAD0B,CAGhD,KAAMC,CAAAA,oBAAoB,CACxBF,YAAY,CAACG,yBAAb,CACA,GADA,CAEAH,YAAY,CAACI,wBAHf,CAIA,KAAMC,CAAAA,aAAa,CACjBL,YAAY,CAACM,kBAAb,CAAkC,GAAlC,CAAwCN,YAAY,CAACO,iBADvD,CAEA,KAAMC,CAAAA,oBAAoB,CAAGP,QAAQ,CAACQ,SAAT,CAAqB,GAArB,CAA2BR,QAAQ,CAACS,QAAjE,CAEA,mBACE,2BACE,SAAS,CAAC,yCADZ,CAEE,KAAK,CAAE,CACLC,UAAU,CACRX,YAAY,CAACY,GAAb,GAAqB,IAArB,CACI,0BADJ,CAEI,aAJD,CAFT,eASE,2BAAK,SAAS,CAAC,wCAAf,eACE,oBAAC,eAAD,MADF,CATF,cAYE,2BAAK,SAAS,CAAC,4CAAf,eACE,0CACE,kCACGP,aAAa,GAAKG,oBAAlB,CACG,KADH,CAEGH,aAAa,GAAKH,oBAAlB,CACAA,oBADA,CAEAG,aALN,CADF,CAOY,GAPZ,4BASGA,aAAa,GAAKG,oBAAlB,EACDH,aAAa,GAAKH,oBADjB,cAEC,0CAAcA,oBAAd,KAFD,CAIC,GAbJ,QAeO,GAfP,cAgBE,kCACGG,aAAa,GAAKG,oBAAlB,CACGN,oBADH,CAEGG,aAAa,GAAKH,oBAAlB,CACA,KADA,CAEA,KALN,CAhBF,CAsBY,GAtBZ,+BAuBgB,kCAASF,YAAY,CAACa,IAAtB,CAvBhB,OAuBwD,GAvBxD,cAwBE,kCAASb,YAAY,CAACc,IAAtB,CAxBF,KADF,cA2BE,2BAAK,SAAS,CAAC,6BAAf,eACE,oBAAC,QAAD,MADF,CACe,GADf,CAEGd,YAAY,CAACe,SAAb,CACGlB,MAAM,CACJ,GAAImB,CAAAA,IAAJ,CAASC,QAAQ,CAACjB,YAAY,CAACkB,GAAb,CAAiBC,SAAjB,CAA2B,CAA3B,CAA8B,CAA9B,CAAD,CAAmC,EAAnC,CAAR,CAAiD,IAA1D,CADI,CADT,CAIG,IANN,CA3BF,CAZF,CADF,CAmDD,CA9DD,CAgEA,cAAerB,CAAAA,8BAAf","sourcesContent":["import React from \"react\";\r\nimport { BiCalendarCheck } from \"react-icons/bi\";\r\nimport { IoMdTime } from \"react-icons/io\";\r\nimport { format } from \"timeago.js\";\r\n\r\nconst ConfirmAppointmentNotification = (props) => {\r\n  const { notification, employee } = props;\r\n\r\n  const associatedClientName =\r\n    notification.associatedClientFirstName +\r\n    \" \" +\r\n    notification.associatedClientLastName;\r\n  const createdByName =\r\n    notification.createdByFirstName + \" \" + notification.createdByLastName;\r\n  const signedInEmployeeName = employee.firstName + \" \" + employee.lastName;\r\n\r\n  return (\r\n    <div\r\n      className=\"admin_individual_notification_container\"\r\n      style={{\r\n        background:\r\n          notification.new === true\r\n            ? \"rgba(211, 211, 211, 0.3)\"\r\n            : \"transparent\",\r\n      }}\r\n    >\r\n      <div className=\"admin_notification_main_icon_container\">\r\n        <BiCalendarCheck />\r\n      </div>\r\n      <div className=\"admin_individual_notification_message_info\">\r\n        <p>\r\n          <strong>\r\n            {createdByName === signedInEmployeeName\r\n              ? \"You\"\r\n              : createdByName === associatedClientName\r\n              ? associatedClientName\r\n              : createdByName}\r\n          </strong>{\" \"}\r\n          confirmed an appointment\r\n          {createdByName !== signedInEmployeeName &&\r\n          createdByName !== associatedClientName ? (\r\n            <strong> for {associatedClientName} </strong>\r\n          ) : (\r\n            \" \"\r\n          )}\r\n          with{\" \"}\r\n          <strong>\r\n            {createdByName === signedInEmployeeName\r\n              ? associatedClientName\r\n              : createdByName === associatedClientName\r\n              ? \"you\"\r\n              : \"you\"}\r\n          </strong>{\" \"}\r\n          scheduled for <strong>{notification.date}</strong> at{\" \"}\r\n          <strong>{notification.time}</strong>.\r\n        </p>\r\n        <div className=\"admin_notification_time_ago\">\r\n          <IoMdTime />{\" \"}\r\n          {notification.createdAt\r\n            ? format(\r\n                new Date(parseInt(notification._id.substring(0, 8), 16) * 1000)\r\n              )\r\n            : null}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConfirmAppointmentNotification;\r\n"]},"metadata":{},"sourceType":"module"}