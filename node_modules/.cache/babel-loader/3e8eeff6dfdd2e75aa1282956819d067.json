{"ast":null,"code":"import _objectSpread from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nconst INCREMENT_COUNTER = \"INCREMENT_COUNTER\";\nconst DECREMENT_COUNTER = \"DECREMENT_COUNTER\";\nconst RESET_COUNTER = \"RESET_COUNTER\";\n\nconst counterReducer = (state = {\n  counter: 0\n}, action) => {\n  switch (action.type) {\n    case INCREMENT_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter + 1\n      });\n\n    case DECREMENT_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: state.counter - 1\n      });\n\n    case RESET_COUNTER:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        counter: 0\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default counterReducer;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HighEnd/Client/src/reducers/Counter/counterReducer.js"],"names":["INCREMENT_COUNTER","DECREMENT_COUNTER","RESET_COUNTER","counterReducer","state","counter","action","type"],"mappings":";AAAA,MAAMA,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,iBAAiB,GAAG,mBAA1B;AACA,MAAMC,aAAa,GAAG,eAAtB;;AAEA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAT,EAAyBC,MAAzB,KAAoC;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKP,iBAAL;AACE,6CAAYI,KAAZ;AAAmBC,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AAA5C;;AACF,SAAKJ,iBAAL;AACE,6CAAYG,KAAZ;AAAmBC,QAAAA,OAAO,EAAED,KAAK,CAACC,OAAN,GAAgB;AAA5C;;AACF,SAAKH,aAAL;AACE,6CAAYE,KAAZ;AAAmBC,QAAAA,OAAO,EAAE;AAA5B;;AACF;AACE,+BAAYD,KAAZ;AARJ;AAUD,CAXD;;AAaA,eAAeD,cAAf","sourcesContent":["const INCREMENT_COUNTER = \"INCREMENT_COUNTER\";\r\nconst DECREMENT_COUNTER = \"DECREMENT_COUNTER\";\r\nconst RESET_COUNTER = \"RESET_COUNTER\";\r\n\r\nconst counterReducer = (state = { counter: 0 }, action) => {\r\n  switch (action.type) {\r\n    case INCREMENT_COUNTER:\r\n      return { ...state, counter: state.counter + 1 };\r\n    case DECREMENT_COUNTER:\r\n      return { ...state, counter: state.counter - 1 };\r\n    case RESET_COUNTER:\r\n      return { ...state, counter: 0 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default counterReducer;\r\n"]},"metadata":{},"sourceType":"module"}