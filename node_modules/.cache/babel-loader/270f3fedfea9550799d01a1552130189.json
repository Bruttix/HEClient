{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\admin\\\\AdminSchedule\\\\AdminSchedule.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Dropdown from \"react-dropdown\";\nimport AdminCalendarComponent from \"./AdminCalendarComponent\";\nimport AdminCreateAppointment from \"./AdminCreateAppointment/AdminCreateAppointment\";\nimport AdminPersonalEvent from \"./AdminPersonalEvent/AdminPersonalEvent\";\nimport ACTION_ADMIN_APPOINTMENT_TIME from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentTime/ACTION_ADMIN_APPOINTMENT_TIME\";\nimport ACTION_ADMIN_APPOINTMENT_DATE from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDate/ACTION_ADMIN_APPOINTMENT_DATE\";\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";\nimport ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentStaffMember/ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER\";\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";\nimport ACTION_ON_ACTIVITY_PAGE_RESET from \"../../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE_RESET\";\nimport \"./AdminSchedule.css\";\nimport \"../../payment_info/PaymentInfo.css\";\n\nconst AdminSchedule = props => {\n  const dispatch = useDispatch();\n  const getEmployeesData = props.getEmployeesData,\n        getEmployeeData = props.getEmployeeData,\n        getEmployeeError = props.getEmployeeError,\n        getEmployeesError = props.getEmployeesError,\n        employeeDataRefetch = props.employeeDataRefetch,\n        getEmployeesRefetch = props.getEmployeesRefetch,\n        resetNotifications = props.resetNotifications,\n        initialScreenSize = props.initialScreenSize,\n        currentScreenSize = props.currentScreenSize,\n        getClientsData = props.getClientsData,\n        getClientsRefetch = props.getClientsRefetch,\n        randomColorArray = props.randomColorArray,\n        getAllAppointmentsData = props.getAllAppointmentsData,\n        getAllAppointmentsRefetch = props.getAllAppointmentsRefetch,\n        getAllPersonalEventsData = props.getAllPersonalEventsData,\n        getAllPersonalEventsRefetch = props.getAllPersonalEventsRefetch;\n  const logoutClicked = useSelector(state => state.logoutClicked.log_out_clicked);\n  const adminAuthenticated = useSelector(state => state.adminAuthenticated.admin_authenticated);\n  const loadingSpinnerActive = useSelector(state => state.loadingSpinnerActive.loading_spinner);\n  const adminAppointmentStaffMember = useSelector(state => state.adminAppointmentStaffMember.admin_appointment_staff_member);\n  const cancelAppointmentClicked = useSelector(state => state.cancelAppointmentClicked.cancelAppointmentClicked);\n  const onActivityPage = useSelector(state => state.onActivityPage.on_activity_page);\n  const adminNotifications = useSelector(state => state.adminNotifications.notifications);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        createAppointmentClicked = _useState2[0],\n        changeCreateAppointmentClicked = _useState2[1];\n\n  const _useState3 = useState(\"My Schedule\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        currentScheduleShown = _useState4[0],\n        changeCurrentScheduleShown = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        personalEventClicked = _useState6[0],\n        changePersonalEventClicked = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        stopTransition = _useState8[0],\n        changeStopTransition = _useState8[1];\n\n  const timeHeader = document.getElementsByClassName(\"rbc-time-header-content\");\n\n  const redirectToAdminLogInPage = () => {\n    if (!adminAuthenticated) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/admin\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const handleCreateAppointmentToggled = (startTime, endTime, date) => {\n    changeCreateAppointmentClicked(true);\n    dispatch(ACTION_ADMIN_APPOINTMENT_TIME(startTime));\n    dispatch(ACTION_ADMIN_APPOINTMENT_DATE(date));\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME(startTime));\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(endTime));\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(date));\n  };\n\n  const timeOptions = () => {\n    const minutesArr = [\"00\", \"15\", \"30\", \"45\"];\n    const allTimeArr = [];\n\n    for (let i = 0; i < 24; i++) {\n      for (let j = 0; j < minutesArr.length; j++) {\n        allTimeArr.push((i > 12 ? i - 12 : i === 0 ? \"12\" : i) + \":\" + minutesArr[j] + \" \" + (i > 11 ? \"PM\" : \"AM\"));\n      }\n    }\n\n    return allTimeArr;\n  };\n\n  const employeeOptions = useCallback(() => {\n    if (getEmployeesData) {\n      if (getEmployeesData.employees) {\n        const estheticians = getEmployeesData.employees.filter(employee => employee.employeeRole.includes(\"Esthetician\"));\n        return estheticians.map(esthetician => esthetician.firstName[0].toUpperCase() + esthetician.firstName.slice(1).toLowerCase() + \" \" + esthetician.lastName[0].toUpperCase() + esthetician.lastName.slice(1).toLowerCase());\n      }\n    }\n  }, [getEmployeesData]);\n  const allEmployeeOptions = useCallback(() => {\n    if (getEmployeesData) {\n      if (getEmployeesData.employees) {\n        const allStaff = getEmployeesData.employees;\n        return allStaff.map(staff => staff.firstName[0].toUpperCase() + staff.firstName.slice(1).toLowerCase() + \" \" + staff.lastName[0].toUpperCase() + staff.lastName.slice(1).toLowerCase());\n      }\n    }\n  }, [getEmployeesData]);\n\n  const renderLoggedInStaffName = () => {\n    if (getEmployeeData) {\n      if (getEmployeeData.employee) {\n        return [getEmployeeData.employee.firstName[0].toUpperCase() + getEmployeeData.employee.firstName.slice(1).toLowerCase() + \" \" + getEmployeeData.employee.lastName[0].toUpperCase() + getEmployeeData.employee.lastName.slice(1).toLowerCase()];\n      }\n    }\n  };\n\n  const renderScheduleSelectionDropdownOptions = () => {\n    if (getEmployeeData) {\n      if (getEmployeeData.employee) {\n        if (getEmployeeData.employee.employeeRole.includes(\"Admin\")) {\n          if (getEmployeesData) {\n            if (getEmployeesData.employees) {\n              const allStaff = getEmployeesData.employees;\n              const newArr = [\"Salt Cave Schedule\"];\n\n              if (allStaff) {\n                for (let i = 0; i < allStaff.length; i++) {\n                  const loggedInEmployeeFullName = getEmployeeData.employee.firstName[0].toUpperCase() + getEmployeeData.employee.firstName.slice(1).toLowerCase() + \" \" + getEmployeeData.employee.lastName[0].toUpperCase() + getEmployeeData.employee.lastName.slice(1).toLowerCase();\n                  const currentIndexFullName = allStaff[i].firstName[0].toUpperCase() + allStaff[i].firstName.slice(1).toLowerCase() + \" \" + allStaff[i].lastName[0].toUpperCase() + allStaff[i].lastName.slice(1).toLowerCase();\n\n                  if (loggedInEmployeeFullName === currentIndexFullName) {\n                    newArr.unshift(\"My Schedule\");\n                  } else {\n                    newArr.push(currentIndexFullName + \"'s Schedule\");\n                  }\n                }\n\n                return newArr;\n              }\n            } else {\n              return [\"My Schedule\"];\n            }\n          } else {\n            return [\"My Schedule\"];\n          }\n        } else {\n          return [\"My Schedule\"];\n        }\n      } else {\n        return [\"My Schedule\"];\n      }\n    } else {\n      return [\"My Schedule\"];\n    }\n  };\n\n  useEffect(() => {\n    if (getEmployeeData) {\n      if (getEmployeeData.employee) {\n        const currentEmployee = getEmployeeData.employee;\n\n        if (currentScheduleShown === \"My Schedule\") {\n          if (!createAppointmentClicked) {\n            dispatch(ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(currentEmployee.firstName[0].toUpperCase() + currentEmployee.firstName.slice(1).toLowerCase() + \" \" + currentEmployee.lastName[0].toUpperCase() + currentEmployee.lastName.slice(1).toLowerCase()));\n            dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(currentEmployee.firstName[0].toUpperCase() + currentEmployee.firstName.slice(1).toLowerCase() + \" \" + currentEmployee.lastName[0].toUpperCase() + currentEmployee.lastName.slice(1).toLowerCase()));\n          }\n        } else {\n          const currentScheduleEmployee = currentScheduleShown.split(\"'\")[0];\n          const currentScheduleFirstName = currentScheduleEmployee.split(\" \")[0];\n          const currentScheduleLastName = currentScheduleEmployee.split(\" \")[1];\n\n          if (!createAppointmentClicked) {\n            dispatch(ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(currentScheduleFirstName[0].toUpperCase() + currentScheduleFirstName.slice(1).toLowerCase() + \" \" + currentScheduleLastName[0].toUpperCase() + currentScheduleLastName.slice(1).toLowerCase()));\n            dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(currentScheduleFirstName[0].toUpperCase() + currentScheduleFirstName.slice(1).toLowerCase() + \" \" + currentScheduleLastName[0].toUpperCase() + currentScheduleLastName.slice(1).toLowerCase()));\n          }\n        }\n      }\n    }\n  }, [dispatch, getEmployeeData, employeeOptions, adminAppointmentStaffMember, currentScheduleShown, createAppointmentClicked]);\n  useEffect(() => {\n    if (onActivityPage) {\n      if (adminNotifications) {\n        if (adminNotifications.length > 0) {\n          if (adminNotifications.some(item => item.new)) {\n            resetNotifications();\n          }\n        }\n      }\n\n      dispatch(ACTION_ON_ACTIVITY_PAGE_RESET());\n    }\n  }, [onActivityPage, dispatch, resetNotifications, adminNotifications]); // Styles react-big-calendar top header on select days\n\n  useEffect(() => {\n    const dayToday = new Date().getDay(); // If not Saturday or Sunday, adjust header flex attribute\n\n    if (dayToday > 0) {\n      if (timeHeader) {\n        if (timeHeader[0]) {\n          timeHeader[0].style.flex = 1;\n        }\n      }\n    } else {\n      if (timeHeader) {\n        if (timeHeader[0]) {\n          timeHeader[0].style.flex = 0.99;\n        }\n      }\n    }\n  }, [timeHeader]);\n  useEffect(() => {\n    if (getEmployeeError) {\n      employeeDataRefetch();\n    }\n  }, [getEmployeeError, employeeDataRefetch]);\n  useEffect(() => {\n    if (getEmployeesError) {\n      getEmployeesRefetch();\n    }\n  }, [getEmployeesError, getEmployeesRefetch]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_schedule_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, redirectToAdminLogInPage(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_schedule_header\",\n    style: {\n      zIndex: logoutClicked || loadingSpinnerActive || cancelAppointmentClicked ? 0 : 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/admin/menu\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"admin_schedule_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 9\n    }\n  }, \"SCHEDULE\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_calendar_top_buttons_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 7\n    }\n  }, getEmployeeData ? getEmployeeData.employee ? /*#__PURE__*/React.createElement(Dropdown, {\n    options: renderScheduleSelectionDropdownOptions(),\n    onChange: choice => changeCurrentScheduleShown(choice.value),\n    value: currentScheduleShown,\n    controlClassName: \"react-autosuggest__input\",\n    className: \"react-autosuggest__container\",\n    placeholder: currentScheduleShown ? currentScheduleShown : \"Choose a Schedule\",\n    placeholderClassName: currentScheduleShown ? \"admin_create_appointent_dropdown_placeholder_time\" : \"admin_create_appointent_dropdown_placeholder_no_time\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 13\n    }\n  }) : null : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_calendar_create_personal_event_button\",\n    onClick: () => changePersonalEventClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 367,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 11\n    }\n  }, \"Create Personal Event\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin_calendar_create_appointment_button\",\n    onClick: () => changeCreateAppointmentClicked(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 11\n    }\n  }, \"Create Appointment\"))), /*#__PURE__*/React.createElement(AdminCreateAppointment, {\n    personalEventClicked: personalEventClicked,\n    createAppointmentClicked: createAppointmentClicked,\n    changeCreateAppointmentClicked: changeCreateAppointmentClicked,\n    changePersonalEventClicked: changePersonalEventClicked,\n    getEmployeeData: getEmployeeData,\n    getClientsData: getClientsData,\n    getClientsRefetch: getClientsRefetch,\n    getAllAppointmentsData: getAllAppointmentsData,\n    randomColorArray: randomColorArray,\n    getAllAppointmentsRefetch: getAllAppointmentsRefetch,\n    timeOptions: timeOptions,\n    allEmployeeOptions: allEmployeeOptions,\n    changeStopTransition: changeStopTransition,\n    stopTransition: stopTransition,\n    renderLoggedInStaffName: renderLoggedInStaffName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AdminPersonalEvent, {\n    getAllPersonalEventsRefetch: getAllPersonalEventsRefetch,\n    personalEventClicked: personalEventClicked,\n    createAppointmentClicked: createAppointmentClicked,\n    changePersonalEventClicked: changePersonalEventClicked,\n    changeCreateAppointmentClicked: changeCreateAppointmentClicked,\n    timeOptions: timeOptions,\n    allEmployeeOptions: allEmployeeOptions,\n    getEmployeeData: getEmployeeData,\n    changeStopTransition: changeStopTransition,\n    stopTransition: stopTransition,\n    initialScreenSize: initialScreenSize,\n    currentScreenSize: currentScreenSize,\n    renderLoggedInStaffName: renderLoggedInStaffName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AdminCalendarComponent, {\n    getAllAppointmentsData: getAllAppointmentsData,\n    getEmployeeData: getEmployeeData,\n    getAllPersonalEventsData: getAllPersonalEventsData,\n    getAllPersonalEventsRefetch: getAllPersonalEventsRefetch,\n    handleCreateAppointmentToggled: handleCreateAppointmentToggled,\n    getAllAppointmentsRefetch: getAllAppointmentsRefetch,\n    intialScreenSize: initialScreenSize,\n    currentScreenSize: currentScreenSize,\n    allEmployeeOptions: allEmployeeOptions,\n    timeOptions: timeOptions,\n    createAppointmentClicked: createAppointmentClicked,\n    personalEventClicked: personalEventClicked,\n    currentScheduleShown: currentScheduleShown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AdminSchedule;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminSchedule/AdminSchedule.js"],"names":["React","useState","useEffect","useCallback","Redirect","Link","faChevronLeft","FontAwesomeIcon","useSelector","useDispatch","Dropdown","AdminCalendarComponent","AdminCreateAppointment","AdminPersonalEvent","ACTION_ADMIN_APPOINTMENT_TIME","ACTION_ADMIN_APPOINTMENT_DATE","ACTION_ADMIN_PERSONAL_EVENT_STAFF","ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER","ACTION_ADMIN_PERSONAL_EVENT_DATE","ACTION_ADMIN_PERSONAL_EVENT_START_TIME","ACTION_ADMIN_PERSONAL_EVENT_END_TIME","ACTION_ON_ACTIVITY_PAGE_RESET","AdminSchedule","props","dispatch","getEmployeesData","getEmployeeData","getEmployeeError","getEmployeesError","employeeDataRefetch","getEmployeesRefetch","resetNotifications","initialScreenSize","currentScreenSize","getClientsData","getClientsRefetch","randomColorArray","getAllAppointmentsData","getAllAppointmentsRefetch","getAllPersonalEventsData","getAllPersonalEventsRefetch","logoutClicked","state","log_out_clicked","adminAuthenticated","admin_authenticated","loadingSpinnerActive","loading_spinner","adminAppointmentStaffMember","admin_appointment_staff_member","cancelAppointmentClicked","onActivityPage","on_activity_page","adminNotifications","notifications","createAppointmentClicked","changeCreateAppointmentClicked","currentScheduleShown","changeCurrentScheduleShown","personalEventClicked","changePersonalEventClicked","stopTransition","changeStopTransition","timeHeader","document","getElementsByClassName","redirectToAdminLogInPage","handleCreateAppointmentToggled","startTime","endTime","date","timeOptions","minutesArr","allTimeArr","i","j","length","push","employeeOptions","employees","estheticians","filter","employee","employeeRole","includes","map","esthetician","firstName","toUpperCase","slice","toLowerCase","lastName","allEmployeeOptions","allStaff","staff","renderLoggedInStaffName","renderScheduleSelectionDropdownOptions","newArr","loggedInEmployeeFullName","currentIndexFullName","unshift","currentEmployee","currentScheduleEmployee","split","currentScheduleFirstName","currentScheduleLastName","some","item","new","dayToday","Date","getDay","style","flex","zIndex","choice","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport AdminCalendarComponent from \"./AdminCalendarComponent\";\r\nimport AdminCreateAppointment from \"./AdminCreateAppointment/AdminCreateAppointment\";\r\nimport AdminPersonalEvent from \"./AdminPersonalEvent/AdminPersonalEvent\";\r\nimport ACTION_ADMIN_APPOINTMENT_TIME from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentTime/ACTION_ADMIN_APPOINTMENT_TIME\";\r\nimport ACTION_ADMIN_APPOINTMENT_DATE from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentDate/ACTION_ADMIN_APPOINTMENT_DATE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";\r\nimport ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER from \"../../../actions/Admin/AdminCreateAppointment/AdminAppointmentStaffMember/ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME from \"../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";\r\nimport ACTION_ON_ACTIVITY_PAGE_RESET from \"../../../actions/Admin/OnActivityPage/ACTION_ON_ACTIVITY_PAGE_RESET\";\r\nimport \"./AdminSchedule.css\";\r\nimport \"../../payment_info/PaymentInfo.css\";\r\n\r\nconst AdminSchedule = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    getEmployeesData,\r\n    getEmployeeData,\r\n    getEmployeeError,\r\n    getEmployeesError,\r\n    employeeDataRefetch,\r\n    getEmployeesRefetch,\r\n    resetNotifications,\r\n    initialScreenSize,\r\n    currentScreenSize,\r\n    getClientsData,\r\n    getClientsRefetch,\r\n    randomColorArray,\r\n    getAllAppointmentsData,\r\n    getAllAppointmentsRefetch,\r\n    getAllPersonalEventsData,\r\n    getAllPersonalEventsRefetch,\r\n  } = props;\r\n\r\n  const logoutClicked = useSelector(\r\n    (state) => state.logoutClicked.log_out_clicked\r\n  );\r\n  const adminAuthenticated = useSelector(\r\n    (state) => state.adminAuthenticated.admin_authenticated\r\n  );\r\n  const loadingSpinnerActive = useSelector(\r\n    (state) => state.loadingSpinnerActive.loading_spinner\r\n  );\r\n  const adminAppointmentStaffMember = useSelector(\r\n    (state) => state.adminAppointmentStaffMember.admin_appointment_staff_member\r\n  );\r\n  const cancelAppointmentClicked = useSelector(\r\n    (state) => state.cancelAppointmentClicked.cancelAppointmentClicked\r\n  );\r\n  const onActivityPage = useSelector(\r\n    (state) => state.onActivityPage.on_activity_page\r\n  );\r\n  const adminNotifications = useSelector(\r\n    (state) => state.adminNotifications.notifications\r\n  );\r\n\r\n  const [createAppointmentClicked, changeCreateAppointmentClicked] = useState(\r\n    false\r\n  );\r\n  const [currentScheduleShown, changeCurrentScheduleShown] = useState(\r\n    \"My Schedule\"\r\n  );\r\n  const [personalEventClicked, changePersonalEventClicked] = useState(false);\r\n  const [stopTransition, changeStopTransition] = useState(false);\r\n\r\n  const timeHeader = document.getElementsByClassName(\"rbc-time-header-content\");\r\n\r\n  const redirectToAdminLogInPage = () => {\r\n    if (!adminAuthenticated) {\r\n      return <Redirect to=\"/admin\" />;\r\n    }\r\n  };\r\n\r\n  const handleCreateAppointmentToggled = (startTime, endTime, date) => {\r\n    changeCreateAppointmentClicked(true);\r\n    dispatch(ACTION_ADMIN_APPOINTMENT_TIME(startTime));\r\n    dispatch(ACTION_ADMIN_APPOINTMENT_DATE(date));\r\n\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME(startTime));\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(endTime));\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(date));\r\n  };\r\n\r\n  const timeOptions = () => {\r\n    const minutesArr = [\"00\", \"15\", \"30\", \"45\"];\r\n    const allTimeArr = [];\r\n\r\n    for (let i = 0; i < 24; i++) {\r\n      for (let j = 0; j < minutesArr.length; j++) {\r\n        allTimeArr.push(\r\n          (i > 12 ? i - 12 : i === 0 ? \"12\" : i) +\r\n            \":\" +\r\n            minutesArr[j] +\r\n            \" \" +\r\n            (i > 11 ? \"PM\" : \"AM\")\r\n        );\r\n      }\r\n    }\r\n\r\n    return allTimeArr;\r\n  };\r\n\r\n  const employeeOptions = useCallback(() => {\r\n    if (getEmployeesData) {\r\n      if (getEmployeesData.employees) {\r\n        const estheticians = getEmployeesData.employees.filter((employee) =>\r\n          employee.employeeRole.includes(\"Esthetician\")\r\n        );\r\n\r\n        return estheticians.map(\r\n          (esthetician) =>\r\n            esthetician.firstName[0].toUpperCase() +\r\n            esthetician.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            esthetician.lastName[0].toUpperCase() +\r\n            esthetician.lastName.slice(1).toLowerCase()\r\n        );\r\n      }\r\n    }\r\n  }, [getEmployeesData]);\r\n\r\n  const allEmployeeOptions = useCallback(() => {\r\n    if (getEmployeesData) {\r\n      if (getEmployeesData.employees) {\r\n        const allStaff = getEmployeesData.employees;\r\n\r\n        return allStaff.map(\r\n          (staff) =>\r\n            staff.firstName[0].toUpperCase() +\r\n            staff.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            staff.lastName[0].toUpperCase() +\r\n            staff.lastName.slice(1).toLowerCase()\r\n        );\r\n      }\r\n    }\r\n  }, [getEmployeesData]);\r\n\r\n  const renderLoggedInStaffName = () => {\r\n    if (getEmployeeData) {\r\n      if (getEmployeeData.employee) {\r\n        return [\r\n          getEmployeeData.employee.firstName[0].toUpperCase() +\r\n            getEmployeeData.employee.firstName.slice(1).toLowerCase() +\r\n            \" \" +\r\n            getEmployeeData.employee.lastName[0].toUpperCase() +\r\n            getEmployeeData.employee.lastName.slice(1).toLowerCase(),\r\n        ];\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderScheduleSelectionDropdownOptions = () => {\r\n    if (getEmployeeData) {\r\n      if (getEmployeeData.employee) {\r\n        if (getEmployeeData.employee.employeeRole.includes(\"Admin\")) {\r\n          if (getEmployeesData) {\r\n            if (getEmployeesData.employees) {\r\n              const allStaff = getEmployeesData.employees;\r\n\r\n              const newArr = [\"Salt Cave Schedule\"];\r\n\r\n              if (allStaff) {\r\n                for (let i = 0; i < allStaff.length; i++) {\r\n                  const loggedInEmployeeFullName =\r\n                    getEmployeeData.employee.firstName[0].toUpperCase() +\r\n                    getEmployeeData.employee.firstName.slice(1).toLowerCase() +\r\n                    \" \" +\r\n                    getEmployeeData.employee.lastName[0].toUpperCase() +\r\n                    getEmployeeData.employee.lastName.slice(1).toLowerCase();\r\n\r\n                  const currentIndexFullName =\r\n                    allStaff[i].firstName[0].toUpperCase() +\r\n                    allStaff[i].firstName.slice(1).toLowerCase() +\r\n                    \" \" +\r\n                    allStaff[i].lastName[0].toUpperCase() +\r\n                    allStaff[i].lastName.slice(1).toLowerCase();\r\n\r\n                  if (loggedInEmployeeFullName === currentIndexFullName) {\r\n                    newArr.unshift(\"My Schedule\");\r\n                  } else {\r\n                    newArr.push(currentIndexFullName + \"'s Schedule\");\r\n                  }\r\n                }\r\n\r\n                return newArr;\r\n              }\r\n            } else {\r\n              return [\"My Schedule\"];\r\n            }\r\n          } else {\r\n            return [\"My Schedule\"];\r\n          }\r\n        } else {\r\n          return [\"My Schedule\"];\r\n        }\r\n      } else {\r\n        return [\"My Schedule\"];\r\n      }\r\n    } else {\r\n      return [\"My Schedule\"];\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (getEmployeeData) {\r\n      if (getEmployeeData.employee) {\r\n        const currentEmployee = getEmployeeData.employee;\r\n\r\n        if (currentScheduleShown === \"My Schedule\") {\r\n          if (!createAppointmentClicked) {\r\n            dispatch(\r\n              ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(\r\n                currentEmployee.firstName[0].toUpperCase() +\r\n                  currentEmployee.firstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentEmployee.lastName[0].toUpperCase() +\r\n                  currentEmployee.lastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n\r\n            dispatch(\r\n              ACTION_ADMIN_PERSONAL_EVENT_STAFF(\r\n                currentEmployee.firstName[0].toUpperCase() +\r\n                  currentEmployee.firstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentEmployee.lastName[0].toUpperCase() +\r\n                  currentEmployee.lastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n          }\r\n        } else {\r\n          const currentScheduleEmployee = currentScheduleShown.split(\"'\")[0];\r\n          const currentScheduleFirstName = currentScheduleEmployee.split(\r\n            \" \"\r\n          )[0];\r\n          const currentScheduleLastName = currentScheduleEmployee.split(\" \")[1];\r\n\r\n          if (!createAppointmentClicked) {\r\n            dispatch(\r\n              ACTION_ADMIN_APPOINTMENT_STAFF_MEMBER(\r\n                currentScheduleFirstName[0].toUpperCase() +\r\n                  currentScheduleFirstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentScheduleLastName[0].toUpperCase() +\r\n                  currentScheduleLastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n\r\n            dispatch(\r\n              ACTION_ADMIN_PERSONAL_EVENT_STAFF(\r\n                currentScheduleFirstName[0].toUpperCase() +\r\n                  currentScheduleFirstName.slice(1).toLowerCase() +\r\n                  \" \" +\r\n                  currentScheduleLastName[0].toUpperCase() +\r\n                  currentScheduleLastName.slice(1).toLowerCase()\r\n              )\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    dispatch,\r\n    getEmployeeData,\r\n    employeeOptions,\r\n    adminAppointmentStaffMember,\r\n    currentScheduleShown,\r\n    createAppointmentClicked,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (onActivityPage) {\r\n      if (adminNotifications) {\r\n        if (adminNotifications.length > 0) {\r\n          if (adminNotifications.some((item) => item.new)) {\r\n            resetNotifications();\r\n          }\r\n        }\r\n      }\r\n      dispatch(ACTION_ON_ACTIVITY_PAGE_RESET());\r\n    }\r\n  }, [onActivityPage, dispatch, resetNotifications, adminNotifications]);\r\n\r\n  // Styles react-big-calendar top header on select days\r\n  useEffect(() => {\r\n    const dayToday = new Date().getDay();\r\n\r\n    // If not Saturday or Sunday, adjust header flex attribute\r\n    if (dayToday > 0) {\r\n      if (timeHeader) {\r\n        if (timeHeader[0]) {\r\n          timeHeader[0].style.flex = 1;\r\n        }\r\n      }\r\n    } else {\r\n      if (timeHeader) {\r\n        if (timeHeader[0]) {\r\n          timeHeader[0].style.flex = 0.99;\r\n        }\r\n      }\r\n    }\r\n  }, [timeHeader]);\r\n\r\n  useEffect(() => {\r\n    if (getEmployeeError) {\r\n      employeeDataRefetch();\r\n    }\r\n  }, [getEmployeeError, employeeDataRefetch]);\r\n\r\n  useEffect(() => {\r\n    if (getEmployeesError) {\r\n      getEmployeesRefetch();\r\n    }\r\n  }, [getEmployeesError, getEmployeesRefetch]);\r\n\r\n  return (\r\n    <div className=\"admin_schedule_container\">\r\n      {redirectToAdminLogInPage()}\r\n      <div\r\n        className=\"admin_schedule_header\"\r\n        style={{\r\n          zIndex:\r\n            logoutClicked || loadingSpinnerActive || cancelAppointmentClicked\r\n              ? 0\r\n              : 5,\r\n        }}\r\n      >\r\n        <Link to=\"/admin/menu\">\r\n          <FontAwesomeIcon\r\n            className=\"admin_schedule_back_arrow\"\r\n            icon={faChevronLeft}\r\n          />\r\n        </Link>\r\n        <h1>SCHEDULE</h1>\r\n      </div>\r\n      <div className=\"admin_calendar_top_buttons_container\">\r\n        {getEmployeeData ? (\r\n          getEmployeeData.employee ? (\r\n            <Dropdown\r\n              options={renderScheduleSelectionDropdownOptions()}\r\n              onChange={(choice) => changeCurrentScheduleShown(choice.value)}\r\n              value={currentScheduleShown}\r\n              controlClassName=\"react-autosuggest__input\"\r\n              className=\"react-autosuggest__container\"\r\n              placeholder={\r\n                currentScheduleShown\r\n                  ? currentScheduleShown\r\n                  : \"Choose a Schedule\"\r\n              }\r\n              placeholderClassName={\r\n                currentScheduleShown\r\n                  ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                  : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n              }\r\n            />\r\n          ) : null\r\n        ) : null}\r\n        <div\r\n          className=\"admin_calendar_create_personal_event_button\"\r\n          onClick={() => changePersonalEventClicked(true)}\r\n        >\r\n          <p>Create Personal Event</p>\r\n        </div>\r\n        <div\r\n          className=\"admin_calendar_create_appointment_button\"\r\n          onClick={() => changeCreateAppointmentClicked(true)}\r\n        >\r\n          <p>Create Appointment</p>\r\n        </div>\r\n      </div>\r\n      <AdminCreateAppointment\r\n        personalEventClicked={personalEventClicked}\r\n        createAppointmentClicked={createAppointmentClicked}\r\n        changeCreateAppointmentClicked={changeCreateAppointmentClicked}\r\n        changePersonalEventClicked={changePersonalEventClicked}\r\n        getEmployeeData={getEmployeeData}\r\n        getClientsData={getClientsData}\r\n        getClientsRefetch={getClientsRefetch}\r\n        getAllAppointmentsData={getAllAppointmentsData}\r\n        randomColorArray={randomColorArray}\r\n        getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n        timeOptions={timeOptions}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        changeStopTransition={changeStopTransition}\r\n        stopTransition={stopTransition}\r\n        renderLoggedInStaffName={renderLoggedInStaffName}\r\n      />\r\n      <AdminPersonalEvent\r\n        getAllPersonalEventsRefetch={getAllPersonalEventsRefetch}\r\n        personalEventClicked={personalEventClicked}\r\n        createAppointmentClicked={createAppointmentClicked}\r\n        changePersonalEventClicked={changePersonalEventClicked}\r\n        changeCreateAppointmentClicked={changeCreateAppointmentClicked}\r\n        timeOptions={timeOptions}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        getEmployeeData={getEmployeeData}\r\n        changeStopTransition={changeStopTransition}\r\n        stopTransition={stopTransition}\r\n        initialScreenSize={initialScreenSize}\r\n        currentScreenSize={currentScreenSize}\r\n        renderLoggedInStaffName={renderLoggedInStaffName}\r\n      />\r\n      <AdminCalendarComponent\r\n        getAllAppointmentsData={getAllAppointmentsData}\r\n        getEmployeeData={getEmployeeData}\r\n        getAllPersonalEventsData={getAllPersonalEventsData}\r\n        getAllPersonalEventsRefetch={getAllPersonalEventsRefetch}\r\n        handleCreateAppointmentToggled={handleCreateAppointmentToggled}\r\n        getAllAppointmentsRefetch={getAllAppointmentsRefetch}\r\n        intialScreenSize={initialScreenSize}\r\n        currentScreenSize={currentScreenSize}\r\n        allEmployeeOptions={allEmployeeOptions}\r\n        timeOptions={timeOptions}\r\n        createAppointmentClicked={createAppointmentClicked}\r\n        personalEventClicked={personalEventClicked}\r\n        currentScheduleShown={currentScheduleShown}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminSchedule;\r\n"]},"metadata":{},"sourceType":"module"}