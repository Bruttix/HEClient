{"ast":null,"code":"import _taggedTemplateLiteral from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";\nimport _regeneratorRuntime from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\payment_info\\\\PaymentInfo.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    display: block;\\n    position: absolute;\\n    left: 25%;\\n    right: 25%;\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { SquarePaymentForm, CreditCardNumberInput, CreditCardExpirationDateInput, CreditCardPostalCodeInput, CreditCardCVVInput, CreditCardSubmitButton } from \"react-square-payment-form\";\nimport { faChevronLeft, faChevronRight, faChevronCircleDown, faSquare } from \"@fortawesome/free-solid-svg-icons\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport axios from \"axios\";\nimport getClientsQuery from \"../../graphql/queries/getClientsQuery\";\nimport removeOneUnsavedSquareCardIDsMutation from \"../../graphql/mutations/removeOneUnsavedSquareCardIDsMutation\";\nimport updateUnsavedSquareCardIDsMutation from \"../../graphql/mutations/updateUnsavedSquareCardIDsMutation\";\nimport updateClientSquareIDMutation from \"../../graphql/mutations/updateClientSquareIDMutation\";\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\nimport { FormGroup, Label, Input } from \"reactstrap\";\nimport { css } from \"@emotion/css\";\nimport ClipLoader from \"react-spinners/ClipLoader\";\nimport { Spring } from \"react-spring/renderprops\";\nimport ACTION_SAVE_CARD_UNCHECKED from \"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_UNCHECKED\";\nimport ACTION_SAVE_CARD_CHECKED from \"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_CHECKED\";\nimport ACTION_SQUARE_CUSTOMER_ID_RESET from \"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID_RESET\";\nimport ACTION_SQUARE_CUSTOMER_ID from \"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID\";\nimport ACTION_BOOKED_WITH_CARD_ID_RESET from \"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID_RESET\";\nimport ACTION_BOOKED_WITH_CARD_ID from \"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID\";\nimport ACTION_CONFIRMATION_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_CONFIRMATION_PAGE_OPENED\";\nimport ACTION_TIME_PREFERENCE_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_TIME_PREFERENCE_PAGE_OPENED\";\nimport ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_GUEST_CHECKOUT_FORM_PAGE_OPENED\";\nimport \"./PaymentInfo.css\";\nimport \"../account/clientprofile/ConsentForm/ConsentForm.css\";\n\nconst PaymentInfo = props => {\n  const dispatch = useDispatch();\n  const userAuthenticated = useSelector(state => state.userAuthenticated.user_authenticated);\n  const saveCardChecked = useSelector(state => state.saveCardChecked.save_card_checked);\n  const squareCustomerID = useSelector(state => state.squareCustomerID.square_customer_id);\n  const bookedWithCardID = useSelector(state => state.bookedWithCardID.booked_with_card_id); // Checkout Form States\n\n  const firstName = useSelector(state => state.firstName.first_name);\n  const lastName = useSelector(state => state.lastName.last_name);\n  const email = useSelector(state => state.email.email);\n  const phoneNumber = useSelector(state => state.phoneNumber.phone_number);\n  const splashScreenComplete = useSelector(state => state.splashScreenComplete.splashScreenComplete);\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        errorMessages = _useState2[0],\n        changeErrorMessage = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        cardHolderFirstName = _useState4[0],\n        changeCardHolderFirstName = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        cardHolderLastName = _useState6[0],\n        changeCardHolderLastName = _useState6[1];\n\n  const _useState7 = useState(false),\n        _useState8 = _slicedToArray(_useState7, 2),\n        successfulCardNonce = _useState8[0],\n        changeSuccessfulCardNonce = _useState8[1];\n\n  const _useState9 = useState(\"\"),\n        _useState10 = _slicedToArray(_useState9, 2),\n        squareStoredCreditCards = _useState10[0],\n        changeSquareStoredCreditCards = _useState10[1];\n\n  const _useState11 = useState(\"\"),\n        _useState12 = _slicedToArray(_useState11, 2),\n        squareCustomerInfo = _useState12[0],\n        changeSquareCustomerInfo = _useState12[1];\n\n  const _useState13 = useState({\n    name: \"\",\n    id: \"\"\n  }),\n        _useState14 = _slicedToArray(_useState13, 2),\n        selectedCreditCard = _useState14[0],\n        changeSelectedCreditCard = _useState14[1];\n\n  const _useState15 = useState(\"\"),\n        _useState16 = _slicedToArray(_useState15, 2),\n        selectedCreditCardFullData = _useState16[0],\n        changeSelectedCreditCardFullData = _useState16[1];\n\n  const _useState17 = useState(true),\n        _useState18 = _slicedToArray(_useState17, 2),\n        squareFormLoading = _useState18[0],\n        changeSquareFormLoading = _useState18[1];\n\n  const _useState19 = useState(false),\n        _useState20 = _slicedToArray(_useState19, 2),\n        pageOpened = _useState20[0],\n        changePageOpened = _useState20[1];\n\n  const _useState21 = useState(false),\n        _useState22 = _slicedToArray(_useState21, 2),\n        clipLoaderActive = _useState22[0],\n        changeClipLoaderActive = _useState22[1];\n\n  const _useMutation = useMutation(updateUnsavedSquareCardIDsMutation),\n        _useMutation2 = _slicedToArray(_useMutation, 1),\n        updateUnsavedSquareCardIDs = _useMutation2[0];\n\n  const _useMutation3 = useMutation(updateClientSquareIDMutation),\n        _useMutation4 = _slicedToArray(_useMutation3, 1),\n        updateClientSquareID = _useMutation4[0];\n\n  const _useMutation5 = useMutation(removeOneUnsavedSquareCardIDsMutation),\n        _useMutation6 = _slicedToArray(_useMutation5, 1),\n        removeOneUnsavedSquareCardIDs = _useMutation6[0];\n\n  const _useQuery = useQuery(getClientsQuery, {\n    fetchPolicy: \"no-cache\"\n  }),\n        getClientsData = _useQuery.data,\n        getClientsDataRefetch = _useQuery.refetch;\n\n  useEffect(() => {\n    changePageOpened(true);\n    const pageNowOpen = setTimeout(() => {\n      changePageOpened(false);\n    }, 500);\n    return () => {\n      clearTimeout(pageNowOpen);\n    };\n  }, []);\n  useEffect(() => {\n    if (userAuthenticated) {\n      if (bookedWithCardID) {\n        if (squareStoredCreditCards) {\n          const cardFullData = squareStoredCreditCards.filter(x => x.id === bookedWithCardID)[0];\n\n          if (!selectedCreditCard.name) {\n            changeSelectedCreditCard({\n              name: cardFullData.cardBrand.split(\"_\").join(\" \") + \" - \" + cardFullData.last4,\n              id: cardFullData.id\n            });\n            changeCardHolderFirstName(squareCustomerInfo.givenName.toUpperCase());\n            changeCardHolderLastName(squareCustomerInfo.familyName.toUpperCase());\n            changeSelectedCreditCardFullData(cardFullData);\n          }\n        }\n      }\n    }\n  }, [squareCustomerInfo, bookedWithCardID, squareStoredCreditCards, userAuthenticated, pageOpened, selectedCreditCard]);\n  const deleteSquareCustomerFunction = useCallback(() => {\n    return axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/delete_customer\"), {\n      data: {\n        squareCustomerId: squareCustomerID\n      }\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }, [squareCustomerID]);\n  useEffect(() => {\n    if (!userAuthenticated) {\n      if (pageOpened && squareCustomerID) {\n        let matchedClient;\n        const deleteCustomer = setTimeout(() => {\n          if (getClientsData) {\n            for (let i = 0; i < getClientsData.clients.length; i++) {\n              if (getClientsData.clients[i].email === email) {\n                matchedClient = getClientsData.clients[i];\n              }\n            }\n          }\n\n          if (!matchedClient) {\n            const deleteCustomerData = /*#__PURE__*/function () {\n              var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) switch (_context.prev = _context.next) {\n                    case 0:\n                      _context.next = 2;\n                      return deleteSquareCustomerFunction();\n\n                    case 2:\n                      dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\n                      dispatch(ACTION_SQUARE_CUSTOMER_ID_RESET());\n\n                    case 4:\n                    case \"end\":\n                      return _context.stop();\n                  }\n                }, _callee);\n              }));\n\n              return function deleteCustomerData() {\n                return _ref.apply(this, arguments);\n              };\n            }();\n\n            deleteCustomerData();\n          }\n        }, 500);\n        return () => {\n          clearTimeout(deleteCustomer);\n        };\n      }\n    }\n  }, [deleteSquareCustomerFunction, email, getClientsData, pageOpened, userAuthenticated, squareCustomerID, dispatch]);\n  useEffect(() => {\n    if (userAuthenticated) {\n      props.clientDataRefetch();\n    }\n  }, [props, userAuthenticated]);\n  useEffect(() => {\n    if (!squareFormLoading) {\n      if (!props.currentScreenSize) {\n        if (!props.initialScreenSize >= 1200) {\n          window.scrollTo(0, 0);\n        } else {\n          window.scrollTo(0, props.largeScreenFrozenScrollPosition);\n        }\n      } else {\n        if (!props.currentScreenSize >= 1200) {\n          window.scrollTo(0, 0);\n        } else {\n          window.scrollTo(0, props.largeScreenFrozenScrollPosition);\n        }\n      }\n    }\n  }, [squareFormLoading, props.currentScreenSize, props.initialScreenSize, props.largeScreenFrozenScrollPosition]);\n  const override = css(_templateObject());\n  useEffect(() => {\n    if (squareStoredCreditCards) {\n      if (selectedCreditCard && selectedCreditCard.name && selectedCreditCard.id) {\n        const creditCardSplitArr = selectedCreditCard.name.split(\" -\");\n        const fullData = squareStoredCreditCards.find(x => {\n          return x.cardBrand === creditCardSplitArr[0].replace(\" \", \"_\").trim() && x.last4 === creditCardSplitArr[creditCardSplitArr.length - 1].trim() && x.id === selectedCreditCard.id;\n        });\n\n        if (fullData) {\n          changeSelectedCreditCardFullData(fullData);\n        }\n      }\n    }\n  }, [selectedCreditCard, squareStoredCreditCards]);\n  const retrieveSquareCustomerFunction = useCallback(matchedClient => {\n    return axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/retrieve_customer\"), {\n      data: {\n        squareCustomerId: userAuthenticated ? props.getClientData ? props.getClientData.client ? props.getClientData.client.squareCustomerId : matchedClient ? matchedClient.squareCustomerId : null : matchedClient ? matchedClient.squareCustomerId : null : matchedClient ? matchedClient.squareCustomerId : null\n      }\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n  }, [props.getClientData, userAuthenticated]);\n  useEffect(() => {\n    if (userAuthenticated) {\n      if (!squareStoredCreditCards) {\n        const fetchData = /*#__PURE__*/function () {\n          var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var customerData;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return retrieveSquareCustomerFunction();\n\n                case 2:\n                  customerData = _context2.sent;\n\n                  if (customerData) {\n                    if (customerData.data) {\n                      if (customerData.data.customer) {\n                        changeSquareStoredCreditCards(customerData.data.customer.cards);\n                        changeSquareCustomerInfo(customerData.data.customer);\n                      }\n                    }\n                  }\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }, _callee2);\n          }));\n\n          return function fetchData() {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n\n        fetchData();\n      }\n    }\n  }, [userAuthenticated, retrieveSquareCustomerFunction, squareStoredCreditCards]);\n\n  const renderStoredCreditCardOptions = () => {\n    if (squareStoredCreditCards) {\n      return squareStoredCreditCards.filter(x => !props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).map((x, i) => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          value: JSON.stringify({\n            name: x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4,\n            id: x.id\n          }),\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }\n        }, x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4);\n      });\n    }\n  };\n\n  const cardNonceResponseReceived = (errors, nonce, cardData, buyerVerificationToken) => {\n    changeClipLoaderActive(true);\n\n    if (errors) {\n      changeClipLoaderActive(false);\n      return changeErrorMessage(errors.map(error => error ? error.message : null));\n    } else {\n      changeErrorMessage([]);\n      let matchedClient;\n\n      if (getClientsData) {\n        for (let i = 0; i < getClientsData.clients.length; i++) {\n          if (getClientsData.clients[i].email === email) {\n            matchedClient = getClientsData.clients[i];\n          }\n        }\n      }\n\n      const squareCustomerData = {\n        family_name: props.getClientData ? props.getClientData.client.lastName : lastName,\n        given_name: props.getClientData ? props.getClientData.client.firstName : firstName,\n        email_address: props.getClientData ? props.getClientData.client.email : email,\n        phone_number: props.getClientData ? props.getClientData.client.phoneNumber : phoneNumber\n      };\n\n      const squarePostRequestFunction = () => {\n        axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/customers\"), squareCustomerData, {\n          headers: {\n            Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n          }\n        }).then((res, err) => {\n          const squareData = {\n            card_nonce: nonce,\n            billingAddress: {\n              postalCode: cardData.billing_postal_code\n            },\n            cardholderName: (userAuthenticated ? cardHolderFirstName ? cardHolderFirstName : props.getClientData.client.firstName : cardHolderFirstName ? cardHolderFirstName : firstName).trim() + \" \" + (userAuthenticated ? cardHolderLastName ? cardHolderLastName : props.getClientData.client.lastName : cardHolderLastName ? cardHolderLastName : lastName).trim(),\n            verification_token: buyerVerificationToken,\n            customerId: JSON.parse(res.request.response).customer.id\n          };\n\n          if (userAuthenticated) {\n            updateClientSquareID({\n              variables: {\n                squareCustomerId: JSON.parse(res.request.response).customer.id,\n                firstName: props.getClientData.client.firstName,\n                lastName: props.getClientData.client.lastName,\n                email: props.getClientData.client.email\n              }\n            });\n            props.clientDataRefetch();\n          } else {\n            if (matchedClient) {\n              if (!matchedClient.squareCustomerId) {\n                updateClientSquareID({\n                  variables: {\n                    squareCustomerId: JSON.parse(res.request.response).customer.id,\n                    firstName: firstName,\n                    lastName: lastName,\n                    email: email\n                  }\n                });\n                getClientsDataRefetch();\n              }\n            } else {\n              dispatch(ACTION_SQUARE_CUSTOMER_ID(JSON.parse(res.request.response).customer.id));\n            }\n          }\n\n          if (!saveCardChecked && userAuthenticated) {\n            updateUnsavedSquareCardIDs({\n              variables: {\n                unsavedSquareCardID: cardData.id,\n                firstName: userAuthenticated ? props.getClientData.client.firstName : firstName,\n                lastName: userAuthenticated ? props.getClientData.client.lastName : lastName,\n                email: userAuthenticated ? props.getClientData.client.email : email\n              }\n            });\n            props.clientDataRefetch();\n          }\n\n          return axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/customers/card\"), squareData, {\n            headers: {\n              Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n              Accept: \"application/json\",\n              \"Content-Type\": \"application/json\"\n            }\n          });\n        }).then( /*#__PURE__*/function () {\n          var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(res) {\n            var deleteCardData, matchedDuplicateCard;\n            return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n              while (1) switch (_context3.prev = _context3.next) {\n                case 0:\n                  if (!res.data.error) {\n                    _context3.next = 5;\n                    break;\n                  }\n\n                  changeClipLoaderActive(false);\n                  return _context3.abrupt(\"return\", changeErrorMessage(res.data.error.map(error => error.detail)));\n\n                case 5:\n                  changeErrorMessage([]);\n\n                  if (!squareStoredCreditCards) {\n                    _context3.next = 17;\n                    break;\n                  }\n\n                  if (!squareStoredCreditCards.some(x => x.billingAddress.postalCode === res.data.card.billingAddress.postalCode && x.cardBrand === res.data.card.cardBrand && x.cardholderName === res.data.card.cardholderName && x.expMonth === res.data.card.expMonth && x.expYear === res.data.card.expYear && x.last4 === res.data.card.last4)) {\n                    _context3.next = 17;\n                    break;\n                  }\n\n                  deleteCardData = {\n                    customerId: userAuthenticated ? props.getClientData.client.squareCustomerId : matchedClient.squareCustomerId,\n                    cardId: res.data.card.id\n                  };\n                  matchedDuplicateCard = squareStoredCreditCards.filter(x => x.billingAddress.postalCode === res.data.card.billingAddress.postalCode && x.cardBrand === res.data.card.cardBrand && x.cardholderName === res.data.card.cardholderName && x.expMonth === res.data.card.expMonth && x.expYear === res.data.card.expYear && x.last4 === res.data.card.last4)[0];\n                  dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\n                  changeClipLoaderActive(false);\n                  changeSuccessfulCardNonce(true);\n\n                  if (saveCardChecked) {\n                    if (userAuthenticated) {\n                      if (props.getClientData.client.unsavedSquareCardIDs.includes(matchedDuplicateCard.id)) {\n                        removeOneUnsavedSquareCardIDs({\n                          variables: {\n                            unsavedSquareCardID: matchedDuplicateCard.id,\n                            firstName: props.getClientData.client.firstName,\n                            lastName: props.getClientData.client.lastName,\n                            email: props.getClientData.client.email\n                          }\n                        });\n                      }\n                    }\n                  }\n\n                  _context3.next = 16;\n                  return axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/customers/delete_card\"), deleteCardData, {\n                    headers: {\n                      Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n                      Accept: \"application/json\",\n                      \"Content-Type\": \"application/json\"\n                    }\n                  });\n\n                case 16:\n                  return _context3.abrupt(\"return\", _context3.sent);\n\n                case 17:\n                  dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\n                  changeSuccessfulCardNonce(true);\n                  changeClipLoaderActive(false);\n\n                  if (!saveCardChecked && userAuthenticated) {\n                    updateUnsavedSquareCardIDs({\n                      variables: {\n                        unsavedSquareCardID: res.data.card.id,\n                        firstName: userAuthenticated ? props.getClientData.client.firstName : firstName,\n                        lastName: userAuthenticated ? props.getClientData.client.lastName : lastName,\n                        email: userAuthenticated ? props.getClientData.client.email : email\n                      }\n                    });\n                    props.clientDataRefetch();\n                  }\n\n                case 21:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }, _callee3);\n          }));\n\n          return function (_x) {\n            return _ref3.apply(this, arguments);\n          };\n        }()).catch(err => {\n          console.error(err);\n        });\n      };\n\n      const returningClientSquarePostRequestFunction = /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n          var squareData;\n          return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n            while (1) switch (_context5.prev = _context5.next) {\n              case 0:\n                squareData = {\n                  card_nonce: nonce,\n                  billingAddress: {\n                    postalCode: cardData.billing_postal_code\n                  },\n                  cardholderName: (userAuthenticated ? cardHolderFirstName ? cardHolderFirstName : props.getClientData.client.firstName.toUpperCase() : cardHolderFirstName ? cardHolderFirstName : firstName.toUpperCase()).trim() + \" \" + (userAuthenticated ? cardHolderLastName ? cardHolderLastName : props.getClientData.client.lastName.toUpperCase() : cardHolderLastName ? cardHolderLastName : lastName.toUpperCase()).trim(),\n                  verification_token: buyerVerificationToken,\n                  customerId: userAuthenticated ? props.getClientData.client.squareCustomerId : matchedClient.squareCustomerId\n                };\n                changeSuccessfulCardNonce(true);\n                changeClipLoaderActive(false);\n                _context5.next = 5;\n                return axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/customers/card\"), squareData, {\n                  headers: {\n                    Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n                    Accept: \"application/json\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }).then( /*#__PURE__*/function () {\n                  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(res) {\n                    var deleteCardData, matchedDuplicateCard;\n                    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                      while (1) switch (_context4.prev = _context4.next) {\n                        case 0:\n                          if (!squareStoredCreditCards) {\n                            _context4.next = 11;\n                            break;\n                          }\n\n                          if (!squareStoredCreditCards.some(x => x.billingAddress.postalCode === res.data.card.billingAddress.postalCode && x.cardBrand === res.data.card.cardBrand && x.cardholderName === res.data.card.cardholderName && x.expMonth === res.data.card.expMonth && x.expYear === res.data.card.expYear && x.last4 === res.data.card.last4)) {\n                            _context4.next = 11;\n                            break;\n                          }\n\n                          deleteCardData = {\n                            customerId: userAuthenticated ? props.getClientData.client.squareCustomerId : matchedClient.squareCustomerId,\n                            cardId: res.data.card.id\n                          };\n                          matchedDuplicateCard = squareStoredCreditCards.filter(x => x.billingAddress.postalCode === res.data.card.billingAddress.postalCode && x.cardBrand === res.data.card.cardBrand && x.cardholderName === res.data.card.cardholderName && x.expMonth === res.data.card.expMonth && x.expYear === res.data.card.expYear && x.last4 === res.data.card.last4)[0];\n                          dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\n                          changeSuccessfulCardNonce(true);\n                          changeClipLoaderActive(false);\n\n                          if (saveCardChecked) {\n                            if (userAuthenticated) {\n                              if (props.getClientData.client.unsavedSquareCardIDs.includes(matchedDuplicateCard.id)) {\n                                removeOneUnsavedSquareCardIDs({\n                                  variables: {\n                                    unsavedSquareCardID: matchedDuplicateCard.id,\n                                    firstName: props.getClientData.client.firstName,\n                                    lastName: props.getClientData.client.lastName,\n                                    email: props.getClientData.client.email\n                                  }\n                                });\n                              }\n                            }\n                          }\n\n                          _context4.next = 10;\n                          return axios.post(\"\".concat(process.env.REACT_APP_ENV === \"production\" ? process.env.REACT_APP_PRODUCTION_SERVER_URL : \"http://localhost:4000\", \"/api/customers/delete_card\"), deleteCardData, {\n                            headers: {\n                              Authorization: \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\n                              Accept: \"application/json\",\n                              \"Content-Type\": \"application/json\"\n                            }\n                          });\n\n                        case 10:\n                          return _context4.abrupt(\"return\", _context4.sent);\n\n                        case 11:\n                          dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\n                          changeSuccessfulCardNonce(true);\n                          changeClipLoaderActive(false);\n\n                          if (!saveCardChecked && userAuthenticated) {\n                            updateUnsavedSquareCardIDs({\n                              variables: {\n                                unsavedSquareCardID: res.data.card.id,\n                                firstName: props.getClientData ? props.getClientData.client.firstName : firstName,\n                                lastName: props.getClientData ? props.getClientData.client.lastName : lastName,\n                                email: props.getClientData ? props.getClientData.client.email : email\n                              }\n                            });\n                            props.clientDataRefetch();\n                          } else if (!userAuthenticated) {\n                            updateUnsavedSquareCardIDs({\n                              variables: {\n                                unsavedSquareCardID: res.data.card.id,\n                                firstName: matchedClient.firstName,\n                                lastName: matchedClient.lastName,\n                                email: matchedClient.email\n                              }\n                            });\n                            getClientsDataRefetch();\n                          }\n\n                        case 15:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }, _callee4);\n                  }));\n\n                  return function (_x2) {\n                    return _ref5.apply(this, arguments);\n                  };\n                }()).catch(err => {\n                  console.error(err);\n                });\n\n              case 5:\n                return _context5.abrupt(\"return\", _context5.sent);\n\n              case 6:\n              case \"end\":\n                return _context5.stop();\n            }\n          }, _callee5);\n        }));\n\n        return function returningClientSquarePostRequestFunction() {\n          return _ref4.apply(this, arguments);\n        };\n      }();\n\n      userAuthenticated ? props.getClientData.client.squareCustomerId ? cardHolderFirstName && cardHolderLastName && !selectedCreditCard.name ? returningClientSquarePostRequestFunction() : retrieveSquareCustomerFunction() : squarePostRequestFunction() : matchedClient ? matchedClient.squareCustomerId ? returningClientSquarePostRequestFunction() : squarePostRequestFunction() : squarePostRequestFunction();\n    }\n  };\n\n  const createVerificationDetails = () => {\n    return {\n      amount: \"\",\n      currencyCode: \"\",\n      intent: \"STORE\",\n      billingContact: {\n        familyName: userAuthenticated ? cardHolderLastName ? cardHolderLastName : props.getClientData.client.lastName : cardHolderLastName ? cardHolderLastName : lastName,\n        givenName: userAuthenticated ? cardHolderFirstName ? cardHolderFirstName : props.getClientData.client.firstName : cardHolderFirstName ? cardHolderFirstName : firstName,\n        email: userAuthenticated ? props.getClientData.client.email : email,\n        phone: userAuthenticated ? props.getClientData.client.phoneNumber : phoneNumber\n      }\n    };\n  };\n\n  const redirectToHome = () => {\n    if (!splashScreenComplete) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 14\n        }\n      });\n    } else if (!props.currentScreenSize) {\n      if (props.initialScreenSize >= 1200) {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: \"/\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 16\n          }\n        });\n      }\n    } else if (props.currentScreenSize >= 1200) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 14\n        }\n      });\n    }\n  };\n\n  const redirectToCheckout = () => {\n    if (successfulCardNonce) {\n      if (!props.currentScreenSize) {\n        if (props.initialScreenSize >= 1200) {\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\n        } else {\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/checkout/confirmation\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 851,\n              columnNumber: 18\n            }\n          });\n        }\n      } else {\n        if (props.currentScreenSize >= 1200) {\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\n        } else {\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\n          return /*#__PURE__*/React.createElement(Redirect, {\n            to: \"/checkout/confirmation\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 858,\n              columnNumber: 18\n            }\n          });\n        }\n      }\n    }\n  };\n\n  const handleCardHolderFirstName = e => {\n    changeCardHolderFirstName(e.currentTarget.value.toUpperCase().trim());\n  };\n\n  const handleCardHolderLastName = e => {\n    changeCardHolderLastName(e.currentTarget.value.toUpperCase().trim());\n  };\n\n  useEffect(() => {\n    const iFrameLabel = [...document.getElementsByClassName(\"sq-label\")].filter(x => x.innerText === \"CREDIT CARD\" || x.innerText === \"EXPIRATION\" || x.innerText === \"ZIP CODE\" || x.innerText === \"CVC\");\n    const iFrameLabelHidden = [...document.getElementsByClassName(\"sq-label\")].filter(x => x.className.includes(\"sq-payment-form-hidden\"));\n\n    if (selectedCreditCardFullData) {\n      document.getElementById(\"sq-payment-form-sq-card-number\").classList.add(\"sq-payment-form-hidden\");\n      document.getElementById(\"sq-payment-form-sq-expiration-date\").classList.add(\"sq-payment-form-hidden\");\n      document.getElementById(\"sq-payment-form-sq-postal-code\").classList.add(\"sq-payment-form-hidden\");\n      document.getElementById(\"sq-payment-form-sq-cvv\").classList.add(\"sq-payment-form-hidden\");\n\n      if (iFrameLabel) {\n        if (iFrameLabel.length > 0) {\n          iFrameLabel.forEach(x => x.classList.add(\"sq-payment-form-hidden\"));\n        }\n      }\n    } else {\n      document.getElementById(\"sq-payment-form-sq-card-number\").classList.remove(\"sq-payment-form-hidden\");\n      document.getElementById(\"sq-payment-form-sq-expiration-date\").classList.remove(\"sq-payment-form-hidden\");\n      document.getElementById(\"sq-payment-form-sq-postal-code\").classList.remove(\"sq-payment-form-hidden\");\n      document.getElementById(\"sq-payment-form-sq-cvv\").classList.remove(\"sq-payment-form-hidden\");\n\n      if (iFrameLabelHidden) {\n        if (iFrameLabelHidden.length > 0) {\n          iFrameLabelHidden.forEach(x => {\n            x.classList.remove(\"sq-payment-form-hidden\");\n          });\n        }\n      }\n    }\n  }, [selectedCreditCardFullData]);\n\n  const checkMark = () => {\n    return /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        x: 100\n      },\n      to: {\n        x: 0\n      },\n      config: {\n        duration: 2000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 7\n      }\n    }, styles => /*#__PURE__*/React.createElement(\"svg\", {\n      width: props.currentScreenSize === \"\" ? props.initialScreenSize >= 1800 ? \"2rem\" : props.initialScreenSize >= 1600 ? \"1rem\" : props.initialScreenSize >= 1200 ? \"0.5rem\" : \"100%\" : props.currentScreenSize >= 1800 ? \"2rem\" : props.currentScreenSize >= 1600 ? \"1rem\" : props.currentScreenSize >= 1200 ? \"0.5rem\" : \"100%\",\n      height: props.currentScreenSize === \"\" ? props.initialScreenSize >= 1800 ? \"2rem\" : props.initialScreenSize >= 1600 ? \"1.3rem\" : props.initialScreenSize >= 1200 ? \"0.5rem\" : props.initialScreenSize >= 360 ? \"2rem\" : \"1rem\" : props.currentScreenSize >= 1800 ? \"2rem\" : props.currentScreenSize >= 1600 ? \"1.3rem\" : props.currentScreenSize >= 1200 ? \"0.5rem\" : props.currentScreenSize >= 360 ? \"2rem\" : \"1rem\",\n      style: {\n        display: \"block\"\n      },\n      viewBox: \"0 0 13.229 13.229\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 931,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M2.851 7.56l2.45 2.482 5.36-6.958\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeDasharray: \"100\",\n      strokeDashoffset: pageOpened ? 0 : \"\".concat(styles.x),\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const handleSaveCardChecked = () => {\n    if (saveCardChecked) {\n      dispatch(ACTION_SAVE_CARD_UNCHECKED());\n    } else {\n      dispatch(ACTION_SAVE_CARD_CHECKED());\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_info_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1001,\n      columnNumber: 7\n    }\n  }, redirectToHome(), redirectToCheckout(), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"clip_loader_spinner_container\",\n    style: {\n      display: clipLoaderActive || squareFormLoading ? \"flex\" : \"none\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1004,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ClipLoader, {\n    size: 100,\n    css: override,\n    color: \"rgb(44, 44, 52)\",\n    loading: clipLoaderActive || squareFormLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1010,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_info_container_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1017,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: () => {\n      if (!props.currentScreenSize) {\n        if (props.initialScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          if (userAuthenticated) {\n            return \"/availability/timepreference\";\n          } else {\n            return \"/checkout\";\n          }\n        }\n      } else {\n        if (props.currentScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          if (userAuthenticated) {\n            return \"/availability/timepreference\";\n          } else {\n            return \"/checkout\";\n          }\n        }\n      }\n    },\n    onClick: () => {\n      if (userAuthenticated) {\n        dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED());\n      } else {\n        dispatch(ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED());\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1018,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"payment_info_back_arrow\",\n    icon: faChevronLeft,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1050,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1055,\n      columnNumber: 11\n    }\n  }, \"PAYMENT INFO\"), userAuthenticated && bookedWithCardID ? /*#__PURE__*/React.createElement(Link, {\n    to: () => {\n      if (!props.currentScreenSize) {\n        if (props.initialScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          return \"/checkout/confirmation\";\n        }\n      } else {\n        if (props.currentScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          return \"/checkout/confirmation\";\n        }\n      }\n    },\n    onClick: () => {\n      dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"payment_info_forward_arrow\",\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 15\n    }\n  })) : null), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"payment_info_header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1085,\n      columnNumber: 11\n    }\n  }, \"ENTER\", \" \", !props.currentScreenSize ? props.initialScreenSize <= 360 ? null : \"YOUR\" : props.currentScreenSize <= 360 ? null : \"YOUR\", \" \", \"PAYMENT INFORMATION\")), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"payment_info_statement\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1097,\n      columnNumber: 9\n    }\n  }, \"Your credit card will be used to hold your time slot and will not be charged until after your appointment. You may change your payment method after your service.\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"square_payment_form_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SquarePaymentForm, {\n    sandbox: true,\n    applicationId: process.env.REACT_APP_SQUARE_SANDBOX_APPLICATION_ID,\n    locationId: process.env.REACT_APP_SQUARE_SANDBOX_LOCATION_ID,\n    cardNonceResponseReceived: cardNonceResponseReceived,\n    createVerificationDetails: createVerificationDetails,\n    paymentFormLoaded: () => changeSquareFormLoading(false),\n    className: \"square_payment_form\",\n    placeholderCVV: \"CVC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    className: \"sq-fieldset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1113,\n      columnNumber: 13\n    }\n  }, !userAuthenticated || userAuthenticated && !squareStoredCreditCards || (userAuthenticated && squareStoredCreditCards ? squareStoredCreditCards.filter(x => !props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).length === 0 : false) ? null : /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"choose_a_credit_card_formgroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1124,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    className: \"sq-label\",\n    for: \"select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1125,\n      columnNumber: 19\n    }\n  }, \"CHOOSE A CREDIT CARD\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"choose_a_credit_card_dropdown_icon\",\n    icon: faChevronCircleDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1128,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    className: \"sq-cardholder-input\",\n    type: \"select\",\n    name: \"select\",\n    id: \"select\",\n    disabled: !userAuthenticated || userAuthenticated && !squareStoredCreditCards || (userAuthenticated && squareStoredCreditCards ? squareStoredCreditCards.filter(x => !props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).length === 0 : false),\n    value: userAuthenticated ? bookedWithCardID ? squareStoredCreditCards ? JSON.stringify({\n      name: squareStoredCreditCards.filter(x => x.id === bookedWithCardID)[0].cardBrand.split(\"_\").join(\" \") + \" - \" + squareStoredCreditCards.filter(x => x.id === bookedWithCardID)[0].last4,\n      id: bookedWithCardID\n    }) : JSON.stringify({\n      name: selectedCreditCard.name,\n      id: selectedCreditCard.id\n    }) : JSON.stringify({\n      name: selectedCreditCard.name,\n      id: selectedCreditCard.id\n    }) : JSON.stringify({\n      name: selectedCreditCard.name,\n      id: selectedCreditCard.id\n    }),\n    onChange: e => {\n      const optionsArr = [{\n        name: \"\",\n        id: \"\",\n        index: 0\n      }].concat(squareStoredCreditCards.filter(x => !props.getClientData.client.unsavedSquareCardIDs.includes(x.id)).map((x, i) => {\n        return {\n          name: x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4,\n          id: x.id,\n          index: i\n        };\n      }));\n      let chosenItem = optionsArr.filter((item, index) => index === e.target.options.selectedIndex)[0];\n\n      if (selectedCreditCard.name) {\n        dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\n        changeSelectedCreditCard({\n          name: chosenItem.name,\n          id: chosenItem.id\n        });\n        changeCardHolderFirstName(squareCustomerInfo.givenName.toUpperCase());\n        changeCardHolderLastName(squareCustomerInfo.familyName.toUpperCase());\n\n        if (e.target.value === \"NEW CARD\") {\n          dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\n          changeSelectedCreditCard({\n            name: \"\",\n            id: \"\"\n          });\n          changeSelectedCreditCardFullData(\"\");\n          changeCardHolderFirstName(\"\");\n          changeCardHolderLastName(\"\");\n        }\n      } else {\n        dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\n        changeSelectedCreditCard({\n          name: chosenItem.name,\n          id: chosenItem.id\n        });\n        changeCardHolderFirstName(squareCustomerInfo.givenName.toUpperCase());\n        changeCardHolderLastName(squareCustomerInfo.familyName.toUpperCase());\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1132,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1245,\n      columnNumber: 21\n    }\n  }, \"NEW CARD\"), renderStoredCreditCardOptions())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq_card_holder_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1250,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sq-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1251,\n      columnNumber: 17\n    }\n  }, \"CARDHOLDER FIRST NAME\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"first_name\",\n    type: \"text\",\n    maxLength: \"100\",\n    placeholder: \"Enter cardholder first name here\",\n    className: \"sq-cardholder-input\",\n    disabled: selectedCreditCardFullData ? true : false,\n    onChange: handleCardHolderFirstName,\n    value: cardHolderFirstName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1252,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq_card_holder_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1263,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sq-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1264,\n      columnNumber: 17\n    }\n  }, \"CARDHOLDER LAST NAME\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"last_name\",\n    type: \"text\",\n    maxLength: \"100\",\n    placeholder: \"Enter cardholder last name here\",\n    className: \"sq-cardholder-input\",\n    disabled: selectedCreditCardFullData ? true : false,\n    onChange: handleCardHolderLastName,\n    value: cardHolderLastName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1265,\n      columnNumber: 17\n    }\n  })), selectedCreditCardFullData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq_card_holder_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1277,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sq-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1279,\n      columnNumber: 19\n    }\n  }, \"CREDIT CARD \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"credit_card\",\n    type: \"text\",\n    maxLength: \"100\",\n    className: \"sq-cardholder-input\",\n    disabled: selectedCreditCardFullData ? true : false,\n    value: selectedCreditCardFullData.cardBrand.toLowerCase() === \"american_express\" ? \"•••• •••••• •\" + selectedCreditCardFullData.last4 : \"•••• •••• •••• \" + selectedCreditCardFullData.last4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1280,\n      columnNumber: 19\n    }\n  })) : null, /*#__PURE__*/React.createElement(CreditCardNumberInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1295,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq_third_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1296,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-form-third_credit_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1297,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CreditCardExpirationDateInput, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1298,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-form-third_postal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1300,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CreditCardPostalCodeInput, {\n    label: \"ZIP CODE\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1301,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-form-third_cvv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1304,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CreditCardCVVInput, {\n    label: \"CVC\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1305,\n      columnNumber: 19\n    }\n  }))), selectedCreditCardFullData ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq_third_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1310,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-form-third_credit_card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1311,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sq-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1313,\n      columnNumber: 21\n    }\n  }, \"EXPIRATION \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"expiration_date\",\n    type: \"text\",\n    className: \"sq-cardholder-input\",\n    disabled: selectedCreditCardFullData ? true : false,\n    value: selectedCreditCardFullData.expMonth >= 10 ? selectedCreditCardFullData.expMonth.toString() + \"/\" + selectedCreditCardFullData.expYear.toString().substr(-2) : \"0\" + selectedCreditCardFullData.expMonth.toString() + \"/\" + selectedCreditCardFullData.expYear.toString().substr(-2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1314,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-form-third_postal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1335,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sq-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1337,\n      columnNumber: 21\n    }\n  }, \"ZIP CODE \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"postalCode\",\n    type: \"text\",\n    className: \"sq-cardholder-input\",\n    disabled: selectedCreditCardFullData ? true : false,\n    value: \"•••••\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1338,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-form-third_cvv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1346,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sq-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1348,\n      columnNumber: 21\n    }\n  }, \"CVC \"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"cvc_code\",\n    type: \"text\",\n    className: \"sq-cardholder-input\",\n    disabled: selectedCreditCardFullData ? true : false,\n    value: selectedCreditCardFullData.cardBrand.toLowerCase() === \"american_express\" ? \"••••\" : \"•••\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1349,\n      columnNumber: 21\n    }\n  }))) : null, !selectedCreditCard.name && !selectedCreditCard.id && userAuthenticated ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq_save_card_information_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1367,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fa-layers fa-fw client_consent_form_checkbox\",\n    style: {\n      transform: !props.currentScreenSize ? props.initialScreenSize >= 1200 ? \"scale(1.5) translate(0%, -26%)\" : null : props.currentScreenSize >= 1200 ? \"scale(1.5) translate(0%, -26%)\" : null\n    },\n    onClick: handleSaveCardChecked,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1368,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    color: \"rgba(155, 155, 155, 0.4)\",\n    transform: !props.currentScreenSize ? props.initialScreenSize >= 360 ? \"grow-20\" : \"grow-10\" : props.currentScreenSize >= 360 ? \"grow-20\" : \"grow-10\",\n    icon: faSquare,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1381,\n      columnNumber: 21\n    }\n  }), saveCardChecked ? checkMark() : null), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1396,\n      columnNumber: 19\n    }\n  }, \"Save this card information for future bookings?\")) : null), selectedCreditCardFullData || !selectedCreditCard.name && (!cardHolderFirstName || !cardHolderLastName) && errorMessages.length === 0 ? /*#__PURE__*/React.createElement(Link, {\n    to: () => {\n      if (!props.currentScreenSize) {\n        if (props.initialScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          return \"/checkout/confirmation\";\n        }\n      } else {\n        if (props.currentScreenSize >= 1200) {\n          return \"/\";\n        } else {\n          return \"/checkout/confirmation\";\n        }\n      }\n    },\n    style: {\n      display: \"block\",\n      pointerEvents: !selectedCreditCard.name && (!cardHolderFirstName || !cardHolderLastName) ? \"none\" : \"auto\",\n      cursor: \"pointer\"\n    },\n    onClick: () => {\n      if (userAuthenticated) {\n        if (selectedCreditCardFullData) {\n          dispatch(ACTION_BOOKED_WITH_CARD_ID(selectedCreditCardFullData.id));\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1404,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-creditcard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1442,\n      columnNumber: 17\n    }\n  }, \"Submit Card Information\")) : /*#__PURE__*/React.createElement(CreditCardSubmitButton, {\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1445,\n      columnNumber: 15\n    }\n  }, \"Submit Card Information\")), selectedCreditCardFullData && errorMessages.length === 0 ? null : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sq-error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1451,\n      columnNumber: 13\n    }\n  }, errorMessages.map(errorMessage => /*#__PURE__*/React.createElement(\"li\", {\n    key: \"sq-error-\".concat(errorMessage),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 1453,\n      columnNumber: 17\n    }\n  }, errorMessage))))));\n};\n\nexport default PaymentInfo;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/HighEnd/Client/src/components/payment_info/PaymentInfo.js"],"names":["React","useState","useEffect","useCallback","useSelector","useDispatch","SquarePaymentForm","CreditCardNumberInput","CreditCardExpirationDateInput","CreditCardPostalCodeInput","CreditCardCVVInput","CreditCardSubmitButton","faChevronLeft","faChevronRight","faChevronCircleDown","faSquare","Redirect","Link","FontAwesomeIcon","axios","getClientsQuery","removeOneUnsavedSquareCardIDsMutation","updateUnsavedSquareCardIDsMutation","updateClientSquareIDMutation","useMutation","useQuery","FormGroup","Label","Input","css","ClipLoader","Spring","ACTION_SAVE_CARD_UNCHECKED","ACTION_SAVE_CARD_CHECKED","ACTION_SQUARE_CUSTOMER_ID_RESET","ACTION_SQUARE_CUSTOMER_ID","ACTION_BOOKED_WITH_CARD_ID_RESET","ACTION_BOOKED_WITH_CARD_ID","ACTION_CONFIRMATION_PAGE_OPENED","ACTION_TIME_PREFERENCE_PAGE_OPENED","ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED","PaymentInfo","props","dispatch","userAuthenticated","state","user_authenticated","saveCardChecked","save_card_checked","squareCustomerID","square_customer_id","bookedWithCardID","booked_with_card_id","firstName","first_name","lastName","last_name","email","phoneNumber","phone_number","splashScreenComplete","errorMessages","changeErrorMessage","cardHolderFirstName","changeCardHolderFirstName","cardHolderLastName","changeCardHolderLastName","successfulCardNonce","changeSuccessfulCardNonce","squareStoredCreditCards","changeSquareStoredCreditCards","squareCustomerInfo","changeSquareCustomerInfo","name","id","selectedCreditCard","changeSelectedCreditCard","selectedCreditCardFullData","changeSelectedCreditCardFullData","squareFormLoading","changeSquareFormLoading","pageOpened","changePageOpened","clipLoaderActive","changeClipLoaderActive","updateUnsavedSquareCardIDs","updateClientSquareID","removeOneUnsavedSquareCardIDs","fetchPolicy","getClientsData","data","getClientsDataRefetch","refetch","pageNowOpen","setTimeout","clearTimeout","cardFullData","filter","x","cardBrand","split","join","last4","givenName","toUpperCase","familyName","deleteSquareCustomerFunction","post","process","env","REACT_APP_ENV","REACT_APP_PRODUCTION_SERVER_URL","squareCustomerId","headers","Authorization","REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN","Accept","matchedClient","deleteCustomer","i","clients","length","deleteCustomerData","clientDataRefetch","currentScreenSize","initialScreenSize","window","scrollTo","largeScreenFrozenScrollPosition","override","creditCardSplitArr","fullData","find","replace","trim","retrieveSquareCustomerFunction","getClientData","client","fetchData","customerData","customer","cards","renderStoredCreditCardOptions","unsavedSquareCardIDs","includes","map","JSON","stringify","cardNonceResponseReceived","errors","nonce","cardData","buyerVerificationToken","error","message","squareCustomerData","family_name","given_name","email_address","squarePostRequestFunction","then","res","err","squareData","card_nonce","billingAddress","postalCode","billing_postal_code","cardholderName","verification_token","customerId","parse","request","response","variables","unsavedSquareCardID","detail","some","card","expMonth","expYear","deleteCardData","cardId","matchedDuplicateCard","catch","console","returningClientSquarePostRequestFunction","createVerificationDetails","amount","currencyCode","intent","billingContact","phone","redirectToHome","redirectToCheckout","handleCardHolderFirstName","e","currentTarget","value","handleCardHolderLastName","iFrameLabel","document","getElementsByClassName","innerText","iFrameLabelHidden","className","getElementById","classList","add","forEach","remove","checkMark","duration","styles","display","handleSaveCardChecked","REACT_APP_SQUARE_SANDBOX_APPLICATION_ID","REACT_APP_SQUARE_SANDBOX_LOCATION_ID","optionsArr","index","concat","chosenItem","item","target","options","selectedIndex","toLowerCase","toString","substr","transform","pointerEvents","cursor","errorMessage"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  SquarePaymentForm,\r\n  CreditCardNumberInput,\r\n  CreditCardExpirationDateInput,\r\n  CreditCardPostalCodeInput,\r\n  CreditCardCVVInput,\r\n  CreditCardSubmitButton,\r\n} from \"react-square-payment-form\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faChevronCircleDown,\r\n  faSquare,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Redirect, Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport getClientsQuery from \"../../graphql/queries/getClientsQuery\";\r\nimport removeOneUnsavedSquareCardIDsMutation from \"../../graphql/mutations/removeOneUnsavedSquareCardIDsMutation\";\r\nimport updateUnsavedSquareCardIDsMutation from \"../../graphql/mutations/updateUnsavedSquareCardIDsMutation\";\r\nimport updateClientSquareIDMutation from \"../../graphql/mutations/updateClientSquareIDMutation\";\r\nimport { useMutation, useQuery } from \"@apollo/react-hooks\";\r\nimport { FormGroup, Label, Input } from \"reactstrap\";\r\nimport { css } from \"@emotion/css\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { Spring } from \"react-spring/renderprops\";\r\nimport ACTION_SAVE_CARD_UNCHECKED from \"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_UNCHECKED\";\r\nimport ACTION_SAVE_CARD_CHECKED from \"../../actions/PaymentInfo/SaveCardChecked/ACTION_SAVE_CARD_CHECKED\";\r\nimport ACTION_SQUARE_CUSTOMER_ID_RESET from \"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID_RESET\";\r\nimport ACTION_SQUARE_CUSTOMER_ID from \"../../actions/PaymentInfo/SquareCustomerID/ACTION_SQUARE_CUSTOMER_ID\";\r\nimport ACTION_BOOKED_WITH_CARD_ID_RESET from \"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID_RESET\";\r\nimport ACTION_BOOKED_WITH_CARD_ID from \"../../actions/PaymentInfo/BookedWithCardID/ACTION_BOOKED_WITH_CARD_ID\";\r\nimport ACTION_CONFIRMATION_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_CONFIRMATION_PAGE_OPENED\";\r\nimport ACTION_TIME_PREFERENCE_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_TIME_PREFERENCE_PAGE_OPENED\";\r\nimport ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED from \"../../actions/InCart/CartPageOpened/ACTION_GUEST_CHECKOUT_FORM_PAGE_OPENED\";\r\nimport \"./PaymentInfo.css\";\r\nimport \"../account/clientprofile/ConsentForm/ConsentForm.css\";\r\n\r\nconst PaymentInfo = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userAuthenticated = useSelector(\r\n    (state) => state.userAuthenticated.user_authenticated\r\n  );\r\n  const saveCardChecked = useSelector(\r\n    (state) => state.saveCardChecked.save_card_checked\r\n  );\r\n  const squareCustomerID = useSelector(\r\n    (state) => state.squareCustomerID.square_customer_id\r\n  );\r\n  const bookedWithCardID = useSelector(\r\n    (state) => state.bookedWithCardID.booked_with_card_id\r\n  );\r\n\r\n  // Checkout Form States\r\n  const firstName = useSelector((state) => state.firstName.first_name);\r\n  const lastName = useSelector((state) => state.lastName.last_name);\r\n  const email = useSelector((state) => state.email.email);\r\n  const phoneNumber = useSelector((state) => state.phoneNumber.phone_number);\r\n\r\n  const splashScreenComplete = useSelector(\r\n    (state) => state.splashScreenComplete.splashScreenComplete\r\n  );\r\n\r\n  const [errorMessages, changeErrorMessage] = useState([]);\r\n  const [cardHolderFirstName, changeCardHolderFirstName] = useState(\"\");\r\n  const [cardHolderLastName, changeCardHolderLastName] = useState(\"\");\r\n  const [successfulCardNonce, changeSuccessfulCardNonce] = useState(false);\r\n  const [squareStoredCreditCards, changeSquareStoredCreditCards] = useState(\"\");\r\n  const [squareCustomerInfo, changeSquareCustomerInfo] = useState(\"\");\r\n  const [selectedCreditCard, changeSelectedCreditCard] = useState({\r\n    name: \"\",\r\n    id: \"\",\r\n  });\r\n  const [\r\n    selectedCreditCardFullData,\r\n    changeSelectedCreditCardFullData,\r\n  ] = useState(\"\");\r\n  const [squareFormLoading, changeSquareFormLoading] = useState(true);\r\n  const [pageOpened, changePageOpened] = useState(false);\r\n  const [clipLoaderActive, changeClipLoaderActive] = useState(false);\r\n\r\n  const [updateUnsavedSquareCardIDs] = useMutation(\r\n    updateUnsavedSquareCardIDsMutation\r\n  );\r\n\r\n  const [updateClientSquareID] = useMutation(updateClientSquareIDMutation);\r\n\r\n  const [removeOneUnsavedSquareCardIDs] = useMutation(\r\n    removeOneUnsavedSquareCardIDsMutation\r\n  );\r\n\r\n  const { data: getClientsData, refetch: getClientsDataRefetch } = useQuery(\r\n    getClientsQuery,\r\n    {\r\n      fetchPolicy: \"no-cache\",\r\n    }\r\n  );\r\n\r\n  useEffect(() => {\r\n    changePageOpened(true);\r\n    const pageNowOpen = setTimeout(() => {\r\n      changePageOpened(false);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(pageNowOpen);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userAuthenticated) {\r\n      if (bookedWithCardID) {\r\n        if (squareStoredCreditCards) {\r\n          const cardFullData = squareStoredCreditCards.filter(\r\n            (x) => x.id === bookedWithCardID\r\n          )[0];\r\n\r\n          if (!selectedCreditCard.name) {\r\n            changeSelectedCreditCard({\r\n              name:\r\n                cardFullData.cardBrand.split(\"_\").join(\" \") +\r\n                \" - \" +\r\n                cardFullData.last4,\r\n              id: cardFullData.id,\r\n            });\r\n\r\n            changeCardHolderFirstName(\r\n              squareCustomerInfo.givenName.toUpperCase()\r\n            );\r\n            changeCardHolderLastName(\r\n              squareCustomerInfo.familyName.toUpperCase()\r\n            );\r\n\r\n            changeSelectedCreditCardFullData(cardFullData);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    squareCustomerInfo,\r\n    bookedWithCardID,\r\n    squareStoredCreditCards,\r\n    userAuthenticated,\r\n    pageOpened,\r\n    selectedCreditCard,\r\n  ]);\r\n\r\n  const deleteSquareCustomerFunction = useCallback(() => {\r\n    return axios.post(\r\n      `${\r\n        process.env.REACT_APP_ENV === \"production\"\r\n          ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n          : \"http://localhost:4000\"\r\n      }/api/delete_customer`,\r\n      {\r\n        data: {\r\n          squareCustomerId: squareCustomerID,\r\n        },\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization:\r\n            \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n          Accept: \"application/json\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      }\r\n    );\r\n  }, [squareCustomerID]);\r\n\r\n  useEffect(() => {\r\n    if (!userAuthenticated) {\r\n      if (pageOpened && squareCustomerID) {\r\n        let matchedClient;\r\n\r\n        const deleteCustomer = setTimeout(() => {\r\n          if (getClientsData) {\r\n            for (let i = 0; i < getClientsData.clients.length; i++) {\r\n              if (getClientsData.clients[i].email === email) {\r\n                matchedClient = getClientsData.clients[i];\r\n              }\r\n            }\r\n          }\r\n\r\n          if (!matchedClient) {\r\n            const deleteCustomerData = async () => {\r\n              await deleteSquareCustomerFunction();\r\n\r\n              dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n              dispatch(ACTION_SQUARE_CUSTOMER_ID_RESET());\r\n            };\r\n            deleteCustomerData();\r\n          }\r\n        }, 500);\r\n\r\n        return () => {\r\n          clearTimeout(deleteCustomer);\r\n        };\r\n      }\r\n    }\r\n  }, [\r\n    deleteSquareCustomerFunction,\r\n    email,\r\n    getClientsData,\r\n    pageOpened,\r\n    userAuthenticated,\r\n    squareCustomerID,\r\n    dispatch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (userAuthenticated) {\r\n      props.clientDataRefetch();\r\n    }\r\n  }, [props, userAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    if (!squareFormLoading) {\r\n      if (!props.currentScreenSize) {\r\n        if (!props.initialScreenSize >= 1200) {\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          window.scrollTo(0, props.largeScreenFrozenScrollPosition);\r\n        }\r\n      } else {\r\n        if (!props.currentScreenSize >= 1200) {\r\n          window.scrollTo(0, 0);\r\n        } else {\r\n          window.scrollTo(0, props.largeScreenFrozenScrollPosition);\r\n        }\r\n      }\r\n    }\r\n  }, [\r\n    squareFormLoading,\r\n    props.currentScreenSize,\r\n    props.initialScreenSize,\r\n    props.largeScreenFrozenScrollPosition,\r\n  ]);\r\n\r\n  const override = css`\r\n    display: block;\r\n    position: absolute;\r\n    left: 25%;\r\n    right: 25%;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    if (squareStoredCreditCards) {\r\n      if (\r\n        selectedCreditCard &&\r\n        selectedCreditCard.name &&\r\n        selectedCreditCard.id\r\n      ) {\r\n        const creditCardSplitArr = selectedCreditCard.name.split(\" -\");\r\n\r\n        const fullData = squareStoredCreditCards.find((x) => {\r\n          return (\r\n            x.cardBrand === creditCardSplitArr[0].replace(\" \", \"_\").trim() &&\r\n            x.last4 ===\r\n              creditCardSplitArr[creditCardSplitArr.length - 1].trim() &&\r\n            x.id === selectedCreditCard.id\r\n          );\r\n        });\r\n\r\n        if (fullData) {\r\n          changeSelectedCreditCardFullData(fullData);\r\n        }\r\n      }\r\n    }\r\n  }, [selectedCreditCard, squareStoredCreditCards]);\r\n\r\n  const retrieveSquareCustomerFunction = useCallback(\r\n    (matchedClient) => {\r\n      return axios.post(\r\n        `${\r\n          process.env.REACT_APP_ENV === \"production\"\r\n            ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n            : \"http://localhost:4000\"\r\n        }/api/retrieve_customer`,\r\n        {\r\n          data: {\r\n            squareCustomerId: userAuthenticated\r\n              ? props.getClientData\r\n                ? props.getClientData.client\r\n                  ? props.getClientData.client.squareCustomerId\r\n                  : matchedClient\r\n                  ? matchedClient.squareCustomerId\r\n                  : null\r\n                : matchedClient\r\n                ? matchedClient.squareCustomerId\r\n                : null\r\n              : matchedClient\r\n              ? matchedClient.squareCustomerId\r\n              : null,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization:\r\n              \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n            Accept: \"application/json\",\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n        }\r\n      );\r\n    },\r\n    [props.getClientData, userAuthenticated]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (userAuthenticated) {\r\n      if (!squareStoredCreditCards) {\r\n        const fetchData = async () => {\r\n          const customerData = await retrieveSquareCustomerFunction();\r\n\r\n          if (customerData) {\r\n            if (customerData.data) {\r\n              if (customerData.data.customer) {\r\n                changeSquareStoredCreditCards(customerData.data.customer.cards);\r\n                changeSquareCustomerInfo(customerData.data.customer);\r\n              }\r\n            }\r\n          }\r\n        };\r\n\r\n        fetchData();\r\n      }\r\n    }\r\n  }, [\r\n    userAuthenticated,\r\n    retrieveSquareCustomerFunction,\r\n    squareStoredCreditCards,\r\n  ]);\r\n\r\n  const renderStoredCreditCardOptions = () => {\r\n    if (squareStoredCreditCards) {\r\n      return squareStoredCreditCards\r\n        .filter(\r\n          (x) => !props.getClientData.client.unsavedSquareCardIDs.includes(x.id)\r\n        )\r\n        .map((x, i) => {\r\n          return (\r\n            <option\r\n              value={JSON.stringify({\r\n                name: x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4,\r\n                id: x.id,\r\n              })}\r\n              key={i}\r\n            >\r\n              {x.cardBrand.split(\"_\").join(\" \") + \" - \" + x.last4}\r\n            </option>\r\n          );\r\n        });\r\n    }\r\n  };\r\n\r\n  const cardNonceResponseReceived = (\r\n    errors,\r\n    nonce,\r\n    cardData,\r\n    buyerVerificationToken\r\n  ) => {\r\n    changeClipLoaderActive(true);\r\n    if (errors) {\r\n      changeClipLoaderActive(false);\r\n      return changeErrorMessage(\r\n        errors.map((error) => (error ? error.message : null))\r\n      );\r\n    } else {\r\n      changeErrorMessage([]);\r\n\r\n      let matchedClient;\r\n\r\n      if (getClientsData) {\r\n        for (let i = 0; i < getClientsData.clients.length; i++) {\r\n          if (getClientsData.clients[i].email === email) {\r\n            matchedClient = getClientsData.clients[i];\r\n          }\r\n        }\r\n      }\r\n\r\n      const squareCustomerData = {\r\n        family_name: props.getClientData\r\n          ? props.getClientData.client.lastName\r\n          : lastName,\r\n        given_name: props.getClientData\r\n          ? props.getClientData.client.firstName\r\n          : firstName,\r\n        email_address: props.getClientData\r\n          ? props.getClientData.client.email\r\n          : email,\r\n        phone_number: props.getClientData\r\n          ? props.getClientData.client.phoneNumber\r\n          : phoneNumber,\r\n      };\r\n\r\n      const squarePostRequestFunction = () => {\r\n        axios\r\n          .post(\r\n            `${\r\n              process.env.REACT_APP_ENV === \"production\"\r\n                ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                : \"http://localhost:4000\"\r\n            }/api/customers`,\r\n            squareCustomerData,\r\n            {\r\n              headers: {\r\n                Authorization:\r\n                  \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          )\r\n          .then((res, err) => {\r\n            const squareData = {\r\n              card_nonce: nonce,\r\n              billingAddress: { postalCode: cardData.billing_postal_code },\r\n              cardholderName:\r\n                (userAuthenticated\r\n                  ? cardHolderFirstName\r\n                    ? cardHolderFirstName\r\n                    : props.getClientData.client.firstName\r\n                  : cardHolderFirstName\r\n                  ? cardHolderFirstName\r\n                  : firstName\r\n                ).trim() +\r\n                \" \" +\r\n                (userAuthenticated\r\n                  ? cardHolderLastName\r\n                    ? cardHolderLastName\r\n                    : props.getClientData.client.lastName\r\n                  : cardHolderLastName\r\n                  ? cardHolderLastName\r\n                  : lastName\r\n                ).trim(),\r\n              verification_token: buyerVerificationToken,\r\n              customerId: JSON.parse(res.request.response).customer.id,\r\n            };\r\n\r\n            if (userAuthenticated) {\r\n              updateClientSquareID({\r\n                variables: {\r\n                  squareCustomerId: JSON.parse(res.request.response).customer\r\n                    .id,\r\n                  firstName: props.getClientData.client.firstName,\r\n                  lastName: props.getClientData.client.lastName,\r\n                  email: props.getClientData.client.email,\r\n                },\r\n              });\r\n\r\n              props.clientDataRefetch();\r\n            } else {\r\n              if (matchedClient) {\r\n                if (!matchedClient.squareCustomerId) {\r\n                  updateClientSquareID({\r\n                    variables: {\r\n                      squareCustomerId: JSON.parse(res.request.response)\r\n                        .customer.id,\r\n                      firstName: firstName,\r\n                      lastName: lastName,\r\n                      email: email,\r\n                    },\r\n                  });\r\n\r\n                  getClientsDataRefetch();\r\n                }\r\n              } else {\r\n                dispatch(\r\n                  ACTION_SQUARE_CUSTOMER_ID(\r\n                    JSON.parse(res.request.response).customer.id\r\n                  )\r\n                );\r\n              }\r\n            }\r\n\r\n            if (!saveCardChecked && userAuthenticated) {\r\n              updateUnsavedSquareCardIDs({\r\n                variables: {\r\n                  unsavedSquareCardID: cardData.id,\r\n                  firstName: userAuthenticated\r\n                    ? props.getClientData.client.firstName\r\n                    : firstName,\r\n                  lastName: userAuthenticated\r\n                    ? props.getClientData.client.lastName\r\n                    : lastName,\r\n                  email: userAuthenticated\r\n                    ? props.getClientData.client.email\r\n                    : email,\r\n                },\r\n              });\r\n\r\n              props.clientDataRefetch();\r\n            }\r\n\r\n            return axios.post(\r\n              `${\r\n                process.env.REACT_APP_ENV === \"production\"\r\n                  ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                  : \"http://localhost:4000\"\r\n              }/api/customers/card`,\r\n              squareData,\r\n              {\r\n                headers: {\r\n                  Authorization:\r\n                    \"Bearer \" +\r\n                    process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                  Accept: \"application/json\",\r\n                  \"Content-Type\": \"application/json\",\r\n                },\r\n              }\r\n            );\r\n          })\r\n          .then(async (res) => {\r\n            if (res.data.error) {\r\n              changeClipLoaderActive(false);\r\n              return changeErrorMessage(\r\n                res.data.error.map((error) => error.detail)\r\n              );\r\n            } else {\r\n              changeErrorMessage([]);\r\n              if (squareStoredCreditCards) {\r\n                if (\r\n                  squareStoredCreditCards.some(\r\n                    (x) =>\r\n                      x.billingAddress.postalCode ===\r\n                        res.data.card.billingAddress.postalCode &&\r\n                      x.cardBrand === res.data.card.cardBrand &&\r\n                      x.cardholderName === res.data.card.cardholderName &&\r\n                      x.expMonth === res.data.card.expMonth &&\r\n                      x.expYear === res.data.card.expYear &&\r\n                      x.last4 === res.data.card.last4\r\n                  )\r\n                ) {\r\n                  const deleteCardData = {\r\n                    customerId: userAuthenticated\r\n                      ? props.getClientData.client.squareCustomerId\r\n                      : matchedClient.squareCustomerId,\r\n                    cardId: res.data.card.id,\r\n                  };\r\n\r\n                  const matchedDuplicateCard = squareStoredCreditCards.filter(\r\n                    (x) =>\r\n                      x.billingAddress.postalCode ===\r\n                        res.data.card.billingAddress.postalCode &&\r\n                      x.cardBrand === res.data.card.cardBrand &&\r\n                      x.cardholderName === res.data.card.cardholderName &&\r\n                      x.expMonth === res.data.card.expMonth &&\r\n                      x.expYear === res.data.card.expYear &&\r\n                      x.last4 === res.data.card.last4\r\n                  )[0];\r\n\r\n                  dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\r\n                  changeClipLoaderActive(false);\r\n                  changeSuccessfulCardNonce(true);\r\n\r\n                  if (saveCardChecked) {\r\n                    if (userAuthenticated) {\r\n                      if (\r\n                        props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                          matchedDuplicateCard.id\r\n                        )\r\n                      ) {\r\n                        removeOneUnsavedSquareCardIDs({\r\n                          variables: {\r\n                            unsavedSquareCardID: matchedDuplicateCard.id,\r\n                            firstName: props.getClientData.client.firstName,\r\n                            lastName: props.getClientData.client.lastName,\r\n                            email: props.getClientData.client.email,\r\n                          },\r\n                        });\r\n                      }\r\n                    }\r\n                  }\r\n\r\n                  return await axios.post(\r\n                    `${\r\n                      process.env.REACT_APP_ENV === \"production\"\r\n                        ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                        : \"http://localhost:4000\"\r\n                    }/api/customers/delete_card`,\r\n                    deleteCardData,\r\n                    {\r\n                      headers: {\r\n                        Authorization:\r\n                          \"Bearer \" +\r\n                          process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                        Accept: \"application/json\",\r\n                        \"Content-Type\": \"application/json\",\r\n                      },\r\n                    }\r\n                  );\r\n                }\r\n              }\r\n\r\n              dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\r\n              changeSuccessfulCardNonce(true);\r\n              changeClipLoaderActive(false);\r\n              if (!saveCardChecked && userAuthenticated) {\r\n                updateUnsavedSquareCardIDs({\r\n                  variables: {\r\n                    unsavedSquareCardID: res.data.card.id,\r\n                    firstName: userAuthenticated\r\n                      ? props.getClientData.client.firstName\r\n                      : firstName,\r\n                    lastName: userAuthenticated\r\n                      ? props.getClientData.client.lastName\r\n                      : lastName,\r\n                    email: userAuthenticated\r\n                      ? props.getClientData.client.email\r\n                      : email,\r\n                  },\r\n                });\r\n\r\n                props.clientDataRefetch();\r\n              }\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      };\r\n\r\n      const returningClientSquarePostRequestFunction = async () => {\r\n        const squareData = {\r\n          card_nonce: nonce,\r\n          billingAddress: { postalCode: cardData.billing_postal_code },\r\n          cardholderName:\r\n            (userAuthenticated\r\n              ? cardHolderFirstName\r\n                ? cardHolderFirstName\r\n                : props.getClientData.client.firstName.toUpperCase()\r\n              : cardHolderFirstName\r\n              ? cardHolderFirstName\r\n              : firstName.toUpperCase()\r\n            ).trim() +\r\n            \" \" +\r\n            (userAuthenticated\r\n              ? cardHolderLastName\r\n                ? cardHolderLastName\r\n                : props.getClientData.client.lastName.toUpperCase()\r\n              : cardHolderLastName\r\n              ? cardHolderLastName\r\n              : lastName.toUpperCase()\r\n            ).trim(),\r\n          verification_token: buyerVerificationToken,\r\n          customerId: userAuthenticated\r\n            ? props.getClientData.client.squareCustomerId\r\n            : matchedClient.squareCustomerId,\r\n        };\r\n\r\n        changeSuccessfulCardNonce(true);\r\n        changeClipLoaderActive(false);\r\n\r\n        return await axios\r\n          .post(\r\n            `${\r\n              process.env.REACT_APP_ENV === \"production\"\r\n                ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                : \"http://localhost:4000\"\r\n            }/api/customers/card`,\r\n            squareData,\r\n            {\r\n              headers: {\r\n                Authorization:\r\n                  \"Bearer \" + process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                Accept: \"application/json\",\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n            }\r\n          )\r\n          .then(async (res) => {\r\n            if (squareStoredCreditCards) {\r\n              if (\r\n                squareStoredCreditCards.some(\r\n                  (x) =>\r\n                    x.billingAddress.postalCode ===\r\n                      res.data.card.billingAddress.postalCode &&\r\n                    x.cardBrand === res.data.card.cardBrand &&\r\n                    x.cardholderName === res.data.card.cardholderName &&\r\n                    x.expMonth === res.data.card.expMonth &&\r\n                    x.expYear === res.data.card.expYear &&\r\n                    x.last4 === res.data.card.last4\r\n                )\r\n              ) {\r\n                const deleteCardData = {\r\n                  customerId: userAuthenticated\r\n                    ? props.getClientData.client.squareCustomerId\r\n                    : matchedClient.squareCustomerId,\r\n                  cardId: res.data.card.id,\r\n                };\r\n\r\n                const matchedDuplicateCard = squareStoredCreditCards.filter(\r\n                  (x) =>\r\n                    x.billingAddress.postalCode ===\r\n                      res.data.card.billingAddress.postalCode &&\r\n                    x.cardBrand === res.data.card.cardBrand &&\r\n                    x.cardholderName === res.data.card.cardholderName &&\r\n                    x.expMonth === res.data.card.expMonth &&\r\n                    x.expYear === res.data.card.expYear &&\r\n                    x.last4 === res.data.card.last4\r\n                )[0];\r\n\r\n                dispatch(ACTION_BOOKED_WITH_CARD_ID(matchedDuplicateCard.id));\r\n                changeSuccessfulCardNonce(true);\r\n                changeClipLoaderActive(false);\r\n\r\n                if (saveCardChecked) {\r\n                  if (userAuthenticated) {\r\n                    if (\r\n                      props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                        matchedDuplicateCard.id\r\n                      )\r\n                    ) {\r\n                      removeOneUnsavedSquareCardIDs({\r\n                        variables: {\r\n                          unsavedSquareCardID: matchedDuplicateCard.id,\r\n                          firstName: props.getClientData.client.firstName,\r\n                          lastName: props.getClientData.client.lastName,\r\n                          email: props.getClientData.client.email,\r\n                        },\r\n                      });\r\n                    }\r\n                  }\r\n                }\r\n\r\n                return await axios.post(\r\n                  `${\r\n                    process.env.REACT_APP_ENV === \"production\"\r\n                      ? process.env.REACT_APP_PRODUCTION_SERVER_URL\r\n                      : \"http://localhost:4000\"\r\n                  }/api/customers/delete_card`,\r\n                  deleteCardData,\r\n                  {\r\n                    headers: {\r\n                      Authorization:\r\n                        \"Bearer \" +\r\n                        process.env.REACT_APP_SQUARE_SANDBOX_ACCESS_TOKEN,\r\n                      Accept: \"application/json\",\r\n                      \"Content-Type\": \"application/json\",\r\n                    },\r\n                  }\r\n                );\r\n              }\r\n            }\r\n\r\n            dispatch(ACTION_BOOKED_WITH_CARD_ID(res.data.card.id));\r\n            changeSuccessfulCardNonce(true);\r\n            changeClipLoaderActive(false);\r\n\r\n            if (!saveCardChecked && userAuthenticated) {\r\n              updateUnsavedSquareCardIDs({\r\n                variables: {\r\n                  unsavedSquareCardID: res.data.card.id,\r\n                  firstName: props.getClientData\r\n                    ? props.getClientData.client.firstName\r\n                    : firstName,\r\n                  lastName: props.getClientData\r\n                    ? props.getClientData.client.lastName\r\n                    : lastName,\r\n                  email: props.getClientData\r\n                    ? props.getClientData.client.email\r\n                    : email,\r\n                },\r\n              });\r\n\r\n              props.clientDataRefetch();\r\n            } else if (!userAuthenticated) {\r\n              updateUnsavedSquareCardIDs({\r\n                variables: {\r\n                  unsavedSquareCardID: res.data.card.id,\r\n                  firstName: matchedClient.firstName,\r\n                  lastName: matchedClient.lastName,\r\n                  email: matchedClient.email,\r\n                },\r\n              });\r\n\r\n              getClientsDataRefetch();\r\n            }\r\n          })\r\n          .catch((err) => {\r\n            console.error(err);\r\n          });\r\n      };\r\n\r\n      userAuthenticated\r\n        ? props.getClientData.client.squareCustomerId\r\n          ? cardHolderFirstName &&\r\n            cardHolderLastName &&\r\n            !selectedCreditCard.name\r\n            ? returningClientSquarePostRequestFunction()\r\n            : retrieveSquareCustomerFunction()\r\n          : squarePostRequestFunction()\r\n        : matchedClient\r\n        ? matchedClient.squareCustomerId\r\n          ? returningClientSquarePostRequestFunction()\r\n          : squarePostRequestFunction()\r\n        : squarePostRequestFunction();\r\n    }\r\n  };\r\n\r\n  const createVerificationDetails = () => {\r\n    return {\r\n      amount: \"\",\r\n      currencyCode: \"\",\r\n      intent: \"STORE\",\r\n      billingContact: {\r\n        familyName: userAuthenticated\r\n          ? cardHolderLastName\r\n            ? cardHolderLastName\r\n            : props.getClientData.client.lastName\r\n          : cardHolderLastName\r\n          ? cardHolderLastName\r\n          : lastName,\r\n        givenName: userAuthenticated\r\n          ? cardHolderFirstName\r\n            ? cardHolderFirstName\r\n            : props.getClientData.client.firstName\r\n          : cardHolderFirstName\r\n          ? cardHolderFirstName\r\n          : firstName,\r\n        email: userAuthenticated ? props.getClientData.client.email : email,\r\n        phone: userAuthenticated\r\n          ? props.getClientData.client.phoneNumber\r\n          : phoneNumber,\r\n      },\r\n    };\r\n  };\r\n\r\n  const redirectToHome = () => {\r\n    if (!splashScreenComplete) {\r\n      return <Redirect to=\"/\" />;\r\n    } else if (!props.currentScreenSize) {\r\n      if (props.initialScreenSize >= 1200) {\r\n        return <Redirect to=\"/\" />;\r\n      }\r\n    } else if (props.currentScreenSize >= 1200) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n  };\r\n\r\n  const redirectToCheckout = () => {\r\n    if (successfulCardNonce) {\r\n      if (!props.currentScreenSize) {\r\n        if (props.initialScreenSize >= 1200) {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n        } else {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n          return <Redirect to=\"/checkout/confirmation\" />;\r\n        }\r\n      } else {\r\n        if (props.currentScreenSize >= 1200) {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n        } else {\r\n          dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n          return <Redirect to=\"/checkout/confirmation\" />;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCardHolderFirstName = (e) => {\r\n    changeCardHolderFirstName(e.currentTarget.value.toUpperCase().trim());\r\n  };\r\n\r\n  const handleCardHolderLastName = (e) => {\r\n    changeCardHolderLastName(e.currentTarget.value.toUpperCase().trim());\r\n  };\r\n\r\n  useEffect(() => {\r\n    const iFrameLabel = [...document.getElementsByClassName(\"sq-label\")].filter(\r\n      (x) =>\r\n        x.innerText === \"CREDIT CARD\" ||\r\n        x.innerText === \"EXPIRATION\" ||\r\n        x.innerText === \"ZIP CODE\" ||\r\n        x.innerText === \"CVC\"\r\n    );\r\n    const iFrameLabelHidden = [\r\n      ...document.getElementsByClassName(\"sq-label\"),\r\n    ].filter((x) => x.className.includes(\"sq-payment-form-hidden\"));\r\n\r\n    if (selectedCreditCardFullData) {\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-card-number\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-expiration-date\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-postal-code\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-cvv\")\r\n        .classList.add(\"sq-payment-form-hidden\");\r\n\r\n      if (iFrameLabel) {\r\n        if (iFrameLabel.length > 0) {\r\n          iFrameLabel.forEach((x) => x.classList.add(\"sq-payment-form-hidden\"));\r\n        }\r\n      }\r\n    } else {\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-card-number\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-expiration-date\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-postal-code\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n      document\r\n        .getElementById(\"sq-payment-form-sq-cvv\")\r\n        .classList.remove(\"sq-payment-form-hidden\");\r\n\r\n      if (iFrameLabelHidden) {\r\n        if (iFrameLabelHidden.length > 0) {\r\n          iFrameLabelHidden.forEach((x) => {\r\n            x.classList.remove(\"sq-payment-form-hidden\");\r\n          });\r\n        }\r\n      }\r\n    }\r\n  }, [selectedCreditCardFullData]);\r\n\r\n  const checkMark = () => {\r\n    return (\r\n      <Spring from={{ x: 100 }} to={{ x: 0 }} config={{ duration: 2000 }}>\r\n        {(styles) => (\r\n          <svg\r\n            width={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"0.5rem\"\r\n                  : \"100%\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"0.5rem\"\r\n                : \"100%\"\r\n            }\r\n            height={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1.3rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"0.5rem\"\r\n                  : props.initialScreenSize >= 360\r\n                  ? \"2rem\"\r\n                  : \"1rem\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1.3rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"0.5rem\"\r\n                : props.currentScreenSize >= 360\r\n                ? \"2rem\"\r\n                : \"1rem\"\r\n            }\r\n            style={{\r\n              display: \"block\",\r\n            }}\r\n            viewBox=\"0 0 13.229 13.229\"\r\n          >\r\n            <path\r\n              d=\"M2.851 7.56l2.45 2.482 5.36-6.958\"\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeDasharray=\"100\"\r\n              strokeDashoffset={pageOpened ? 0 : `${styles.x}`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"3\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </Spring>\r\n    );\r\n  };\r\n\r\n  const handleSaveCardChecked = () => {\r\n    if (saveCardChecked) {\r\n      dispatch(ACTION_SAVE_CARD_UNCHECKED());\r\n    } else {\r\n      dispatch(ACTION_SAVE_CARD_CHECKED());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"payment_info_container\">\r\n        {redirectToHome()}\r\n        {redirectToCheckout()}\r\n        <div\r\n          className=\"clip_loader_spinner_container\"\r\n          style={{\r\n            display: clipLoaderActive || squareFormLoading ? \"flex\" : \"none\",\r\n          }}\r\n        >\r\n          <ClipLoader\r\n            size={100}\r\n            css={override}\r\n            color={\"rgb(44, 44, 52)\"}\r\n            loading={clipLoaderActive || squareFormLoading}\r\n          />\r\n        </div>\r\n        <div className=\"payment_info_container_header\">\r\n          <Link\r\n            to={() => {\r\n              if (!props.currentScreenSize) {\r\n                if (props.initialScreenSize >= 1200) {\r\n                  return \"/\";\r\n                } else {\r\n                  if (userAuthenticated) {\r\n                    return \"/availability/timepreference\";\r\n                  } else {\r\n                    return \"/checkout\";\r\n                  }\r\n                }\r\n              } else {\r\n                if (props.currentScreenSize >= 1200) {\r\n                  return \"/\";\r\n                } else {\r\n                  if (userAuthenticated) {\r\n                    return \"/availability/timepreference\";\r\n                  } else {\r\n                    return \"/checkout\";\r\n                  }\r\n                }\r\n              }\r\n            }}\r\n            onClick={() => {\r\n              if (userAuthenticated) {\r\n                dispatch(ACTION_TIME_PREFERENCE_PAGE_OPENED());\r\n              } else {\r\n                dispatch(ACTION_GUEST_CHECKOUT_FORM_PAGE_PAGE_OPENED());\r\n              }\r\n            }}\r\n          >\r\n            <FontAwesomeIcon\r\n              className=\"payment_info_back_arrow\"\r\n              icon={faChevronLeft}\r\n            />\r\n          </Link>\r\n          <h1>PAYMENT INFO</h1>\r\n          {userAuthenticated && bookedWithCardID ? (\r\n            <Link\r\n              to={() => {\r\n                if (!props.currentScreenSize) {\r\n                  if (props.initialScreenSize >= 1200) {\r\n                    return \"/\";\r\n                  } else {\r\n                    return \"/checkout/confirmation\";\r\n                  }\r\n                } else {\r\n                  if (props.currentScreenSize >= 1200) {\r\n                    return \"/\";\r\n                  } else {\r\n                    return \"/checkout/confirmation\";\r\n                  }\r\n                }\r\n              }}\r\n              onClick={() => {\r\n                dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n              }}\r\n            >\r\n              <FontAwesomeIcon\r\n                className=\"payment_info_forward_arrow\"\r\n                icon={faChevronRight}\r\n              />\r\n            </Link>\r\n          ) : null}\r\n        </div>\r\n        <div className=\"payment_info_header\">\r\n          <h2>\r\n            ENTER{\" \"}\r\n            {!props.currentScreenSize\r\n              ? props.initialScreenSize <= 360\r\n                ? null\r\n                : \"YOUR\"\r\n              : props.currentScreenSize <= 360\r\n              ? null\r\n              : \"YOUR\"}{\" \"}\r\n            PAYMENT INFORMATION\r\n          </h2>\r\n        </div>\r\n        <p className=\"payment_info_statement\">\r\n          Your credit card will be used to hold your time slot and will not be\r\n          charged until after your appointment. You may change your payment\r\n          method after your service.\r\n        </p>\r\n        <div className=\"square_payment_form_container\">\r\n          <SquarePaymentForm\r\n            sandbox={true}\r\n            applicationId={process.env.REACT_APP_SQUARE_SANDBOX_APPLICATION_ID}\r\n            locationId={process.env.REACT_APP_SQUARE_SANDBOX_LOCATION_ID}\r\n            cardNonceResponseReceived={cardNonceResponseReceived}\r\n            createVerificationDetails={createVerificationDetails}\r\n            paymentFormLoaded={() => changeSquareFormLoading(false)}\r\n            className=\"square_payment_form\"\r\n            placeholderCVV=\"CVC\"\r\n          >\r\n            <fieldset className=\"sq-fieldset\">\r\n              {!userAuthenticated ||\r\n              (userAuthenticated && !squareStoredCreditCards) ||\r\n              (userAuthenticated && squareStoredCreditCards\r\n                ? squareStoredCreditCards.filter(\r\n                    (x) =>\r\n                      !props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                        x.id\r\n                      )\r\n                  ).length === 0\r\n                : false) ? null : (\r\n                <FormGroup className=\"choose_a_credit_card_formgroup\">\r\n                  <Label className=\"sq-label\" for=\"select\">\r\n                    CHOOSE A CREDIT CARD\r\n                  </Label>\r\n                  <FontAwesomeIcon\r\n                    className=\"choose_a_credit_card_dropdown_icon\"\r\n                    icon={faChevronCircleDown}\r\n                  />\r\n                  <Input\r\n                    className=\"sq-cardholder-input\"\r\n                    type=\"select\"\r\n                    name=\"select\"\r\n                    id=\"select\"\r\n                    disabled={\r\n                      !userAuthenticated ||\r\n                      (userAuthenticated && !squareStoredCreditCards) ||\r\n                      (userAuthenticated && squareStoredCreditCards\r\n                        ? squareStoredCreditCards.filter(\r\n                            (x) =>\r\n                              !props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                                x.id\r\n                              )\r\n                          ).length === 0\r\n                        : false)\r\n                    }\r\n                    value={\r\n                      userAuthenticated\r\n                        ? bookedWithCardID\r\n                          ? squareStoredCreditCards\r\n                            ? JSON.stringify({\r\n                                name:\r\n                                  squareStoredCreditCards\r\n                                    .filter((x) => x.id === bookedWithCardID)[0]\r\n                                    .cardBrand.split(\"_\")\r\n                                    .join(\" \") +\r\n                                  \" - \" +\r\n                                  squareStoredCreditCards.filter(\r\n                                    (x) => x.id === bookedWithCardID\r\n                                  )[0].last4,\r\n                                id: bookedWithCardID,\r\n                              })\r\n                            : JSON.stringify({\r\n                                name: selectedCreditCard.name,\r\n                                id: selectedCreditCard.id,\r\n                              })\r\n                          : JSON.stringify({\r\n                              name: selectedCreditCard.name,\r\n                              id: selectedCreditCard.id,\r\n                            })\r\n                        : JSON.stringify({\r\n                            name: selectedCreditCard.name,\r\n                            id: selectedCreditCard.id,\r\n                          })\r\n                    }\r\n                    onChange={(e) => {\r\n                      const optionsArr = [\r\n                        { name: \"\", id: \"\", index: 0 },\r\n                      ].concat(\r\n                        squareStoredCreditCards\r\n                          .filter(\r\n                            (x) =>\r\n                              !props.getClientData.client.unsavedSquareCardIDs.includes(\r\n                                x.id\r\n                              )\r\n                          )\r\n                          .map((x, i) => {\r\n                            return {\r\n                              name:\r\n                                x.cardBrand.split(\"_\").join(\" \") +\r\n                                \" - \" +\r\n                                x.last4,\r\n                              id: x.id,\r\n                              index: i,\r\n                            };\r\n                          })\r\n                      );\r\n\r\n                      let chosenItem = optionsArr.filter(\r\n                        (item, index) =>\r\n                          index === e.target.options.selectedIndex\r\n                      )[0];\r\n\r\n                      if (selectedCreditCard.name) {\r\n                        dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                        changeSelectedCreditCard({\r\n                          name: chosenItem.name,\r\n                          id: chosenItem.id,\r\n                        });\r\n\r\n                        changeCardHolderFirstName(\r\n                          squareCustomerInfo.givenName.toUpperCase()\r\n                        );\r\n                        changeCardHolderLastName(\r\n                          squareCustomerInfo.familyName.toUpperCase()\r\n                        );\r\n                        if (e.target.value === \"NEW CARD\") {\r\n                          dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                          changeSelectedCreditCard({ name: \"\", id: \"\" });\r\n                          changeSelectedCreditCardFullData(\"\");\r\n                          changeCardHolderFirstName(\"\");\r\n                          changeCardHolderLastName(\"\");\r\n                        }\r\n                      } else {\r\n                        dispatch(ACTION_BOOKED_WITH_CARD_ID_RESET());\r\n\r\n                        changeSelectedCreditCard({\r\n                          name: chosenItem.name,\r\n                          id: chosenItem.id,\r\n                        });\r\n\r\n                        changeCardHolderFirstName(\r\n                          squareCustomerInfo.givenName.toUpperCase()\r\n                        );\r\n                        changeCardHolderLastName(\r\n                          squareCustomerInfo.familyName.toUpperCase()\r\n                        );\r\n                      }\r\n                    }}\r\n                  >\r\n                    <option>NEW CARD</option>\r\n                    {renderStoredCreditCardOptions()}\r\n                  </Input>\r\n                </FormGroup>\r\n              )}\r\n              <div className=\"sq_card_holder_container\">\r\n                <span className=\"sq-label\">CARDHOLDER FIRST NAME</span>\r\n                <input\r\n                  name=\"first_name\"\r\n                  type=\"text\"\r\n                  maxLength=\"100\"\r\n                  placeholder=\"Enter cardholder first name here\"\r\n                  className=\"sq-cardholder-input\"\r\n                  disabled={selectedCreditCardFullData ? true : false}\r\n                  onChange={handleCardHolderFirstName}\r\n                  value={cardHolderFirstName}\r\n                />\r\n              </div>\r\n              <div className=\"sq_card_holder_container\">\r\n                <span className=\"sq-label\">CARDHOLDER LAST NAME</span>\r\n                <input\r\n                  name=\"last_name\"\r\n                  type=\"text\"\r\n                  maxLength=\"100\"\r\n                  placeholder=\"Enter cardholder last name here\"\r\n                  className=\"sq-cardholder-input\"\r\n                  disabled={selectedCreditCardFullData ? true : false}\r\n                  onChange={handleCardHolderLastName}\r\n                  value={cardHolderLastName}\r\n                />\r\n              </div>\r\n              {selectedCreditCardFullData ? (\r\n                <div className=\"sq_card_holder_container\">\r\n                  {/* Space in \"CREDIT CARD \" important to distinguish between new card and toggled card form inputs */}\r\n                  <span className=\"sq-label\">CREDIT CARD </span>\r\n                  <input\r\n                    name=\"credit_card\"\r\n                    type=\"text\"\r\n                    maxLength=\"100\"\r\n                    className=\"sq-cardholder-input\"\r\n                    disabled={selectedCreditCardFullData ? true : false}\r\n                    value={\r\n                      selectedCreditCardFullData.cardBrand.toLowerCase() ===\r\n                      \"american_express\"\r\n                        ? \"•••• •••••• •\" + selectedCreditCardFullData.last4\r\n                        : \"•••• •••• •••• \" + selectedCreditCardFullData.last4\r\n                    }\r\n                  />\r\n                </div>\r\n              ) : null}\r\n              <CreditCardNumberInput />\r\n              <div className=\"sq_third_container\">\r\n                <div className=\"sq-form-third_credit_card\">\r\n                  <CreditCardExpirationDateInput />\r\n                </div>\r\n                <div className=\"sq-form-third_postal\">\r\n                  <CreditCardPostalCodeInput label=\"ZIP CODE\" />\r\n                </div>\r\n\r\n                <div className=\"sq-form-third_cvv\">\r\n                  <CreditCardCVVInput label=\"CVC\" />\r\n                </div>\r\n              </div>\r\n\r\n              {selectedCreditCardFullData ? (\r\n                <div className=\"sq_third_container\">\r\n                  <div className=\"sq-form-third_credit_card\">\r\n                    {/* Space in \"EXPIRATION \" important to distinguish between new card and toggled card form inputs */}\r\n                    <span className=\"sq-label\">EXPIRATION </span>\r\n                    <input\r\n                      name=\"expiration_date\"\r\n                      type=\"text\"\r\n                      className=\"sq-cardholder-input\"\r\n                      disabled={selectedCreditCardFullData ? true : false}\r\n                      value={\r\n                        selectedCreditCardFullData.expMonth >= 10\r\n                          ? selectedCreditCardFullData.expMonth.toString() +\r\n                            \"/\" +\r\n                            selectedCreditCardFullData.expYear\r\n                              .toString()\r\n                              .substr(-2)\r\n                          : \"0\" +\r\n                            selectedCreditCardFullData.expMonth.toString() +\r\n                            \"/\" +\r\n                            selectedCreditCardFullData.expYear\r\n                              .toString()\r\n                              .substr(-2)\r\n                      }\r\n                    />\r\n                  </div>\r\n                  <div className=\"sq-form-third_postal\">\r\n                    {/* Space in \"ZIP CODE \" important to distinguish between new card and toggled card form inputs */}\r\n                    <span className=\"sq-label\">ZIP CODE </span>\r\n                    <input\r\n                      name=\"postalCode\"\r\n                      type=\"text\"\r\n                      className=\"sq-cardholder-input\"\r\n                      disabled={selectedCreditCardFullData ? true : false}\r\n                      value={\"•••••\"}\r\n                    />\r\n                  </div>\r\n                  <div className=\"sq-form-third_cvv\">\r\n                    {/* Space in \"CVC \" important to distinguish between new card and toggled card form inputs */}\r\n                    <span className=\"sq-label\">CVC </span>\r\n                    <input\r\n                      name=\"cvc_code\"\r\n                      type=\"text\"\r\n                      className=\"sq-cardholder-input\"\r\n                      disabled={selectedCreditCardFullData ? true : false}\r\n                      value={\r\n                        selectedCreditCardFullData.cardBrand.toLowerCase() ===\r\n                        \"american_express\"\r\n                          ? \"••••\"\r\n                          : \"•••\"\r\n                      }\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ) : null}\r\n              {!selectedCreditCard.name &&\r\n              !selectedCreditCard.id &&\r\n              userAuthenticated ? (\r\n                <div className=\"sq_save_card_information_container\">\r\n                  <span\r\n                    className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n                    style={{\r\n                      transform: !props.currentScreenSize\r\n                        ? props.initialScreenSize >= 1200\r\n                          ? \"scale(1.5) translate(0%, -26%)\"\r\n                          : null\r\n                        : props.currentScreenSize >= 1200\r\n                        ? \"scale(1.5) translate(0%, -26%)\"\r\n                        : null,\r\n                    }}\r\n                    onClick={handleSaveCardChecked}\r\n                  >\r\n                    <FontAwesomeIcon\r\n                      color=\"rgba(155, 155, 155, 0.4)\"\r\n                      transform={\r\n                        !props.currentScreenSize\r\n                          ? props.initialScreenSize >= 360\r\n                            ? \"grow-20\"\r\n                            : \"grow-10\"\r\n                          : props.currentScreenSize >= 360\r\n                          ? \"grow-20\"\r\n                          : \"grow-10\"\r\n                      }\r\n                      icon={faSquare}\r\n                    />\r\n                    {saveCardChecked ? checkMark() : null}\r\n                  </span>\r\n                  <p>Save this card information for future bookings?</p>\r\n                </div>\r\n              ) : null}\r\n            </fieldset>\r\n            {selectedCreditCardFullData ||\r\n            (!selectedCreditCard.name &&\r\n              (!cardHolderFirstName || !cardHolderLastName) &&\r\n              errorMessages.length === 0) ? (\r\n              <Link\r\n                to={() => {\r\n                  if (!props.currentScreenSize) {\r\n                    if (props.initialScreenSize >= 1200) {\r\n                      return \"/\";\r\n                    } else {\r\n                      return \"/checkout/confirmation\";\r\n                    }\r\n                  } else {\r\n                    if (props.currentScreenSize >= 1200) {\r\n                      return \"/\";\r\n                    } else {\r\n                      return \"/checkout/confirmation\";\r\n                    }\r\n                  }\r\n                }}\r\n                style={{\r\n                  display: \"block\",\r\n                  pointerEvents:\r\n                    !selectedCreditCard.name &&\r\n                    (!cardHolderFirstName || !cardHolderLastName)\r\n                      ? \"none\"\r\n                      : \"auto\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  if (userAuthenticated) {\r\n                    if (selectedCreditCardFullData) {\r\n                      dispatch(\r\n                        ACTION_BOOKED_WITH_CARD_ID(\r\n                          selectedCreditCardFullData.id\r\n                        )\r\n                      );\r\n                      dispatch(ACTION_CONFIRMATION_PAGE_OPENED());\r\n                    }\r\n                  }\r\n                }}\r\n              >\r\n                <div className=\"sq-creditcard\">Submit Card Information</div>\r\n              </Link>\r\n            ) : (\r\n              <CreditCardSubmitButton style={{ cursor: \"pointer\" }}>\r\n                Submit Card Information\r\n              </CreditCardSubmitButton>\r\n            )}\r\n          </SquarePaymentForm>\r\n          {selectedCreditCardFullData && errorMessages.length === 0 ? null : (\r\n            <div className=\"sq-error-message\">\r\n              {errorMessages.map((errorMessage) => (\r\n                <li key={`sq-error-${errorMessage}`}>{errorMessage}</li>\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentInfo;\r\n"]},"metadata":{},"sourceType":"module"}