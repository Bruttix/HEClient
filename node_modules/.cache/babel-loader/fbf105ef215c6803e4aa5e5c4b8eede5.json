{"ast":null,"code":"import _objectSpread from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";function _templateObject(){const data=_taggedTemplateLiteral([\"\\n    display: block;\\n    position: absolute;\\n    left: 25%;\\n    right: 25%;\\n  \"]);_templateObject=function _templateObject(){return data;};return data;}import React,{useEffect,useState,useCallback}from\"react\";import{Transition,Spring}from\"react-spring/renderprops\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faLongArrowAltLeft,faSquare}from\"@fortawesome/free-solid-svg-icons\";import{useSelector,useDispatch}from\"react-redux\";import{formatDate,parseDate}from\"react-day-picker/moment\";import DayPickerInput from\"react-day-picker/DayPickerInput\";import Dropdown from\"react-dropdown\";import{useMutation}from\"@apollo/react-hooks\";import addPersonalEventMutation from\"../../../../graphql/mutations/addPersonalEventMutation\";import Modal from\"react-modal\";import BounceLoader from\"react-spinners/BounceLoader\";import{css}from\"@emotion/css\";import moment from\"moment\";import ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY\";import ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME\";import ACTION_LOADING_SPINNER_ACTIVE from\"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_ACTIVE\";import ACTION_LOADING_SPINNER_RESET from\"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_TITLE from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE\";import ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET\";import ACTION_ADMIN_PERSONAL_EVENT_NOTES from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES\";import ACTION_ADMIN_PERSONAL_EVENT_DATE from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";import ACTION_ADMIN_PERSONAL_EVENT_START_TIME from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";import ACTION_ADMIN_PERSONAL_EVENT_END_TIME from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";import ACTION_ADMIN_PERSONAL_EVENT_STAFF from\"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";import\"../AdminCreateAppointment/AdminCreateAppointment.css\";import\"./AdminPersonalEvent.css\";const AdminPersonalEvent=props=>{const stopTransition=props.stopTransition,personalEventClicked=props.personalEventClicked,changeStopTransition=props.changeStopTransition,changePersonalEventClicked=props.changePersonalEventClicked,changeCreateAppointmentClicked=props.changeCreateAppointmentClicked,timeOptions=props.timeOptions,allEmployeeOptions=props.allEmployeeOptions,getEmployeeData=props.getEmployeeData,getAllPersonalEventsRefetch=props.getAllPersonalEventsRefetch,renderLoggedInStaffName=props.renderLoggedInStaffName;const dispatch=useDispatch();const adminPersonalEventTitle=useSelector(state=>state.adminPersonalEventTitle.title);const adminPersonalEventNotes=useSelector(state=>state.adminPersonalEventNotes.notes);const adminPersonalEventAllDay=useSelector(state=>state.adminPersonalEventAllDay.all_day);const adminPersonalEventBlockTime=useSelector(state=>state.adminPersonalEventBlockTime.block_time);const adminPersonalEventDate=useSelector(state=>state.adminPersonalEventDate.date);const adminAppointmentDate=useSelector(state=>state.adminAppointmentDate.admin_appointment_date);const adminPersonalEventStartTime=useSelector(state=>state.adminPersonalEventStartTime.start_time);const adminPersonalEventEndTime=useSelector(state=>state.adminPersonalEventEndTime.end_time);const adminPersonalEventStaff=useSelector(state=>state.adminPersonalEventStaff.staff);const adminAppointmentStaffMember=useSelector(state=>state.adminAppointmentStaffMember.admin_appointment_staff_member);const loadingSpinnerActive=useSelector(state=>state.loadingSpinnerActive.loading_spinner);const logoutClicked=useSelector(state=>state.logoutClicked.log_out_clicked);const _useState=useState(true),_useState2=_slicedToArray(_useState,2),clickOutsideDayPicker=_useState2[0],changeClickOutsideDayPicker=_useState2[1];const _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pageOpened=_useState4[0],changePageOpened=_useState4[1];// Errors\nconst _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),titleError=_useState6[0],changeTitleError=_useState6[1];const _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),dateError=_useState8[0],changeDateError=_useState8[1];const _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),startTimeError=_useState10[0],changeStartTimeError=_useState10[1];const _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),endTimeError=_useState12[0],changeEndTimeError=_useState12[1];const _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),staffError=_useState14[0],changeStaffError=_useState14[1];const _useMutation=useMutation(addPersonalEventMutation),_useMutation2=_slicedToArray(_useMutation,2),addPersonalEvent=_useMutation2[0],_useMutation2$=_useMutation2[1],personalEventLoading=_useMutation2$.loading,personalEventData=_useMutation2$.data;const override=css(_templateObject());useEffect(()=>{changePageOpened(true);const pageNowOpen=setTimeout(()=>{changePageOpened(false);},500);return()=>{clearTimeout(pageNowOpen);};},[]);const resetErrorStates=useCallback(()=>{if(titleError){changeTitleError(false);}if(dateError){changeDateError(false);}if(staffError){changeStaffError(false);}if(startTimeError){changeStartTimeError(false);}if(endTimeError){changeEndTimeError(false);}},[dateError,endTimeError,staffError,startTimeError,titleError]);const handleBackToSchedule=useCallback(()=>{changePersonalEventClicked(false);dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET());dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET());dispatch(ACTION_LOADING_SPINNER_RESET());changeClickOutsideDayPicker(false);resetErrorStates();},[changePersonalEventClicked,dispatch,resetErrorStates]);useEffect(()=>{const dayPickerClickFunction=e=>{if(e.target){if(e.target.placeholder===\"Enter your event date here\"){if(clickOutsideDayPicker){changeClickOutsideDayPicker(false);}}else if(e.target.getAttribute(\"class\")){if(typeof(e.target.className===\"string\")){if(!e.target.className.baseVal){if(e.target.className.split(\" \").includes(\"DayPicker-Day\")||e.target.className.split(\" \").includes(\"DayPicker-NavButton\")){if(clickOutsideDayPicker){changeClickOutsideDayPicker(false);}}else{if(!clickOutsideDayPicker){changeClickOutsideDayPicker(true);}}}else{if(!clickOutsideDayPicker){changeClickOutsideDayPicker(true);}}}else{if(!clickOutsideDayPicker){changeClickOutsideDayPicker(true);}}}else{if(!clickOutsideDayPicker){changeClickOutsideDayPicker(true);}}}};window.addEventListener(\"click\",dayPickerClickFunction);return()=>{window.removeEventListener(\"click\",dayPickerClickFunction);};},[clickOutsideDayPicker]);const handleAllDayToggle=()=>{if(adminPersonalEventAllDay){dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());}else{dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY());}};const handleBlockTimeToggle=()=>{if(adminPersonalEventBlockTime){dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());}else{dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME());}};const checkMark=()=>{return/*#__PURE__*/React.createElement(Spring,{from:{x:100},to:{x:0},config:{duration:2000}},styles=>/*#__PURE__*/React.createElement(\"svg\",{width:\"100%\",style:{display:\"block\"},viewBox:\"0 0 13.229 13.229\"},/*#__PURE__*/React.createElement(\"path\",{d:\"M2.851 7.56l2.45 2.482 5.36-6.958\",fill:\"none\",stroke:\"#000\",strokeDasharray:\"100\",strokeDashoffset:pageOpened?0:\"\".concat(styles.x),strokeLinecap:\"round\",strokeLinejoin:\"round\",strokeWidth:\"3\"})));};const calculateDuration=(start,end)=>{const startTime=moment.utc(start,\"h:mm A\");const endTime=moment.utc(end,\"h:mm A\");return endTime.diff(startTime,\"minutes\");};const handleSavePersonalEvent=()=>{if(adminPersonalEventTitle&&(adminPersonalEventDate||adminAppointmentDate)&&adminPersonalEventStartTime&&adminPersonalEventEndTime&&(adminAppointmentStaffMember||adminPersonalEventStaff)){addPersonalEvent({variables:{title:adminPersonalEventTitle,date:adminAppointmentDate&&!adminPersonalEventDate?adminAppointmentDate:adminPersonalEventDate,startTime:adminPersonalEventStartTime,endTime:adminPersonalEventEndTime,duration:calculateDuration(adminPersonalEventStartTime,adminPersonalEventEndTime),staff:adminAppointmentStaffMember&&!adminPersonalEventStaff?adminAppointmentStaffMember.value?adminAppointmentStaffMember.value:adminAppointmentStaffMember:adminPersonalEventStaff.value?adminPersonalEventStaff.value:adminPersonalEventStaff,notes:adminPersonalEventNotes,allDay:adminPersonalEventAllDay,blockTime:adminPersonalEventBlockTime}});}else{if(!adminPersonalEventTitle){changeTitleError(true);}if(!(adminPersonalEventDate||adminAppointmentDate)){changeDateError(true);}if(!adminPersonalEventStartTime){changeStartTimeError(true);}if(!adminPersonalEventEndTime){changeEndTimeError(true);}if(!(adminAppointmentStaffMember||adminPersonalEventStaff)){changeStaffError(true);}}};useEffect(()=>{if(personalEventData){const loadingFunction=setTimeout(()=>{handleBackToSchedule();getAllPersonalEventsRefetch();},2000);return()=>{clearTimeout(loadingFunction);};}},[handleBackToSchedule,personalEventData,loadingSpinnerActive,getAllPersonalEventsRefetch]);useEffect(()=>{if(personalEventLoading){dispatch(ACTION_LOADING_SPINNER_ACTIVE());}},[personalEventLoading,dispatch]);return/*#__PURE__*/React.createElement(Transition,{items:personalEventClicked,from:{transform:\"translateX(-100%)\"},enter:{transform:\"translateX(0%)\"},leave:{transform:\"translateX(-100%)\"},config:{duration:200},immediate:stopTransition},personalEventClicked=>personalEventClicked&&(styleprops=>/*#__PURE__*/React.createElement(\"div\",{className:\"admin_personal_event_container\",style:_objectSpread(_objectSpread({},styleprops),{},{zIndex:logoutClicked||loadingSpinnerActive?\"auto\":5})},/*#__PURE__*/React.createElement(Modal,{isOpen:loadingSpinnerActive,className:\"cancel_appointment_modal\",style:{content:{position:\"fixed\",zIndex:10000,opacity:0.99,height:\"100%\",backdropFilter:\"blur(5px)\",WebkitBackdropFilter:\"blur(5px)\",paddingBottom:\"10%\",borderRadius:\"none\",width:\"100vw\",top:\"0\",left:\"0\",right:\"0\",bottom:\"0\",border:\"none\",display:\"flex\",flexDirection:\"column\",alignItems:\"center\",justifyContent:\"center\",background:\"rgba(0, 0, 0, 0.5)\"}}},/*#__PURE__*/React.createElement(BounceLoader,{size:100,css:override,color:\"rgb(44, 44, 52)\",loading:loadingSpinnerActive})),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_selected_client_back_container\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLongArrowAltLeft,className:\"admin_individual_selected_client_back_arrow_icon\",onClick:handleBackToSchedule}),/*#__PURE__*/React.createElement(\"p\",{onClick:handleBackToSchedule},\"Back to schedule\"),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_individual_selected_client_top_page_options\"},/*#__PURE__*/React.createElement(\"p\",{className:\"admin_individual_selected_client_chosen_create_page\"},\"Create Personal Event\"),/*#__PURE__*/React.createElement(\"p\",null,\"/\"),/*#__PURE__*/React.createElement(\"p\",{onClick:()=>{changePersonalEventClicked(false);changeCreateAppointmentClicked(true);changeStopTransition(true);setTimeout(()=>{changeStopTransition(false);},1000);resetErrorStates();}},\"Create Appointment\"))),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_section_header\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Personal Event Information\")),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_label\"},\"Title\"),/*#__PURE__*/React.createElement(\"div\",{role:\"combobox\",\"aria-haspopup\":\"listbox\",\"aria-owns\":\"react-autowhatever-1\",\"aria-controls\":\"react-autowhatever-1\",\"aria-expanded\":\"false\",className:\"react-autosuggest__container\",style:{outline:titleError?\"3px solid red\":\"none\",zIndex:titleError?99999:\"auto\"}},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",autoComplete:\"off\",\"aria-autocomplete\":\"list\",\"aria-controls\":\"react-autowhatever-1\",className:\"react-autosuggest__input\",placeholder:\"Create a title for your event\",value:adminPersonalEventTitle,maxLength:200,onChange:e=>{resetErrorStates();dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE(e.target.value));}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_label\"},\"Notes\"),/*#__PURE__*/React.createElement(\"div\",{role:\"combobox\",\"aria-haspopup\":\"listbox\",\"aria-owns\":\"react-autowhatever-1\",\"aria-controls\":\"react-autowhatever-1\",\"aria-expanded\":\"false\",className:\"react-autosuggest__container\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",autoComplete:\"off\",\"aria-autocomplete\":\"list\",\"aria-controls\":\"react-autowhatever-1\",className:\"react-autosuggest__input\",placeholder:\"Enter optional notes here\",value:adminPersonalEventNotes,maxLength:200,onChange:e=>dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES(e.target.value))}))),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_label\"},\"Staff\"),/*#__PURE__*/React.createElement(Dropdown,{options:getEmployeeData?getEmployeeData.employee?getEmployeeData.employee.employeeRole.includes(\"Admin\")?allEmployeeOptions():renderLoggedInStaffName():renderLoggedInStaffName():renderLoggedInStaffName(),onChange:choice=>{resetErrorStates();dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(choice));},value:adminAppointmentStaffMember&&!adminPersonalEventStaff?adminAppointmentStaffMember:adminPersonalEventStaff,controlClassName:staffError?\"react-autosuggest__input personal_event_error\":\"react-autosuggest__input\",className:\"react-autosuggest__container\",placeholder:adminAppointmentStaffMember&&!adminPersonalEventStaff?adminAppointmentStaffMember:adminPersonalEventStaff?adminPersonalEventStaff:\"Enter staff member with which to associate this personal event\",placeholderClassName:adminAppointmentStaffMember&&!adminPersonalEventStaff?\"admin_create_appointent_dropdown_placeholder_time\":adminPersonalEventStaff?\"admin_create_appointent_dropdown_placeholder_time\":\"admin_create_appointent_dropdown_placeholder_no_time\",style:{outline:staffError?\"3px solid red\":\"none\",zIndex:staffError?99999:\"auto\"}})),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_section_header\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Personal Event Time\"),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_personal_event_checkbox_container\"},/*#__PURE__*/React.createElement(\"p\",null,\"All day?\"),/*#__PURE__*/React.createElement(\"span\",{className:\"fa-layers fa-fw client_consent_form_checkbox\",onClick:handleAllDayToggle},/*#__PURE__*/React.createElement(FontAwesomeIcon,{color:\"rgba(155, 155, 155, 0.4)\",transform:\"grow-10\",icon:faSquare}),adminPersonalEventAllDay?checkMark():null),/*#__PURE__*/React.createElement(\"p\",null,\"Block time?\"),/*#__PURE__*/React.createElement(\"span\",{className:\"fa-layers fa-fw client_consent_form_checkbox\",onClick:handleBlockTimeToggle},/*#__PURE__*/React.createElement(FontAwesomeIcon,{color:\"rgba(155, 155, 155, 0.4)\",transform:\"grow-10\",icon:faSquare}),adminPersonalEventBlockTime?checkMark():null))),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\",onClick:()=>resetErrorStates()},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_label\"},\"Date\"),/*#__PURE__*/React.createElement(DayPickerInput,{classNames:{container:\"react-autosuggest__container\",overlay:\"\",overlayWrapper:clickOutsideDayPicker?\"react-autosuggest__input_hide\":\"\"},dayPickerProps:{disabledDays:{before:new Date()}},inputProps:{className:dateError?\"react-autosuggest__input personal_event_error\":\"react-autosuggest__input\",style:{color:\"rgb(74, 144, 226)\"}},formatDate:formatDate,parseDate:parseDate,onDayChange:day=>{resetErrorStates();dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(day));},format:\"L\",value:adminAppointmentDate&&!adminPersonalEventDate?adminAppointmentDate:adminPersonalEventDate,placeholder:\"Enter your event date here\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_input_information_container\",onClick:()=>resetErrorStates()},/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_label admin_create_appointment_double_label\"},\"Start Time\"),/*#__PURE__*/React.createElement(Dropdown,{options:timeOptions(),onChange:choice=>{resetErrorStates();dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME(choice.value));},value:adminPersonalEventStartTime,controlClassName:startTimeError?\"react-autosuggest__input personal_event_error\":\"react-autosuggest__input\",className:\"react-autosuggest__container\",placeholder:adminPersonalEventStartTime?adminPersonalEventStartTime:\"Start Time\",placeholderClassName:adminPersonalEventStartTime?\"admin_create_appointent_dropdown_placeholder_time\":\"admin_create_appointent_dropdown_placeholder_no_time\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_create_appointment_label admin_create_appointment_double_label\"},\"End Time\"),/*#__PURE__*/React.createElement(Dropdown,{options:timeOptions(),onChange:choice=>{resetErrorStates();dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(choice.value));},value:adminPersonalEventEndTime,controlClassName:endTimeError?\"react-autosuggest__input personal_event_error\":\"react-autosuggest__input\",className:\"react-autosuggest__container\",placeholder:adminPersonalEventEndTime?adminPersonalEventEndTime:\"End Time\",placeholderClassName:adminPersonalEventEndTime?\"admin_create_appointent_dropdown_placeholder_time\":\"admin_create_appointent_dropdown_placeholder_no_time\",style:{outline:endTimeError?\"3px solid red\":\"none\",zIndex:endTimeError?99999:\"auto\"}})),/*#__PURE__*/React.createElement(\"div\",{className:\"admin_square_payment_form_container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sq-payment-form\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sq-creditcard\",onClick:handleSavePersonalEvent},\"Save Personal Event\"))))));};export default AdminPersonalEvent;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/admin/AdminSchedule/AdminPersonalEvent/AdminPersonalEvent.js"],"names":["React","useEffect","useState","useCallback","Transition","Spring","FontAwesomeIcon","faLongArrowAltLeft","faSquare","useSelector","useDispatch","formatDate","parseDate","DayPickerInput","Dropdown","useMutation","addPersonalEventMutation","Modal","BounceLoader","css","moment","ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY","ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME","ACTION_LOADING_SPINNER_ACTIVE","ACTION_LOADING_SPINNER_RESET","ACTION_ADMIN_PERSONAL_EVENT_TITLE","ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET","ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET","ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET","ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET","ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET","ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET","ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET","ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET","ACTION_ADMIN_PERSONAL_EVENT_NOTES","ACTION_ADMIN_PERSONAL_EVENT_DATE","ACTION_ADMIN_PERSONAL_EVENT_START_TIME","ACTION_ADMIN_PERSONAL_EVENT_END_TIME","ACTION_ADMIN_PERSONAL_EVENT_STAFF","AdminPersonalEvent","props","stopTransition","personalEventClicked","changeStopTransition","changePersonalEventClicked","changeCreateAppointmentClicked","timeOptions","allEmployeeOptions","getEmployeeData","getAllPersonalEventsRefetch","renderLoggedInStaffName","dispatch","adminPersonalEventTitle","state","title","adminPersonalEventNotes","notes","adminPersonalEventAllDay","all_day","adminPersonalEventBlockTime","block_time","adminPersonalEventDate","date","adminAppointmentDate","admin_appointment_date","adminPersonalEventStartTime","start_time","adminPersonalEventEndTime","end_time","adminPersonalEventStaff","staff","adminAppointmentStaffMember","admin_appointment_staff_member","loadingSpinnerActive","loading_spinner","logoutClicked","log_out_clicked","clickOutsideDayPicker","changeClickOutsideDayPicker","pageOpened","changePageOpened","titleError","changeTitleError","dateError","changeDateError","startTimeError","changeStartTimeError","endTimeError","changeEndTimeError","staffError","changeStaffError","addPersonalEvent","personalEventLoading","loading","personalEventData","data","override","pageNowOpen","setTimeout","clearTimeout","resetErrorStates","handleBackToSchedule","dayPickerClickFunction","e","target","placeholder","getAttribute","className","baseVal","split","includes","window","addEventListener","removeEventListener","handleAllDayToggle","handleBlockTimeToggle","checkMark","x","duration","styles","display","calculateDuration","start","end","startTime","utc","endTime","diff","handleSavePersonalEvent","variables","value","allDay","blockTime","loadingFunction","transform","styleprops","zIndex","content","position","opacity","height","backdropFilter","WebkitBackdropFilter","paddingBottom","borderRadius","width","top","left","right","bottom","border","flexDirection","alignItems","justifyContent","background","outline","employee","employeeRole","choice","container","overlay","overlayWrapper","disabledDays","before","Date","style","color","day"],"mappings":"suBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,WAArC,KAAwD,OAAxD,CACA,OAASC,UAAT,CAAqBC,MAArB,KAAmC,0BAAnC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACEC,kBADF,CAEEC,QAFF,KAGO,mCAHP,CAIA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,UAAT,CAAqBC,SAArB,KAAsC,yBAAtC,CACA,MAAOC,CAAAA,cAAP,KAA2B,iCAA3B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gBAArB,CACA,OAASC,WAAT,KAA4B,qBAA5B,CACA,MAAOC,CAAAA,wBAAP,KAAqC,wDAArC,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,6BAAzB,CACA,OAASC,GAAT,KAAoB,cAApB,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,mCAAP,KAAgD,2GAAhD,CACA,MAAOC,CAAAA,sCAAP,KAAmD,iHAAnD,CACA,MAAOC,CAAAA,6BAAP,KAA0C,kEAA1C,CACA,MAAOC,CAAAA,4BAAP,KAAyC,iEAAzC,CACA,MAAOC,CAAAA,iCAAP,KAA8C,wGAA9C,CACA,MAAOC,CAAAA,yCAAP,KAAsD,iHAAtD,CACA,MAAOC,CAAAA,4CAAP,KAAyD,uHAAzD,CACA,MAAOC,CAAAA,uCAAP,KAAoD,8GAApD,CACA,MAAOC,CAAAA,sCAAP,KAAmD,4GAAnD,CACA,MAAOC,CAAAA,uCAAP,KAAoD,8GAApD,CACA,MAAOC,CAAAA,uCAAP,KAAoD,8GAApD,CACA,MAAOC,CAAAA,4CAAP,KAAyD,uHAAzD,CACA,MAAOC,CAAAA,0CAAP,KAAuD,mHAAvD,CACA,MAAOC,CAAAA,iCAAP,KAA8C,wGAA9C,CACA,MAAOC,CAAAA,gCAAP,KAA6C,sGAA7C,CACA,MAAOC,CAAAA,sCAAP,KAAmD,iHAAnD,CACA,MAAOC,CAAAA,oCAAP,KAAiD,6GAAjD,CACA,MAAOC,CAAAA,iCAAP,KAA8C,wGAA9C,CACA,MAAO,sDAAP,CACA,MAAO,0BAAP,CAEA,KAAMC,CAAAA,kBAAkB,CAAIC,KAAD,EAAW,MAElCC,CAAAA,cAFkC,CAYhCD,KAZgC,CAElCC,cAFkC,CAGlCC,oBAHkC,CAYhCF,KAZgC,CAGlCE,oBAHkC,CAIlCC,oBAJkC,CAYhCH,KAZgC,CAIlCG,oBAJkC,CAKlCC,0BALkC,CAYhCJ,KAZgC,CAKlCI,0BALkC,CAMlCC,8BANkC,CAYhCL,KAZgC,CAMlCK,8BANkC,CAOlCC,WAPkC,CAYhCN,KAZgC,CAOlCM,WAPkC,CAQlCC,kBARkC,CAYhCP,KAZgC,CAQlCO,kBARkC,CASlCC,eATkC,CAYhCR,KAZgC,CASlCQ,eATkC,CAUlCC,2BAVkC,CAYhCT,KAZgC,CAUlCS,2BAVkC,CAWlCC,uBAXkC,CAYhCV,KAZgC,CAWlCU,uBAXkC,CAcpC,KAAMC,CAAAA,QAAQ,CAAGzC,WAAW,EAA5B,CAEA,KAAM0C,CAAAA,uBAAuB,CAAG3C,WAAW,CACxC4C,KAAD,EAAWA,KAAK,CAACD,uBAAN,CAA8BE,KADA,CAA3C,CAGA,KAAMC,CAAAA,uBAAuB,CAAG9C,WAAW,CACxC4C,KAAD,EAAWA,KAAK,CAACE,uBAAN,CAA8BC,KADA,CAA3C,CAGA,KAAMC,CAAAA,wBAAwB,CAAGhD,WAAW,CACzC4C,KAAD,EAAWA,KAAK,CAACI,wBAAN,CAA+BC,OADA,CAA5C,CAGA,KAAMC,CAAAA,2BAA2B,CAAGlD,WAAW,CAC5C4C,KAAD,EAAWA,KAAK,CAACM,2BAAN,CAAkCC,UADA,CAA/C,CAGA,KAAMC,CAAAA,sBAAsB,CAAGpD,WAAW,CACvC4C,KAAD,EAAWA,KAAK,CAACQ,sBAAN,CAA6BC,IADA,CAA1C,CAGA,KAAMC,CAAAA,oBAAoB,CAAGtD,WAAW,CACrC4C,KAAD,EAAWA,KAAK,CAACU,oBAAN,CAA2BC,sBADA,CAAxC,CAGA,KAAMC,CAAAA,2BAA2B,CAAGxD,WAAW,CAC5C4C,KAAD,EAAWA,KAAK,CAACY,2BAAN,CAAkCC,UADA,CAA/C,CAGA,KAAMC,CAAAA,yBAAyB,CAAG1D,WAAW,CAC1C4C,KAAD,EAAWA,KAAK,CAACc,yBAAN,CAAgCC,QADA,CAA7C,CAGA,KAAMC,CAAAA,uBAAuB,CAAG5D,WAAW,CACxC4C,KAAD,EAAWA,KAAK,CAACgB,uBAAN,CAA8BC,KADA,CAA3C,CAGA,KAAMC,CAAAA,2BAA2B,CAAG9D,WAAW,CAC5C4C,KAAD,EAAWA,KAAK,CAACkB,2BAAN,CAAkCC,8BADA,CAA/C,CAGA,KAAMC,CAAAA,oBAAoB,CAAGhE,WAAW,CACrC4C,KAAD,EAAWA,KAAK,CAACoB,oBAAN,CAA2BC,eADA,CAAxC,CAGA,KAAMC,CAAAA,aAAa,CAAGlE,WAAW,CAC9B4C,KAAD,EAAWA,KAAK,CAACsB,aAAN,CAAoBC,eADA,CAAjC,CAjDoC,gBAqDyB1E,QAAQ,CAAC,IAAD,CArDjC,wCAqD7B2E,qBArD6B,eAqDNC,2BArDM,gCAsDG5E,QAAQ,CAAC,KAAD,CAtDX,yCAsD7B6E,UAtD6B,eAsDjBC,gBAtDiB,eAwDpC;AAxDoC,iBAyDG9E,QAAQ,CAAC,KAAD,CAzDX,yCAyD7B+E,UAzD6B,eAyDjBC,gBAzDiB,gCA0DChF,QAAQ,CAAC,KAAD,CA1DT,yCA0D7BiF,SA1D6B,eA0DlBC,eA1DkB,gCA2DWlF,QAAQ,CAAC,KAAD,CA3DnB,0CA2D7BmF,cA3D6B,gBA2DbC,oBA3Da,kCA4DOpF,QAAQ,CAAC,KAAD,CA5Df,2CA4D7BqF,YA5D6B,gBA4DfC,kBA5De,kCA6DGtF,QAAQ,CAAC,KAAD,CA7DX,2CA6D7BuF,UA7D6B,gBA6DjBC,gBA7DiB,mCAkEhC3E,WAAW,CAACC,wBAAD,CAlEqB,8CAgElC2E,gBAhEkC,kDAiEvBC,oBAjEuB,gBAiEhCC,OAjEgC,CAiEKC,iBAjEL,gBAiEDC,IAjEC,CAoEpC,KAAMC,CAAAA,QAAQ,CAAG7E,GAAH,mBAAd,CAOAlB,SAAS,CAAC,IAAM,CACd+E,gBAAgB,CAAC,IAAD,CAAhB,CACA,KAAMiB,CAAAA,WAAW,CAAGC,UAAU,CAAC,IAAM,CACnClB,gBAAgB,CAAC,KAAD,CAAhB,CACD,CAF6B,CAE3B,GAF2B,CAA9B,CAGA,MAAO,IAAM,CACXmB,YAAY,CAACF,WAAD,CAAZ,CACD,CAFD,CAGD,CARQ,CAQN,EARM,CAAT,CAUA,KAAMG,CAAAA,gBAAgB,CAAGjG,WAAW,CAAC,IAAM,CACzC,GAAI8E,UAAJ,CAAgB,CACdC,gBAAgB,CAAC,KAAD,CAAhB,CACD,CAED,GAAIC,SAAJ,CAAe,CACbC,eAAe,CAAC,KAAD,CAAf,CACD,CAED,GAAIK,UAAJ,CAAgB,CACdC,gBAAgB,CAAC,KAAD,CAAhB,CACD,CAED,GAAIL,cAAJ,CAAoB,CAClBC,oBAAoB,CAAC,KAAD,CAApB,CACD,CAED,GAAIC,YAAJ,CAAkB,CAChBC,kBAAkB,CAAC,KAAD,CAAlB,CACD,CACF,CApBmC,CAoBjC,CAACL,SAAD,CAAYI,YAAZ,CAA0BE,UAA1B,CAAsCJ,cAAtC,CAAsDJ,UAAtD,CApBiC,CAApC,CAsBA,KAAMoB,CAAAA,oBAAoB,CAAGlG,WAAW,CAAC,IAAM,CAC7CyC,0BAA0B,CAAC,KAAD,CAA1B,CAEAO,QAAQ,CAACzB,yCAAyC,EAA1C,CAAR,CACAyB,QAAQ,CAACxB,4CAA4C,EAA7C,CAAR,CACAwB,QAAQ,CAACvB,uCAAuC,EAAxC,CAAR,CACAuB,QAAQ,CAACtB,sCAAsC,EAAvC,CAAR,CACAsB,QAAQ,CAACrB,uCAAuC,EAAxC,CAAR,CACAqB,QAAQ,CAACpB,uCAAuC,EAAxC,CAAR,CACAoB,QAAQ,CAACnB,4CAA4C,EAA7C,CAAR,CACAmB,QAAQ,CAAClB,0CAA0C,EAA3C,CAAR,CACAkB,QAAQ,CAAC3B,4BAA4B,EAA7B,CAAR,CAEAsD,2BAA2B,CAAC,KAAD,CAA3B,CAEAsB,gBAAgB,GACjB,CAhBuC,CAgBrC,CAACxD,0BAAD,CAA6BO,QAA7B,CAAuCiD,gBAAvC,CAhBqC,CAAxC,CAkBAnG,SAAS,CAAC,IAAM,CACd,KAAMqG,CAAAA,sBAAsB,CAAIC,CAAD,EAAO,CACpC,GAAIA,CAAC,CAACC,MAAN,CAAc,CACZ,GAAID,CAAC,CAACC,MAAF,CAASC,WAAT,GAAyB,4BAA7B,CAA2D,CACzD,GAAI5B,qBAAJ,CAA2B,CACzBC,2BAA2B,CAAC,KAAD,CAA3B,CACD,CACF,CAJD,IAIO,IAAIyB,CAAC,CAACC,MAAF,CAASE,YAAT,CAAsB,OAAtB,CAAJ,CAAoC,CACzC,GAAI,OAAQH,CAAC,CAACC,MAAF,CAASG,SAAT,GAAuB,QAA/B,CAAJ,CAA8C,CAC5C,GAAI,CAACJ,CAAC,CAACC,MAAF,CAASG,SAAT,CAAmBC,OAAxB,CAAiC,CAC/B,GACEL,CAAC,CAACC,MAAF,CAASG,SAAT,CAAmBE,KAAnB,CAAyB,GAAzB,EAA8BC,QAA9B,CAAuC,eAAvC,GACAP,CAAC,CAACC,MAAF,CAASG,SAAT,CAAmBE,KAAnB,CAAyB,GAAzB,EAA8BC,QAA9B,CAAuC,qBAAvC,CAFF,CAGE,CACA,GAAIjC,qBAAJ,CAA2B,CACzBC,2BAA2B,CAAC,KAAD,CAA3B,CACD,CACF,CAPD,IAOO,CACL,GAAI,CAACD,qBAAL,CAA4B,CAC1BC,2BAA2B,CAAC,IAAD,CAA3B,CACD,CACF,CACF,CAbD,IAaO,CACL,GAAI,CAACD,qBAAL,CAA4B,CAC1BC,2BAA2B,CAAC,IAAD,CAA3B,CACD,CACF,CACF,CAnBD,IAmBO,CACL,GAAI,CAACD,qBAAL,CAA4B,CAC1BC,2BAA2B,CAAC,IAAD,CAA3B,CACD,CACF,CACF,CAzBM,IAyBA,CACL,GAAI,CAACD,qBAAL,CAA4B,CAC1BC,2BAA2B,CAAC,IAAD,CAA3B,CACD,CACF,CACF,CACF,CArCD,CAuCAiC,MAAM,CAACC,gBAAP,CAAwB,OAAxB,CAAiCV,sBAAjC,EAEA,MAAO,IAAM,CACXS,MAAM,CAACE,mBAAP,CAA2B,OAA3B,CAAoCX,sBAApC,EACD,CAFD,CAGD,CA7CQ,CA6CN,CAACzB,qBAAD,CA7CM,CAAT,CA+CA,KAAMqC,CAAAA,kBAAkB,CAAG,IAAM,CAC/B,GAAIzD,wBAAJ,CAA8B,CAC5BN,QAAQ,CAACzB,yCAAyC,EAA1C,CAAR,CACD,CAFD,IAEO,CACLyB,QAAQ,CAAC9B,mCAAmC,EAApC,CAAR,CACD,CACF,CAND,CAQA,KAAM8F,CAAAA,qBAAqB,CAAG,IAAM,CAClC,GAAIxD,2BAAJ,CAAiC,CAC/BR,QAAQ,CAACxB,4CAA4C,EAA7C,CAAR,CACD,CAFD,IAEO,CACLwB,QAAQ,CAAC7B,sCAAsC,EAAvC,CAAR,CACD,CACF,CAND,CAQA,KAAM8F,CAAAA,SAAS,CAAG,IAAM,CACtB,mBACE,oBAAC,MAAD,EAAQ,IAAI,CAAE,CAAEC,CAAC,CAAE,GAAL,CAAd,CAA0B,EAAE,CAAE,CAAEA,CAAC,CAAE,CAAL,CAA9B,CAAwC,MAAM,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CAAhD,EACIC,MAAD,eACC,2BACE,KAAK,CAAC,MADR,CAEE,KAAK,CAAE,CACLC,OAAO,CAAE,OADJ,CAFT,CAKE,OAAO,CAAC,mBALV,eAOE,4BACE,CAAC,CAAC,mCADJ,CAEE,IAAI,CAAC,MAFP,CAGE,MAAM,CAAC,MAHT,CAIE,eAAe,CAAC,KAJlB,CAKE,gBAAgB,CAAEzC,UAAU,CAAG,CAAH,WAAUwC,MAAM,CAACF,CAAjB,CAL9B,CAME,aAAa,CAAC,OANhB,CAOE,cAAc,CAAC,OAPjB,CAQE,WAAW,CAAC,GARd,EAPF,CAFJ,CADF,CAwBD,CAzBD,CA2BA,KAAMI,CAAAA,iBAAiB,CAAG,CAACC,KAAD,CAAQC,GAAR,GAAgB,CACxC,KAAMC,CAAAA,SAAS,CAAGxG,MAAM,CAACyG,GAAP,CAAWH,KAAX,CAAkB,QAAlB,CAAlB,CACA,KAAMI,CAAAA,OAAO,CAAG1G,MAAM,CAACyG,GAAP,CAAWF,GAAX,CAAgB,QAAhB,CAAhB,CAEA,MAAOG,CAAAA,OAAO,CAACC,IAAR,CAAaH,SAAb,CAAwB,SAAxB,CAAP,CACD,CALD,CAOA,KAAMI,CAAAA,uBAAuB,CAAG,IAAM,CACpC,GACE5E,uBAAuB,GACtBS,sBAAsB,EAAIE,oBADJ,CAAvB,EAEAE,2BAFA,EAGAE,yBAHA,GAICI,2BAA2B,EAAIF,uBAJhC,CADF,CAME,CACAsB,gBAAgB,CAAC,CACfsC,SAAS,CAAE,CACT3E,KAAK,CAAEF,uBADE,CAETU,IAAI,CACFC,oBAAoB,EAAI,CAACF,sBAAzB,CACIE,oBADJ,CAEIF,sBALG,CAMT+D,SAAS,CAAE3D,2BANF,CAOT6D,OAAO,CAAE3D,yBAPA,CAQTmD,QAAQ,CAAEG,iBAAiB,CACzBxD,2BADyB,CAEzBE,yBAFyB,CARlB,CAYTG,KAAK,CACHC,2BAA2B,EAAI,CAACF,uBAAhC,CACIE,2BAA2B,CAAC2D,KAA5B,CACE3D,2BAA2B,CAAC2D,KAD9B,CAEE3D,2BAHN,CAIIF,uBAAuB,CAAC6D,KAAxB,CACA7D,uBAAuB,CAAC6D,KADxB,CAEA7D,uBAnBG,CAoBTb,KAAK,CAAED,uBApBE,CAqBT4E,MAAM,CAAE1E,wBArBC,CAsBT2E,SAAS,CAAEzE,2BAtBF,CADI,CAAD,CAAhB,CA0BD,CAjCD,IAiCO,CACL,GAAI,CAACP,uBAAL,CAA8B,CAC5B8B,gBAAgB,CAAC,IAAD,CAAhB,CACD,CACD,GAAI,EAAErB,sBAAsB,EAAIE,oBAA5B,CAAJ,CAAuD,CACrDqB,eAAe,CAAC,IAAD,CAAf,CACD,CACD,GAAI,CAACnB,2BAAL,CAAkC,CAChCqB,oBAAoB,CAAC,IAAD,CAApB,CACD,CACD,GAAI,CAACnB,yBAAL,CAAgC,CAC9BqB,kBAAkB,CAAC,IAAD,CAAlB,CACD,CACD,GAAI,EAAEjB,2BAA2B,EAAIF,uBAAjC,CAAJ,CAA+D,CAC7DqB,gBAAgB,CAAC,IAAD,CAAhB,CACD,CACF,CACF,CAnDD,CAqDAzF,SAAS,CAAC,IAAM,CACd,GAAI6F,iBAAJ,CAAuB,CACrB,KAAMuC,CAAAA,eAAe,CAAGnC,UAAU,CAAC,IAAM,CACvCG,oBAAoB,GACpBpD,2BAA2B,GAC5B,CAHiC,CAG/B,IAH+B,CAAlC,CAIA,MAAO,IAAM,CACXkD,YAAY,CAACkC,eAAD,CAAZ,CACD,CAFD,CAGD,CACF,CAVQ,CAUN,CACDhC,oBADC,CAEDP,iBAFC,CAGDrB,oBAHC,CAIDxB,2BAJC,CAVM,CAAT,CAiBAhD,SAAS,CAAC,IAAM,CACd,GAAI2F,oBAAJ,CAA0B,CACxBzC,QAAQ,CAAC5B,6BAA6B,EAA9B,CAAR,CACD,CACF,CAJQ,CAIN,CAACqE,oBAAD,CAAuBzC,QAAvB,CAJM,CAAT,CAMA,mBACE,oBAAC,UAAD,EACE,KAAK,CAAET,oBADT,CAEE,IAAI,CAAE,CAAE4F,SAAS,CAAE,mBAAb,CAFR,CAGE,KAAK,CAAE,CAAEA,SAAS,CAAE,gBAAb,CAHT,CAIE,KAAK,CAAE,CAAEA,SAAS,CAAE,mBAAb,CAJT,CAKE,MAAM,CAAE,CAAEhB,QAAQ,CAAE,GAAZ,CALV,CAME,SAAS,CAAE7E,cANb,EAQIC,oBAAD,EACCA,oBAAoB,GAClB6F,UAAD,eACC,2BACE,SAAS,CAAC,gCADZ,CAEE,KAAK,gCACAA,UADA,MAEHC,MAAM,CAAE7D,aAAa,EAAIF,oBAAjB,CAAwC,MAAxC,CAAiD,CAFtD,EAFP,eAOE,oBAAC,KAAD,EACE,MAAM,CAAEA,oBADV,CAEE,SAAS,CAAC,0BAFZ,CAGE,KAAK,CAAE,CACLgE,OAAO,CAAE,CACPC,QAAQ,CAAE,OADH,CAEPF,MAAM,CAAE,KAFD,CAGPG,OAAO,CAAE,IAHF,CAIPC,MAAM,CAAE,MAJD,CAKPC,cAAc,CAAE,WALT,CAMPC,oBAAoB,CAAE,WANf,CAOPC,aAAa,CAAE,KAPR,CAQPC,YAAY,CAAE,MARP,CASPC,KAAK,CAAE,OATA,CAUPC,GAAG,CAAE,GAVE,CAWPC,IAAI,CAAE,GAXC,CAYPC,KAAK,CAAE,GAZA,CAaPC,MAAM,CAAE,GAbD,CAcPC,MAAM,CAAE,MAdD,CAeP9B,OAAO,CAAE,MAfF,CAgBP+B,aAAa,CAAE,QAhBR,CAiBPC,UAAU,CAAE,QAjBL,CAkBPC,cAAc,CAAE,QAlBT,CAmBPC,UAAU,CAAE,oBAnBL,CADJ,CAHT,eA2BE,oBAAC,YAAD,EACE,IAAI,CAAE,GADR,CAEE,GAAG,CAAE1D,QAFP,CAGE,KAAK,CAAE,iBAHT,CAIE,OAAO,CAAEvB,oBAJX,EA3BF,CAPF,cAyCE,2BAAK,SAAS,CAAC,iDAAf,eACE,oBAAC,eAAD,EACE,IAAI,CAAElE,kBADR,CAEE,SAAS,CAAC,kDAFZ,CAGE,OAAO,CAAE8F,oBAHX,EADF,cAME,yBAAG,OAAO,CAAEA,oBAAZ,qBANF,cAOE,2BAAK,SAAS,CAAC,mDAAf,eACE,yBAAG,SAAS,CAAC,qDAAb,0BADF,cAIE,iCAJF,cAKE,yBACE,OAAO,CAAE,IAAM,CACbzD,0BAA0B,CAAC,KAAD,CAA1B,CACAC,8BAA8B,CAAC,IAAD,CAA9B,CACAF,oBAAoB,CAAC,IAAD,CAApB,CACAuD,UAAU,CAAC,IAAM,CACfvD,oBAAoB,CAAC,KAAD,CAApB,CACD,CAFS,CAEP,IAFO,CAAV,CAGAyD,gBAAgB,GACjB,CATH,uBALF,CAPF,CAzCF,cAoEE,2BAAK,SAAS,CAAC,yCAAf,eACE,2DADF,CApEF,cAuEE,2BAAK,SAAS,CAAC,sDAAf,eACE,2BAAK,SAAS,CAAC,gCAAf,UADF,cAEE,2BACE,IAAI,CAAC,UADP,CAEE,gBAAc,SAFhB,CAGE,YAAU,sBAHZ,CAIE,gBAAc,sBAJhB,CAKE,gBAAc,OALhB,CAME,SAAS,CAAC,8BANZ,CAOE,KAAK,CAAE,CACLuD,OAAO,CAAE1E,UAAU,CAAG,eAAH,CAAqB,MADnC,CAELuD,MAAM,CAAEvD,UAAU,CAAG,KAAH,CAAW,MAFxB,CAPT,eAYE,6BACE,IAAI,CAAC,MADP,CAEE,YAAY,CAAC,KAFf,CAGE,oBAAkB,MAHpB,CAIE,gBAAc,sBAJhB,CAKE,SAAS,CAAC,0BALZ,CAME,WAAW,CAAE,+BANf,CAOE,KAAK,CAAE7B,uBAPT,CAQE,SAAS,CAAE,GARb,CASE,QAAQ,CAAGmD,CAAD,EAAO,CACfH,gBAAgB,GAChBjD,QAAQ,CAAC1B,iCAAiC,CAAC8E,CAAC,CAACC,MAAF,CAAS0B,KAAV,CAAlC,CAAR,CACD,CAZH,EAZF,CAFF,CAvEF,cAqGE,2BAAK,SAAS,CAAC,sDAAf,eACE,2BAAK,SAAS,CAAC,gCAAf,UADF,cAEE,2BACE,IAAI,CAAC,UADP,CAEE,gBAAc,SAFhB,CAGE,YAAU,sBAHZ,CAIE,gBAAc,sBAJhB,CAKE,gBAAc,OALhB,CAME,SAAS,CAAC,8BANZ,eAQE,6BACE,IAAI,CAAC,MADP,CAEE,YAAY,CAAC,KAFf,CAGE,oBAAkB,MAHpB,CAIE,gBAAc,sBAJhB,CAKE,SAAS,CAAC,0BALZ,CAME,WAAW,CAAE,2BANf,CAOE,KAAK,CAAE3E,uBAPT,CAQE,SAAS,CAAE,GARb,CASE,QAAQ,CAAGgD,CAAD,EACRpD,QAAQ,CAACjB,iCAAiC,CAACqE,CAAC,CAACC,MAAF,CAAS0B,KAAV,CAAlC,CAVZ,EARF,CAFF,CArGF,cA8HE,2BAAK,SAAS,CAAC,sDAAf,eACE,2BAAK,SAAS,CAAC,gCAAf,UADF,cAEE,oBAAC,QAAD,EACE,OAAO,CACLlF,eAAe,CACXA,eAAe,CAAC4G,QAAhB,CACE5G,eAAe,CAAC4G,QAAhB,CAAyBC,YAAzB,CAAsC/C,QAAtC,CAA+C,OAA/C,EACE/D,kBAAkB,EADpB,CAEEG,uBAAuB,EAH3B,CAIEA,uBAAuB,EALd,CAMXA,uBAAuB,EAR/B,CAUE,QAAQ,CAAG4G,MAAD,EAAY,CACpB1D,gBAAgB,GAChBjD,QAAQ,CAACb,iCAAiC,CAACwH,MAAD,CAAlC,CAAR,CACD,CAbH,CAcE,KAAK,CACHvF,2BAA2B,EAAI,CAACF,uBAAhC,CACIE,2BADJ,CAEIF,uBAjBR,CAmBE,gBAAgB,CACdoB,UAAU,CACN,+CADM,CAEN,0BAtBR,CAwBE,SAAS,CAAC,8BAxBZ,CAyBE,WAAW,CACTlB,2BAA2B,EAAI,CAACF,uBAAhC,CACIE,2BADJ,CAEIF,uBAAuB,CACvBA,uBADuB,CAEvB,gEA9BR,CAgCE,oBAAoB,CAClBE,2BAA2B,EAAI,CAACF,uBAAhC,CACI,mDADJ,CAEIA,uBAAuB,CACvB,mDADuB,CAEvB,sDArCR,CAuCE,KAAK,CAAE,CACLsF,OAAO,CAAElE,UAAU,CAAG,eAAH,CAAqB,MADnC,CAEL+C,MAAM,CAAE/C,UAAU,CAAG,KAAH,CAAW,MAFxB,CAvCT,EAFF,CA9HF,cA6KE,2BAAK,SAAS,CAAC,yCAAf,eACE,oDADF,cAGE,2BAAK,SAAS,CAAC,yCAAf,eACE,wCADF,cAEE,4BACE,SAAS,CAAC,8CADZ,CAEE,OAAO,CAAEyB,kBAFX,eAIE,oBAAC,eAAD,EACE,KAAK,CAAC,0BADR,CAEE,SAAS,CAAC,SAFZ,CAGE,IAAI,CAAE1G,QAHR,EAJF,CASGiD,wBAAwB,CAAG2D,SAAS,EAAZ,CAAiB,IAT5C,CAFF,cAaE,2CAbF,cAcE,4BACE,SAAS,CAAC,8CADZ,CAEE,OAAO,CAAED,qBAFX,eAIE,oBAAC,eAAD,EACE,KAAK,CAAC,0BADR,CAEE,SAAS,CAAC,SAFZ,CAGE,IAAI,CAAE3G,QAHR,EAJF,CASGmD,2BAA2B,CAAGyD,SAAS,EAAZ,CAAiB,IAT/C,CAdF,CAHF,CA7KF,cA2ME,2BACE,SAAS,CAAC,sDADZ,CAEE,OAAO,CAAE,IAAMhB,gBAAgB,EAFjC,eAIE,2BAAK,SAAS,CAAC,gCAAf,SAJF,cAKE,oBAAC,cAAD,EACE,UAAU,CAAE,CACV2D,SAAS,CAAE,8BADD,CAEVC,OAAO,CAAE,EAFC,CAGVC,cAAc,CAAEpF,qBAAqB,CACjC,+BADiC,CAEjC,EALM,CADd,CAQE,cAAc,CAAE,CAAEqF,YAAY,CAAE,CAAEC,MAAM,CAAE,GAAIC,CAAAA,IAAJ,EAAV,CAAhB,CARlB,CASE,UAAU,CAAE,CACVzD,SAAS,CAAExB,SAAS,CAChB,+CADgB,CAEhB,0BAHM,CAIVkF,KAAK,CAAE,CACLC,KAAK,CAAE,mBADF,CAJG,CATd,CAiBE,UAAU,CAAE3J,UAjBd,CAkBE,SAAS,CAAEC,SAlBb,CAmBE,WAAW,CAAG2J,GAAD,EAAS,CACpBnE,gBAAgB,GAChBjD,QAAQ,CAAChB,gCAAgC,CAACoI,GAAD,CAAjC,CAAR,CACD,CAtBH,CAuBE,MAAM,CAAC,GAvBT,CAwBE,KAAK,CACHxG,oBAAoB,EAAI,CAACF,sBAAzB,CACIE,oBADJ,CAEIF,sBA3BR,CA6BE,WAAW,CAAC,4BA7Bd,EALF,CA3MF,cAgPE,2BACE,SAAS,CAAC,sDADZ,CAEE,OAAO,CAAE,IAAMuC,gBAAgB,EAFjC,eAIE,2BAAK,SAAS,CAAC,sEAAf,eAJF,cAOE,oBAAC,QAAD,EACE,OAAO,CAAEtD,WAAW,EADtB,CAEE,QAAQ,CAAGgH,MAAD,EAAY,CACpB1D,gBAAgB,GAChBjD,QAAQ,CACNf,sCAAsC,CAAC0H,MAAM,CAAC5B,KAAR,CADhC,CAAR,CAGD,CAPH,CAQE,KAAK,CAAEjE,2BART,CASE,gBAAgB,CACdoB,cAAc,CACV,+CADU,CAEV,0BAZR,CAcE,SAAS,CAAC,8BAdZ,CAeE,WAAW,CACTpB,2BAA2B,CACvBA,2BADuB,CAEvB,YAlBR,CAoBE,oBAAoB,CAClBA,2BAA2B,CACvB,mDADuB,CAEvB,sDAvBR,EAPF,cAiCE,2BAAK,SAAS,CAAC,sEAAf,aAjCF,cAoCE,oBAAC,QAAD,EACE,OAAO,CAAEnB,WAAW,EADtB,CAEE,QAAQ,CAAGgH,MAAD,EAAY,CACpB1D,gBAAgB,GAChBjD,QAAQ,CAACd,oCAAoC,CAACyH,MAAM,CAAC5B,KAAR,CAArC,CAAR,CACD,CALH,CAME,KAAK,CAAE/D,yBANT,CAOE,gBAAgB,CACdoB,YAAY,CACR,+CADQ,CAER,0BAVR,CAYE,SAAS,CAAC,8BAZZ,CAaE,WAAW,CACTpB,yBAAyB,CACrBA,yBADqB,CAErB,UAhBR,CAkBE,oBAAoB,CAClBA,yBAAyB,CACrB,mDADqB,CAErB,sDArBR,CAuBE,KAAK,CAAE,CACLwF,OAAO,CAAEpE,YAAY,CAAG,eAAH,CAAqB,MADrC,CAELiD,MAAM,CAAEjD,YAAY,CAAG,KAAH,CAAW,MAF1B,CAvBT,EApCF,CAhPF,cAiTE,2BAAK,SAAS,CAAC,qCAAf,eACE,2BAAK,SAAS,CAAC,iBAAf,eACE,2BACE,SAAS,CAAC,eADZ,CAEE,OAAO,CAAEyC,uBAFX,wBADF,CADF,CAjTF,CAFkB,CATxB,CADF,CA4UD,CAtnBD,CAwnBA,cAAezF,CAAAA,kBAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from \"react\";\r\nimport { Transition, Spring } from \"react-spring/renderprops\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faLongArrowAltLeft,\r\n  faSquare,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { formatDate, parseDate } from \"react-day-picker/moment\";\r\nimport DayPickerInput from \"react-day-picker/DayPickerInput\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport { useMutation } from \"@apollo/react-hooks\";\r\nimport addPersonalEventMutation from \"../../../../graphql/mutations/addPersonalEventMutation\";\r\nimport Modal from \"react-modal\";\r\nimport BounceLoader from \"react-spinners/BounceLoader\";\r\nimport { css } from \"@emotion/css\";\r\nimport moment from \"moment\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME\";\r\nimport ACTION_LOADING_SPINNER_ACTIVE from \"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_ACTIVE\";\r\nimport ACTION_LOADING_SPINNER_RESET from \"../../../../actions/LoadingSpinner/ACTION_LOADING_SPINNER_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_TITLE from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventAllDay/ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventBlockTime/ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventTitle/ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_NOTES from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventNotes/ACTION_ADMIN_PERSONAL_EVENT_NOTES\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_DATE from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventDate/ACTION_ADMIN_PERSONAL_EVENT_DATE\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_START_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStartTime/ACTION_ADMIN_PERSONAL_EVENT_START_TIME\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_END_TIME from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventEndTime/ACTION_ADMIN_PERSONAL_EVENT_END_TIME\";\r\nimport ACTION_ADMIN_PERSONAL_EVENT_STAFF from \"../../../../actions/Admin/AdminPersonalEvent/AdminPersonalEventStaff/ACTION_ADMIN_PERSONAL_EVENT_STAFF\";\r\nimport \"../AdminCreateAppointment/AdminCreateAppointment.css\";\r\nimport \"./AdminPersonalEvent.css\";\r\n\r\nconst AdminPersonalEvent = (props) => {\r\n  const {\r\n    stopTransition,\r\n    personalEventClicked,\r\n    changeStopTransition,\r\n    changePersonalEventClicked,\r\n    changeCreateAppointmentClicked,\r\n    timeOptions,\r\n    allEmployeeOptions,\r\n    getEmployeeData,\r\n    getAllPersonalEventsRefetch,\r\n    renderLoggedInStaffName,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const adminPersonalEventTitle = useSelector(\r\n    (state) => state.adminPersonalEventTitle.title\r\n  );\r\n  const adminPersonalEventNotes = useSelector(\r\n    (state) => state.adminPersonalEventNotes.notes\r\n  );\r\n  const adminPersonalEventAllDay = useSelector(\r\n    (state) => state.adminPersonalEventAllDay.all_day\r\n  );\r\n  const adminPersonalEventBlockTime = useSelector(\r\n    (state) => state.adminPersonalEventBlockTime.block_time\r\n  );\r\n  const adminPersonalEventDate = useSelector(\r\n    (state) => state.adminPersonalEventDate.date\r\n  );\r\n  const adminAppointmentDate = useSelector(\r\n    (state) => state.adminAppointmentDate.admin_appointment_date\r\n  );\r\n  const adminPersonalEventStartTime = useSelector(\r\n    (state) => state.adminPersonalEventStartTime.start_time\r\n  );\r\n  const adminPersonalEventEndTime = useSelector(\r\n    (state) => state.adminPersonalEventEndTime.end_time\r\n  );\r\n  const adminPersonalEventStaff = useSelector(\r\n    (state) => state.adminPersonalEventStaff.staff\r\n  );\r\n  const adminAppointmentStaffMember = useSelector(\r\n    (state) => state.adminAppointmentStaffMember.admin_appointment_staff_member\r\n  );\r\n  const loadingSpinnerActive = useSelector(\r\n    (state) => state.loadingSpinnerActive.loading_spinner\r\n  );\r\n  const logoutClicked = useSelector(\r\n    (state) => state.logoutClicked.log_out_clicked\r\n  );\r\n\r\n  const [clickOutsideDayPicker, changeClickOutsideDayPicker] = useState(true);\r\n  const [pageOpened, changePageOpened] = useState(false);\r\n\r\n  // Errors\r\n  const [titleError, changeTitleError] = useState(false);\r\n  const [dateError, changeDateError] = useState(false);\r\n  const [startTimeError, changeStartTimeError] = useState(false);\r\n  const [endTimeError, changeEndTimeError] = useState(false);\r\n  const [staffError, changeStaffError] = useState(false);\r\n\r\n  const [\r\n    addPersonalEvent,\r\n    { loading: personalEventLoading, data: personalEventData },\r\n  ] = useMutation(addPersonalEventMutation);\r\n\r\n  const override = css`\r\n    display: block;\r\n    position: absolute;\r\n    left: 25%;\r\n    right: 25%;\r\n  `;\r\n\r\n  useEffect(() => {\r\n    changePageOpened(true);\r\n    const pageNowOpen = setTimeout(() => {\r\n      changePageOpened(false);\r\n    }, 500);\r\n    return () => {\r\n      clearTimeout(pageNowOpen);\r\n    };\r\n  }, []);\r\n\r\n  const resetErrorStates = useCallback(() => {\r\n    if (titleError) {\r\n      changeTitleError(false);\r\n    }\r\n\r\n    if (dateError) {\r\n      changeDateError(false);\r\n    }\r\n\r\n    if (staffError) {\r\n      changeStaffError(false);\r\n    }\r\n\r\n    if (startTimeError) {\r\n      changeStartTimeError(false);\r\n    }\r\n\r\n    if (endTimeError) {\r\n      changeEndTimeError(false);\r\n    }\r\n  }, [dateError, endTimeError, staffError, startTimeError, titleError]);\r\n\r\n  const handleBackToSchedule = useCallback(() => {\r\n    changePersonalEventClicked(false);\r\n\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_START_TIME_RESET());\r\n    dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME_RESET());\r\n    dispatch(ACTION_LOADING_SPINNER_RESET());\r\n\r\n    changeClickOutsideDayPicker(false);\r\n\r\n    resetErrorStates();\r\n  }, [changePersonalEventClicked, dispatch, resetErrorStates]);\r\n\r\n  useEffect(() => {\r\n    const dayPickerClickFunction = (e) => {\r\n      if (e.target) {\r\n        if (e.target.placeholder === \"Enter your event date here\") {\r\n          if (clickOutsideDayPicker) {\r\n            changeClickOutsideDayPicker(false);\r\n          }\r\n        } else if (e.target.getAttribute(\"class\")) {\r\n          if (typeof (e.target.className === \"string\")) {\r\n            if (!e.target.className.baseVal) {\r\n              if (\r\n                e.target.className.split(\" \").includes(\"DayPicker-Day\") ||\r\n                e.target.className.split(\" \").includes(\"DayPicker-NavButton\")\r\n              ) {\r\n                if (clickOutsideDayPicker) {\r\n                  changeClickOutsideDayPicker(false);\r\n                }\r\n              } else {\r\n                if (!clickOutsideDayPicker) {\r\n                  changeClickOutsideDayPicker(true);\r\n                }\r\n              }\r\n            } else {\r\n              if (!clickOutsideDayPicker) {\r\n                changeClickOutsideDayPicker(true);\r\n              }\r\n            }\r\n          } else {\r\n            if (!clickOutsideDayPicker) {\r\n              changeClickOutsideDayPicker(true);\r\n            }\r\n          }\r\n        } else {\r\n          if (!clickOutsideDayPicker) {\r\n            changeClickOutsideDayPicker(true);\r\n          }\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"click\", dayPickerClickFunction);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"click\", dayPickerClickFunction);\r\n    };\r\n  }, [clickOutsideDayPicker]);\r\n\r\n  const handleAllDayToggle = () => {\r\n    if (adminPersonalEventAllDay) {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY_RESET());\r\n    } else {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_ALL_DAY());\r\n    }\r\n  };\r\n\r\n  const handleBlockTimeToggle = () => {\r\n    if (adminPersonalEventBlockTime) {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME_RESET());\r\n    } else {\r\n      dispatch(ACTION_ADMIN_PERSONAL_EVENT_BLOCK_TIME());\r\n    }\r\n  };\r\n\r\n  const checkMark = () => {\r\n    return (\r\n      <Spring from={{ x: 100 }} to={{ x: 0 }} config={{ duration: 2000 }}>\r\n        {(styles) => (\r\n          <svg\r\n            width=\"100%\"\r\n            style={{\r\n              display: \"block\",\r\n            }}\r\n            viewBox=\"0 0 13.229 13.229\"\r\n          >\r\n            <path\r\n              d=\"M2.851 7.56l2.45 2.482 5.36-6.958\"\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeDasharray=\"100\"\r\n              strokeDashoffset={pageOpened ? 0 : `${styles.x}`}\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"3\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </Spring>\r\n    );\r\n  };\r\n\r\n  const calculateDuration = (start, end) => {\r\n    const startTime = moment.utc(start, \"h:mm A\");\r\n    const endTime = moment.utc(end, \"h:mm A\");\r\n\r\n    return endTime.diff(startTime, \"minutes\");\r\n  };\r\n\r\n  const handleSavePersonalEvent = () => {\r\n    if (\r\n      adminPersonalEventTitle &&\r\n      (adminPersonalEventDate || adminAppointmentDate) &&\r\n      adminPersonalEventStartTime &&\r\n      adminPersonalEventEndTime &&\r\n      (adminAppointmentStaffMember || adminPersonalEventStaff)\r\n    ) {\r\n      addPersonalEvent({\r\n        variables: {\r\n          title: adminPersonalEventTitle,\r\n          date:\r\n            adminAppointmentDate && !adminPersonalEventDate\r\n              ? adminAppointmentDate\r\n              : adminPersonalEventDate,\r\n          startTime: adminPersonalEventStartTime,\r\n          endTime: adminPersonalEventEndTime,\r\n          duration: calculateDuration(\r\n            adminPersonalEventStartTime,\r\n            adminPersonalEventEndTime\r\n          ),\r\n          staff:\r\n            adminAppointmentStaffMember && !adminPersonalEventStaff\r\n              ? adminAppointmentStaffMember.value\r\n                ? adminAppointmentStaffMember.value\r\n                : adminAppointmentStaffMember\r\n              : adminPersonalEventStaff.value\r\n              ? adminPersonalEventStaff.value\r\n              : adminPersonalEventStaff,\r\n          notes: adminPersonalEventNotes,\r\n          allDay: adminPersonalEventAllDay,\r\n          blockTime: adminPersonalEventBlockTime,\r\n        },\r\n      });\r\n    } else {\r\n      if (!adminPersonalEventTitle) {\r\n        changeTitleError(true);\r\n      }\r\n      if (!(adminPersonalEventDate || adminAppointmentDate)) {\r\n        changeDateError(true);\r\n      }\r\n      if (!adminPersonalEventStartTime) {\r\n        changeStartTimeError(true);\r\n      }\r\n      if (!adminPersonalEventEndTime) {\r\n        changeEndTimeError(true);\r\n      }\r\n      if (!(adminAppointmentStaffMember || adminPersonalEventStaff)) {\r\n        changeStaffError(true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (personalEventData) {\r\n      const loadingFunction = setTimeout(() => {\r\n        handleBackToSchedule();\r\n        getAllPersonalEventsRefetch();\r\n      }, 2000);\r\n      return () => {\r\n        clearTimeout(loadingFunction);\r\n      };\r\n    }\r\n  }, [\r\n    handleBackToSchedule,\r\n    personalEventData,\r\n    loadingSpinnerActive,\r\n    getAllPersonalEventsRefetch,\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if (personalEventLoading) {\r\n      dispatch(ACTION_LOADING_SPINNER_ACTIVE());\r\n    }\r\n  }, [personalEventLoading, dispatch]);\r\n\r\n  return (\r\n    <Transition\r\n      items={personalEventClicked}\r\n      from={{ transform: \"translateX(-100%)\" }}\r\n      enter={{ transform: \"translateX(0%)\" }}\r\n      leave={{ transform: \"translateX(-100%)\" }}\r\n      config={{ duration: 200 }}\r\n      immediate={stopTransition}\r\n    >\r\n      {(personalEventClicked) =>\r\n        personalEventClicked &&\r\n        ((styleprops) => (\r\n          <div\r\n            className=\"admin_personal_event_container\"\r\n            style={{\r\n              ...styleprops,\r\n              zIndex: logoutClicked || loadingSpinnerActive ? \"auto\" : 5,\r\n            }}\r\n          >\r\n            <Modal\r\n              isOpen={loadingSpinnerActive}\r\n              className=\"cancel_appointment_modal\"\r\n              style={{\r\n                content: {\r\n                  position: \"fixed\",\r\n                  zIndex: 10000,\r\n                  opacity: 0.99,\r\n                  height: \"100%\",\r\n                  backdropFilter: \"blur(5px)\",\r\n                  WebkitBackdropFilter: \"blur(5px)\",\r\n                  paddingBottom: \"10%\",\r\n                  borderRadius: \"none\",\r\n                  width: \"100vw\",\r\n                  top: \"0\",\r\n                  left: \"0\",\r\n                  right: \"0\",\r\n                  bottom: \"0\",\r\n                  border: \"none\",\r\n                  display: \"flex\",\r\n                  flexDirection: \"column\",\r\n                  alignItems: \"center\",\r\n                  justifyContent: \"center\",\r\n                  background: \"rgba(0, 0, 0, 0.5)\",\r\n                },\r\n              }}\r\n            >\r\n              <BounceLoader\r\n                size={100}\r\n                css={override}\r\n                color={\"rgb(44, 44, 52)\"}\r\n                loading={loadingSpinnerActive}\r\n              />\r\n            </Modal>\r\n            <div className=\"admin_individual_selected_client_back_container\">\r\n              <FontAwesomeIcon\r\n                icon={faLongArrowAltLeft}\r\n                className=\"admin_individual_selected_client_back_arrow_icon\"\r\n                onClick={handleBackToSchedule}\r\n              />\r\n              <p onClick={handleBackToSchedule}>Back to schedule</p>\r\n              <div className=\"admin_individual_selected_client_top_page_options\">\r\n                <p className=\"admin_individual_selected_client_chosen_create_page\">\r\n                  Create Personal Event\r\n                </p>\r\n                <p>/</p>\r\n                <p\r\n                  onClick={() => {\r\n                    changePersonalEventClicked(false);\r\n                    changeCreateAppointmentClicked(true);\r\n                    changeStopTransition(true);\r\n                    setTimeout(() => {\r\n                      changeStopTransition(false);\r\n                    }, 1000);\r\n                    resetErrorStates();\r\n                  }}\r\n                >\r\n                  Create Appointment\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <div className=\"admin_create_appointment_section_header\">\r\n              <h2>Personal Event Information</h2>\r\n            </div>\r\n            <div className=\"admin_create_appointment_input_information_container\">\r\n              <div className=\"admin_create_appointment_label\">Title</div>\r\n              <div\r\n                role=\"combobox\"\r\n                aria-haspopup=\"listbox\"\r\n                aria-owns=\"react-autowhatever-1\"\r\n                aria-controls=\"react-autowhatever-1\"\r\n                aria-expanded=\"false\"\r\n                className=\"react-autosuggest__container\"\r\n                style={{\r\n                  outline: titleError ? \"3px solid red\" : \"none\",\r\n                  zIndex: titleError ? 99999 : \"auto\",\r\n                }}\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  aria-autocomplete=\"list\"\r\n                  aria-controls=\"react-autowhatever-1\"\r\n                  className=\"react-autosuggest__input\"\r\n                  placeholder={\"Create a title for your event\"}\r\n                  value={adminPersonalEventTitle}\r\n                  maxLength={200}\r\n                  onChange={(e) => {\r\n                    resetErrorStates();\r\n                    dispatch(ACTION_ADMIN_PERSONAL_EVENT_TITLE(e.target.value));\r\n                  }}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"admin_create_appointment_input_information_container\">\r\n              <div className=\"admin_create_appointment_label\">Notes</div>\r\n              <div\r\n                role=\"combobox\"\r\n                aria-haspopup=\"listbox\"\r\n                aria-owns=\"react-autowhatever-1\"\r\n                aria-controls=\"react-autowhatever-1\"\r\n                aria-expanded=\"false\"\r\n                className=\"react-autosuggest__container\"\r\n              >\r\n                <input\r\n                  type=\"text\"\r\n                  autoComplete=\"off\"\r\n                  aria-autocomplete=\"list\"\r\n                  aria-controls=\"react-autowhatever-1\"\r\n                  className=\"react-autosuggest__input\"\r\n                  placeholder={\"Enter optional notes here\"}\r\n                  value={adminPersonalEventNotes}\r\n                  maxLength={200}\r\n                  onChange={(e) =>\r\n                    dispatch(ACTION_ADMIN_PERSONAL_EVENT_NOTES(e.target.value))\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"admin_create_appointment_input_information_container\">\r\n              <div className=\"admin_create_appointment_label\">Staff</div>\r\n              <Dropdown\r\n                options={\r\n                  getEmployeeData\r\n                    ? getEmployeeData.employee\r\n                      ? getEmployeeData.employee.employeeRole.includes(\"Admin\")\r\n                        ? allEmployeeOptions()\r\n                        : renderLoggedInStaffName()\r\n                      : renderLoggedInStaffName()\r\n                    : renderLoggedInStaffName()\r\n                }\r\n                onChange={(choice) => {\r\n                  resetErrorStates();\r\n                  dispatch(ACTION_ADMIN_PERSONAL_EVENT_STAFF(choice));\r\n                }}\r\n                value={\r\n                  adminAppointmentStaffMember && !adminPersonalEventStaff\r\n                    ? adminAppointmentStaffMember\r\n                    : adminPersonalEventStaff\r\n                }\r\n                controlClassName={\r\n                  staffError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\"\r\n                }\r\n                className=\"react-autosuggest__container\"\r\n                placeholder={\r\n                  adminAppointmentStaffMember && !adminPersonalEventStaff\r\n                    ? adminAppointmentStaffMember\r\n                    : adminPersonalEventStaff\r\n                    ? adminPersonalEventStaff\r\n                    : \"Enter staff member with which to associate this personal event\"\r\n                }\r\n                placeholderClassName={\r\n                  adminAppointmentStaffMember && !adminPersonalEventStaff\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : adminPersonalEventStaff\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n                }\r\n                style={{\r\n                  outline: staffError ? \"3px solid red\" : \"none\",\r\n                  zIndex: staffError ? 99999 : \"auto\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"admin_create_appointment_section_header\">\r\n              <h2>Personal Event Time</h2>\r\n\r\n              <div className=\"admin_personal_event_checkbox_container\">\r\n                <p>All day?</p>\r\n                <span\r\n                  className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n                  onClick={handleAllDayToggle}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    color=\"rgba(155, 155, 155, 0.4)\"\r\n                    transform=\"grow-10\"\r\n                    icon={faSquare}\r\n                  />\r\n                  {adminPersonalEventAllDay ? checkMark() : null}\r\n                </span>\r\n                <p>Block time?</p>\r\n                <span\r\n                  className=\"fa-layers fa-fw client_consent_form_checkbox\"\r\n                  onClick={handleBlockTimeToggle}\r\n                >\r\n                  <FontAwesomeIcon\r\n                    color=\"rgba(155, 155, 155, 0.4)\"\r\n                    transform=\"grow-10\"\r\n                    icon={faSquare}\r\n                  />\r\n                  {adminPersonalEventBlockTime ? checkMark() : null}\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"admin_create_appointment_input_information_container\"\r\n              onClick={() => resetErrorStates()}\r\n            >\r\n              <div className=\"admin_create_appointment_label\">Date</div>\r\n              <DayPickerInput\r\n                classNames={{\r\n                  container: \"react-autosuggest__container\",\r\n                  overlay: \"\",\r\n                  overlayWrapper: clickOutsideDayPicker\r\n                    ? \"react-autosuggest__input_hide\"\r\n                    : \"\",\r\n                }}\r\n                dayPickerProps={{ disabledDays: { before: new Date() } }}\r\n                inputProps={{\r\n                  className: dateError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\",\r\n                  style: {\r\n                    color: \"rgb(74, 144, 226)\",\r\n                  },\r\n                }}\r\n                formatDate={formatDate}\r\n                parseDate={parseDate}\r\n                onDayChange={(day) => {\r\n                  resetErrorStates();\r\n                  dispatch(ACTION_ADMIN_PERSONAL_EVENT_DATE(day));\r\n                }}\r\n                format=\"L\"\r\n                value={\r\n                  adminAppointmentDate && !adminPersonalEventDate\r\n                    ? adminAppointmentDate\r\n                    : adminPersonalEventDate\r\n                }\r\n                placeholder=\"Enter your event date here\"\r\n              />\r\n            </div>\r\n            <div\r\n              className=\"admin_create_appointment_input_information_container\"\r\n              onClick={() => resetErrorStates()}\r\n            >\r\n              <div className=\"admin_create_appointment_label admin_create_appointment_double_label\">\r\n                Start Time\r\n              </div>\r\n              <Dropdown\r\n                options={timeOptions()}\r\n                onChange={(choice) => {\r\n                  resetErrorStates();\r\n                  dispatch(\r\n                    ACTION_ADMIN_PERSONAL_EVENT_START_TIME(choice.value)\r\n                  );\r\n                }}\r\n                value={adminPersonalEventStartTime}\r\n                controlClassName={\r\n                  startTimeError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\"\r\n                }\r\n                className=\"react-autosuggest__container\"\r\n                placeholder={\r\n                  adminPersonalEventStartTime\r\n                    ? adminPersonalEventStartTime\r\n                    : \"Start Time\"\r\n                }\r\n                placeholderClassName={\r\n                  adminPersonalEventStartTime\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n                }\r\n              />\r\n              <div className=\"admin_create_appointment_label admin_create_appointment_double_label\">\r\n                End Time\r\n              </div>\r\n              <Dropdown\r\n                options={timeOptions()}\r\n                onChange={(choice) => {\r\n                  resetErrorStates();\r\n                  dispatch(ACTION_ADMIN_PERSONAL_EVENT_END_TIME(choice.value));\r\n                }}\r\n                value={adminPersonalEventEndTime}\r\n                controlClassName={\r\n                  endTimeError\r\n                    ? \"react-autosuggest__input personal_event_error\"\r\n                    : \"react-autosuggest__input\"\r\n                }\r\n                className=\"react-autosuggest__container\"\r\n                placeholder={\r\n                  adminPersonalEventEndTime\r\n                    ? adminPersonalEventEndTime\r\n                    : \"End Time\"\r\n                }\r\n                placeholderClassName={\r\n                  adminPersonalEventEndTime\r\n                    ? \"admin_create_appointent_dropdown_placeholder_time\"\r\n                    : \"admin_create_appointent_dropdown_placeholder_no_time\"\r\n                }\r\n                style={{\r\n                  outline: endTimeError ? \"3px solid red\" : \"none\",\r\n                  zIndex: endTimeError ? 99999 : \"auto\",\r\n                }}\r\n              />\r\n            </div>\r\n            <div className=\"admin_square_payment_form_container\">\r\n              <div className=\"sq-payment-form\">\r\n                <div\r\n                  className=\"sq-creditcard\"\r\n                  onClick={handleSavePersonalEvent}\r\n                >\r\n                  Save Personal Event\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))\r\n      }\r\n    </Transition>\r\n  );\r\n};\r\n\r\nexport default AdminPersonalEvent;\r\n"]},"metadata":{},"sourceType":"module"}