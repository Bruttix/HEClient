{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\backup-July4\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\MERN-barberShops\\\\backup-July4\\\\Client\\\\src\\\\components\\\\account\\\\signup\\\\CreateAccountPhoneNumber\\\\CreateAccountPhoneNumber.js\";\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\nimport { useQuery } from \"@apollo/react-hooks\";\nimport getClientsQuery from \"../../../../graphql/queries/getClientsQuery\";\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID\";\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID\";\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID\";\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID\";\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER\";\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET\";\nimport \"../SignUp.css\";\n\nconst PhoneNumber = props => {\n  const dispatch = useDispatch(); // Phone Number States\n\n  const createAccountPhoneNumber = useSelector(state => state.createAccountPhoneNumber.create_account_phone_number);\n  const createAccountPhoneNumberValid = useSelector(state => state.createAccountPhoneNumberValid.create_account_phone_number_valid);\n  const createAccountPhoneNumberInvalid = useSelector(state => state.createAccountPhoneNumberInvalid.create_account_phone_number_invalid);\n  const facebookCompleteRegistration = useSelector(state => state.facebookCompleteRegistration.facebook_complete_registration_active);\n  const createAccountFirstName = useSelector(state => state.createAccountFirstName.create_account_first_name);\n  const createAccountLastName = useSelector(state => state.createAccountLastName.create_account_last_name);\n  const createAccountEmailValid = useSelector(state => state.createAccountEmailValid.create_account_email_valid);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        phoneNumberAlreadyRegistered = _useState2[0],\n        changePhoneNumberAlreadyRegistered = _useState2[1]; // Regular Expression for Phone Number Validation - allows only phone numbers in the format (xxx) xxx - xxx, with x values being digits\n\n\n  const phoneNumberReg = /^(\\(\\d\\d\\d\\))+\\s+(\\d\\d\\d)+\\s+(-)+\\s+(\\d\\d\\d\\d)$/g; // Regular Expression for Autocompleted Phone Numbers - allows phone numbers in the format 1xxxxxxxxxx, with x values being digits and the leading 1 country code being optional.\n\n  const phoneNumberAutocompleteReg = /^(1*\\d{10})$/g;\n\n  const _useQuery = useQuery(getClientsQuery, {\n    fetchPolicy: \"no-cache\"\n  }),\n        data = _useQuery.data;\n\n  const validatePhoneNumber = useCallback(number => {\n    const validPhoneNumber = phoneNumberReg.test(number);\n    const validPhoneAutocomplete = phoneNumberAutocompleteReg.test(number);\n\n    if (createAccountPhoneNumber) {\n      if (data) {\n        for (let i = 0; i < data.clients.length; i++) {\n          if (data.clients[i].phoneNumber === createAccountPhoneNumber && (data.clients[i].password !== null || data.clients[i].tokenCount > 0)) {\n            changePhoneNumberAlreadyRegistered(true);\n            dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\n            dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\n          }\n        }\n      }\n    }\n\n    if (!phoneNumberAlreadyRegistered) {\n      if (validPhoneNumber || validPhoneAutocomplete) {\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID());\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());\n      } else {\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\n      }\n    } else {\n      dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\n      dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\n    }\n  }, [data, dispatch, phoneNumberAlreadyRegistered, phoneNumberAutocompleteReg, phoneNumberReg, createAccountPhoneNumber]);\n  useEffect(() => {\n    if (createAccountPhoneNumber.length === 16) {\n      validatePhoneNumber(createAccountPhoneNumber);\n    }\n  }, [validatePhoneNumber, createAccountPhoneNumber, dispatch, phoneNumberAlreadyRegistered, phoneNumberAutocompleteReg, phoneNumberReg]);\n\n  const handlePhoneNumber = e => {\n    validatePhoneNumber(e.currentTarget.value);\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));\n  };\n\n  const phoneNumberTyping = e => {\n    let currentTyping = e.currentTarget.value;\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET());\n\n    if (createAccountPhoneNumber.length !== 15) {\n      if (createAccountPhoneNumberValid) {\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\n      }\n    }\n\n    if (phoneNumberAlreadyRegistered) {\n      changePhoneNumberAlreadyRegistered(false);\n    }\n\n    if (createAccountPhoneNumberInvalid) {\n      dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());\n    }\n\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value)); // Formatting for US Phone Numbers\n\n    if (currentTyping.length === 3) {\n      currentTyping = currentTyping.split(\"\");\n      currentTyping.unshift(\"(\");\n      currentTyping.push(\") \");\n      currentTyping = currentTyping.join(\"\");\n    } else {\n      if (currentTyping.length === 4) {\n        if (currentTyping.indexOf(\"(\") === 0 && currentTyping.indexOf(\")\") < 0) {\n          currentTyping = currentTyping.split(\"\");\n          currentTyping.splice(currentTyping.indexOf(\"(\"), 1);\n          currentTyping = currentTyping.join(\"\");\n        } else {\n          if (currentTyping.indexOf(\"(\") < 0 && currentTyping.indexOf(\")\") < 0) {\n            currentTyping = currentTyping.split(\"\");\n            currentTyping.unshift(\"(\");\n            currentTyping.splice(4, 0, \") \");\n            currentTyping = currentTyping.join(\"\");\n          }\n        }\n      } else {\n        if (currentTyping.length === 6) {\n          if (currentTyping.indexOf(\" \") < 0) {\n            currentTyping = currentTyping.split(\"\");\n            currentTyping.splice(5, 0, \" \");\n            currentTyping = currentTyping.join(\"\");\n          }\n        } else {\n          if (currentTyping.length === 10) {\n            if (currentTyping.lastIndexOf(\" \") === 5) {\n              currentTyping = currentTyping.split(\"\");\n              currentTyping.splice(9, 0, \" - \");\n              currentTyping = currentTyping.join(\"\");\n            } else {\n              if (currentTyping.indexOf(\"(\") < 0) {\n                currentTyping = currentTyping.split(\"\");\n                currentTyping.unshift(\"(\");\n                currentTyping.splice(4, 0, \") \");\n                currentTyping.splice(8, 0, \" - \");\n                currentTyping = currentTyping.join(\"\");\n              }\n            }\n          } else {\n            if (currentTyping.length === 11) {\n              if (currentTyping.lastIndexOf(\" \") === 9 && currentTyping.indexOf(\"-\") < 0) {\n                currentTyping = currentTyping.split(\"\");\n                currentTyping.splice(9, 0, \" -\");\n                currentTyping = currentTyping.join(\"\");\n              }\n            } else {\n              if (currentTyping.length === 12) {\n                if (currentTyping.lastIndexOf(\" \") === 9) {\n                  currentTyping = currentTyping.split(\"\");\n                  currentTyping.splice(11, 0, \" \");\n                  currentTyping = currentTyping.join(\"\");\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    e.currentTarget.value = currentTyping;\n  };\n\n  return /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"sign_up_individual_form_field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    for: \"createAccountPhoneNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"required_label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, \"Phone Number\", /*#__PURE__*/React.createElement(\"p\", {\n    className: \"required_label red_asterisk\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, facebookCompleteRegistration ? null : \"* \"))), /*#__PURE__*/React.createElement(Input, {\n    type: \"tel\",\n    name: \"createAccountPhoneNumber\",\n    maxLength: 16,\n    defaultValue: createAccountPhoneNumber,\n    placeholder: \"Phone number\",\n    onBlur: handlePhoneNumber,\n    onChange: phoneNumberTyping,\n    className: \"input_field_sign_up\",\n    onKeyDown: e => {\n      if (e.key === \"Enter\") {\n        if (createAccountFirstName && createAccountLastName && createAccountEmailValid && createAccountPhoneNumberValid) {\n          props.changeCreateAccountStepTwoTriggered(true);\n        }\n      }\n    },\n    invalid: createAccountPhoneNumber === \"\" ? false : createAccountPhoneNumberInvalid ? true : false,\n    valid: createAccountPhoneNumber === \"\" ? false : createAccountPhoneNumberValid ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }\n  }), phoneNumberAlreadyRegistered ? /*#__PURE__*/React.createElement(FormFeedback, {\n    className: \"invalid_message_container\",\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }\n  }, \"This phone number has already been registered.\") : /*#__PURE__*/React.createElement(FormFeedback, {\n    className: \"invalid_message_container\",\n    invalid: \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }, \"Please enter a valid phone number.\"));\n};\n\nexport default PhoneNumber;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/MERN-barberShops/backup-July4/Client/src/components/account/signup/CreateAccountPhoneNumber/CreateAccountPhoneNumber.js"],"names":["React","useState","useEffect","useCallback","useDispatch","useSelector","FormGroup","FormFeedback","Label","Input","useQuery","getClientsQuery","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID","ACTION_CREATE_ACCOUNT_PHONE_NUMBER","ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET","PhoneNumber","props","dispatch","createAccountPhoneNumber","state","create_account_phone_number","createAccountPhoneNumberValid","create_account_phone_number_valid","createAccountPhoneNumberInvalid","create_account_phone_number_invalid","facebookCompleteRegistration","facebook_complete_registration_active","createAccountFirstName","create_account_first_name","createAccountLastName","create_account_last_name","createAccountEmailValid","create_account_email_valid","phoneNumberAlreadyRegistered","changePhoneNumberAlreadyRegistered","phoneNumberReg","phoneNumberAutocompleteReg","fetchPolicy","data","validatePhoneNumber","number","validPhoneNumber","test","validPhoneAutocomplete","i","clients","length","phoneNumber","password","tokenCount","handlePhoneNumber","e","currentTarget","value","phoneNumberTyping","currentTyping","split","unshift","push","join","indexOf","splice","lastIndexOf","key","changeCreateAccountStepTwoTriggered"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormGroup, FormFeedback, Label, Input } from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport getClientsQuery from \"../../../../graphql/queries/getClientsQuery\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Valid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/Validation/Invalid/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER\";\r\nimport ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET from \"../../../../actions/CreateAccount/CreateAccountPhoneNumber/ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET\";\r\nimport \"../SignUp.css\";\r\n\r\nconst PhoneNumber = (props) => {\r\n  const dispatch = useDispatch();\r\n  // Phone Number States\r\n  const createAccountPhoneNumber = useSelector(\r\n    (state) => state.createAccountPhoneNumber.create_account_phone_number\r\n  );\r\n  const createAccountPhoneNumberValid = useSelector(\r\n    (state) =>\r\n      state.createAccountPhoneNumberValid.create_account_phone_number_valid\r\n  );\r\n  const createAccountPhoneNumberInvalid = useSelector(\r\n    (state) =>\r\n      state.createAccountPhoneNumberInvalid.create_account_phone_number_invalid\r\n  );\r\n  const facebookCompleteRegistration = useSelector(\r\n    (state) =>\r\n      state.facebookCompleteRegistration.facebook_complete_registration_active\r\n  );\r\n  const createAccountFirstName = useSelector(\r\n    (state) => state.createAccountFirstName.create_account_first_name\r\n  );\r\n  const createAccountLastName = useSelector(\r\n    (state) => state.createAccountLastName.create_account_last_name\r\n  );\r\n  const createAccountEmailValid = useSelector(\r\n    (state) => state.createAccountEmailValid.create_account_email_valid\r\n  );\r\n\r\n  const [\r\n    phoneNumberAlreadyRegistered,\r\n    changePhoneNumberAlreadyRegistered,\r\n  ] = useState(false);\r\n\r\n  // Regular Expression for Phone Number Validation - allows only phone numbers in the format (xxx) xxx - xxx, with x values being digits\r\n  const phoneNumberReg = /^(\\(\\d\\d\\d\\))+\\s+(\\d\\d\\d)+\\s+(-)+\\s+(\\d\\d\\d\\d)$/g;\r\n\r\n  // Regular Expression for Autocompleted Phone Numbers - allows phone numbers in the format 1xxxxxxxxxx, with x values being digits and the leading 1 country code being optional.\r\n  const phoneNumberAutocompleteReg = /^(1*\\d{10})$/g;\r\n\r\n  const { data } = useQuery(getClientsQuery, {\r\n    fetchPolicy: \"no-cache\",\r\n  });\r\n\r\n  const validatePhoneNumber = useCallback(\r\n    (number) => {\r\n      const validPhoneNumber = phoneNumberReg.test(number);\r\n      const validPhoneAutocomplete = phoneNumberAutocompleteReg.test(number);\r\n\r\n      if (createAccountPhoneNumber) {\r\n        if (data) {\r\n          for (let i = 0; i < data.clients.length; i++) {\r\n            if (\r\n              data.clients[i].phoneNumber === createAccountPhoneNumber &&\r\n              (data.clients[i].password !== null ||\r\n                data.clients[i].tokenCount > 0)\r\n            ) {\r\n              changePhoneNumberAlreadyRegistered(true);\r\n              dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n              dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!phoneNumberAlreadyRegistered) {\r\n        if (validPhoneNumber || validPhoneAutocomplete) {\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_VALID());\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());\r\n        } else {\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n          dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\r\n        }\r\n      } else {\r\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_INVALID());\r\n      }\r\n    },\r\n    [\r\n      data,\r\n      dispatch,\r\n      phoneNumberAlreadyRegistered,\r\n      phoneNumberAutocompleteReg,\r\n      phoneNumberReg,\r\n      createAccountPhoneNumber,\r\n    ]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (createAccountPhoneNumber.length === 16) {\r\n      validatePhoneNumber(createAccountPhoneNumber);\r\n    }\r\n  }, [\r\n    validatePhoneNumber,\r\n    createAccountPhoneNumber,\r\n    dispatch,\r\n    phoneNumberAlreadyRegistered,\r\n    phoneNumberAutocompleteReg,\r\n    phoneNumberReg,\r\n  ]);\r\n\r\n  const handlePhoneNumber = (e) => {\r\n    validatePhoneNumber(e.currentTarget.value);\r\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));\r\n  };\r\n\r\n  const phoneNumberTyping = (e) => {\r\n    let currentTyping = e.currentTarget.value;\r\n\r\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_RESET());\r\n\r\n    if (createAccountPhoneNumber.length !== 15) {\r\n      if (createAccountPhoneNumberValid) {\r\n        dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_VALID());\r\n      }\r\n    }\r\n\r\n    if (phoneNumberAlreadyRegistered) {\r\n      changePhoneNumberAlreadyRegistered(false);\r\n    }\r\n    if (createAccountPhoneNumberInvalid) {\r\n      dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER_NOT_INVALID());\r\n    }\r\n\r\n    dispatch(ACTION_CREATE_ACCOUNT_PHONE_NUMBER(e.currentTarget.value));\r\n\r\n    // Formatting for US Phone Numbers\r\n    if (currentTyping.length === 3) {\r\n      currentTyping = currentTyping.split(\"\");\r\n      currentTyping.unshift(\"(\");\r\n      currentTyping.push(\") \");\r\n\r\n      currentTyping = currentTyping.join(\"\");\r\n    } else {\r\n      if (currentTyping.length === 4) {\r\n        if (\r\n          currentTyping.indexOf(\"(\") === 0 &&\r\n          currentTyping.indexOf(\")\") < 0\r\n        ) {\r\n          currentTyping = currentTyping.split(\"\");\r\n          currentTyping.splice(currentTyping.indexOf(\"(\"), 1);\r\n\r\n          currentTyping = currentTyping.join(\"\");\r\n        } else {\r\n          if (\r\n            currentTyping.indexOf(\"(\") < 0 &&\r\n            currentTyping.indexOf(\")\") < 0\r\n          ) {\r\n            currentTyping = currentTyping.split(\"\");\r\n            currentTyping.unshift(\"(\");\r\n            currentTyping.splice(4, 0, \") \");\r\n\r\n            currentTyping = currentTyping.join(\"\");\r\n          }\r\n        }\r\n      } else {\r\n        if (currentTyping.length === 6) {\r\n          if (currentTyping.indexOf(\" \") < 0) {\r\n            currentTyping = currentTyping.split(\"\");\r\n            currentTyping.splice(5, 0, \" \");\r\n\r\n            currentTyping = currentTyping.join(\"\");\r\n          }\r\n        } else {\r\n          if (currentTyping.length === 10) {\r\n            if (currentTyping.lastIndexOf(\" \") === 5) {\r\n              currentTyping = currentTyping.split(\"\");\r\n              currentTyping.splice(9, 0, \" - \");\r\n\r\n              currentTyping = currentTyping.join(\"\");\r\n            } else {\r\n              if (currentTyping.indexOf(\"(\") < 0) {\r\n                currentTyping = currentTyping.split(\"\");\r\n                currentTyping.unshift(\"(\");\r\n                currentTyping.splice(4, 0, \") \");\r\n                currentTyping.splice(8, 0, \" - \");\r\n                currentTyping = currentTyping.join(\"\");\r\n              }\r\n            }\r\n          } else {\r\n            if (currentTyping.length === 11) {\r\n              if (\r\n                currentTyping.lastIndexOf(\" \") === 9 &&\r\n                currentTyping.indexOf(\"-\") < 0\r\n              ) {\r\n                currentTyping = currentTyping.split(\"\");\r\n                currentTyping.splice(9, 0, \" -\");\r\n\r\n                currentTyping = currentTyping.join(\"\");\r\n              }\r\n            } else {\r\n              if (currentTyping.length === 12) {\r\n                if (currentTyping.lastIndexOf(\" \") === 9) {\r\n                  currentTyping = currentTyping.split(\"\");\r\n                  currentTyping.splice(11, 0, \" \");\r\n\r\n                  currentTyping = currentTyping.join(\"\");\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    e.currentTarget.value = currentTyping;\r\n  };\r\n\r\n  return (\r\n    <FormGroup className=\"sign_up_individual_form_field\">\r\n      <Label for=\"createAccountPhoneNumber\">\r\n        <div className=\"required_label\">\r\n          Phone Number\r\n          <p className=\"required_label red_asterisk\">\r\n            {facebookCompleteRegistration ? null : \"* \"}\r\n          </p>\r\n        </div>\r\n      </Label>\r\n      <Input\r\n        type=\"tel\"\r\n        name=\"createAccountPhoneNumber\"\r\n        maxLength={16}\r\n        defaultValue={createAccountPhoneNumber}\r\n        placeholder=\"Phone number\"\r\n        onBlur={handlePhoneNumber}\r\n        onChange={phoneNumberTyping}\r\n        className=\"input_field_sign_up\"\r\n        onKeyDown={(e) => {\r\n          if (e.key === \"Enter\") {\r\n            if (\r\n              createAccountFirstName &&\r\n              createAccountLastName &&\r\n              createAccountEmailValid &&\r\n              createAccountPhoneNumberValid\r\n            ) {\r\n              props.changeCreateAccountStepTwoTriggered(true);\r\n            }\r\n          }\r\n        }}\r\n        invalid={\r\n          createAccountPhoneNumber === \"\"\r\n            ? false\r\n            : createAccountPhoneNumberInvalid\r\n            ? true\r\n            : false\r\n        }\r\n        valid={\r\n          createAccountPhoneNumber === \"\"\r\n            ? false\r\n            : createAccountPhoneNumberValid\r\n            ? true\r\n            : false\r\n        }\r\n      />\r\n      {phoneNumberAlreadyRegistered ? (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          This phone number has already been registered.\r\n        </FormFeedback>\r\n      ) : (\r\n        <FormFeedback className=\"invalid_message_container\" invalid=\"true\">\r\n          Please enter a valid phone number.\r\n        </FormFeedback>\r\n      )}\r\n    </FormGroup>\r\n  );\r\n};\r\n\r\nexport default PhoneNumber;\r\n"]},"metadata":{},"sourceType":"module"}