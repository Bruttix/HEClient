{"ast":null,"code":"import _slicedToArray from \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\WebProjects\\\\Barbershops\\\\HighEnd\\\\Client\\\\src\\\\components\\\\add_ons\\\\Microdermabrasion\\\\Microdermabrasion.js\";\nimport React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Spring, animated, Keyframes } from \"react-spring/renderprops\";\nimport { InView } from \"react-intersection-observer\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faSquare, faClock, faTag } from \"@fortawesome/free-solid-svg-icons\";\nimport ACTION_MICRODERMABRASION_TOGGLE from \"../../../actions/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_TOGGLE\";\nimport ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET from \"../../../actions/AddOns/ExtraExtractions/ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET\";\nimport ACTION_HYDRO_JELLY_TOGGLE_RESET from \"../../../actions/AddOns/HydroJellyMask/ACTION_HYDRO_JELLY_TOGGLE_RESET\";\nimport ACTION_LED_THERAPY_TOGGLE_RESET from \"../../../actions/AddOns/LEDTherapy/ACTION_LED_THERAPY_TOGGLE_RESET\";\nimport ACTION_MICROCURRENT_TOGGLE_RESET from \"../../../actions/AddOns/Microcurrent/ACTION_MICROCURRENT_TOGGLE_RESET\";\nimport ACTION_MICRODERMABRASION_TOGGLE_RESET from \"../../../actions/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_TOGGLE_RESET\";\nimport ACTION_DERMAROLLING_TOGGLE_RESET from \"../../../actions/AddOns/Dermarolling/ACTION_DERMAROLLING_TOGGLE_RESET\";\nimport ACTION_NANONEEDLING_TOGGLE_RESET from \"../../../actions/AddOns/Nanoneedling/ACTION_NANONEEDLING_TOGGLE_RESET\";\nimport ACTION_GUASHA_TOGGLE_RESET from \"../../../actions/AddOns/GuaSha/ACTION_GUASHA_TOGGLE_RESET\";\nimport ACTION_BEARD_TOGGLE_RESET from \"../../../actions/AddOns/Beard/ACTION_BEARD_TOGGLE_RESET\";\nimport ACTION_MICRODERMABRASION_IN_CART from \"../../../actions/InCart/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_IN_CART\";\nimport ACTION_MICRODERMABRASION_NOT_IN_CART from \"../../../actions/InCart/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_NOT_IN_CART\";\nimport ACTION_NAVBAR_IS_VISIBLE from \"../../../actions/NavbarIsVisible/ACTION_NAVBAR_IS_VISIBLE\";\nimport ACTION_INCREMENT_COUNTER from \"../../../actions/Counter/ACTION_INCREMENT_COUNTER\";\nimport ACTION_DECREMENT_COUNTER from \"../../../actions/Counter/ACTION_DECREMENT_COUNTER\";\nimport { toast } from \"react-toastify\";\nimport MicrodermabrasionNotification from \"./MicrodermabrasionNotification\";\nimport MicrodermabrasionRemovedNotification from \"./MicrodermabrasionRemovedNotification\";\nimport AddOnsChemPeelErrorNotification from \"../AddOnsChemPeelErrorNotification\";\nimport AddOnsMicroneedlingErrorNotification from \"../AddOnsMicroneedlingErrorNotification\";\nimport \"./Microdermabrasion.css\";\nimport \"../../treatments/card_styling.css\";\n\nconst Microdermabrasion = props => {\n  const extraExtractionsToggle = useSelector(state => state.extraExtractionsToggle.toggle);\n  const hydroJellyToggle = useSelector(state => state.hydroJellyToggle.toggle);\n  const ledTherapyToggle = useSelector(state => state.ledTherapyToggle.toggle);\n  const microcurrentToggle = useSelector(state => state.microcurrentToggle.toggle);\n  const microdermabrasionToggle = useSelector(state => state.microdermabrasionToggle.toggle);\n  const dermarollingToggle = useSelector(state => state.dermarollingToggle.toggle);\n  const nanoneedlingToggle = useSelector(state => state.nanoneedlingToggle.toggle);\n  const guashaToggle = useSelector(state => state.guashaToggle.toggle);\n  const beardToggle = useSelector(state => state.beardToggle.toggle); // In Cart states\n\n  const microdermabrasionInCart = useSelector(state => state.microdermabrasionInCart.in_cart);\n  const microneedleInCart = useSelector(state => state.microneedleInCart.in_cart);\n  const chemicalPeelInCart = useSelector(state => state.chemicalPeelInCart.in_cart);\n  const saltCaveInCart = useSelector(state => state.saltCaveInCart.in_cart);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        cartClicked = _useState2[0],\n        changeCartClicked = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        bookNowButtonHovered = _useState4[0],\n        changeBookNowButtonHovered = _useState4[1];\n\n  const dispatch = useDispatch();\n\n  const handleToggle = () => {\n    if (!microdermabrasionToggle) {\n      dispatch(ACTION_MICRODERMABRASION_TOGGLE());\n\n      if (extraExtractionsToggle) {\n        dispatch(ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET());\n      }\n\n      if (hydroJellyToggle) {\n        dispatch(ACTION_HYDRO_JELLY_TOGGLE_RESET());\n      }\n\n      if (ledTherapyToggle) {\n        dispatch(ACTION_LED_THERAPY_TOGGLE_RESET());\n      }\n\n      if (microcurrentToggle) {\n        dispatch(ACTION_MICROCURRENT_TOGGLE_RESET());\n      }\n\n      if (dermarollingToggle) {\n        dispatch(ACTION_DERMAROLLING_TOGGLE_RESET());\n      }\n\n      if (nanoneedlingToggle) {\n        dispatch(ACTION_NANONEEDLING_TOGGLE_RESET());\n      }\n\n      if (guashaToggle) {\n        dispatch(ACTION_GUASHA_TOGGLE_RESET());\n      }\n\n      if (beardToggle) {\n        dispatch(ACTION_BEARD_TOGGLE_RESET());\n      }\n    } else {\n      dispatch(ACTION_MICRODERMABRASION_TOGGLE_RESET());\n    }\n  };\n\n  const cardDescriptionHandler = () => {\n    if (microdermabrasionToggle) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_description_paragraph_toggle\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_description_icon_wrapper_container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_description_paragraph_icon_wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"card_description_icon\",\n        icon: faClock,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card_description_paragraph_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }\n      }, \"Duration\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_description_paragraph_value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }\n      }, \"15 minutes\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_description_paragraph_icon_wrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"card_description_icon\",\n        icon: faTag,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card_description_paragraph_title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 17\n        }\n      }, \"Price\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card_description_paragraph_value\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 17\n        }\n      }, \"$20\")))));\n    } else {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        className: \"card_description_paragraph\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 9\n        }\n      }, \"This method of exfoliation buffs away the skin's surface layer while vacuuming up dead cells, oil, and other debris trapped in pores.\");\n    }\n  };\n\n  const PlusBounce = Keyframes.Spring({\n    plusBounce: [{\n      marginTop: \"0px\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 100\n      }\n    }, {\n      marginTop: \"-9px\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 300\n      }\n    }, {\n      marginTop: \"0px\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 200\n      }\n    }, {\n      marginTop: \"-6\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 200\n      }\n    }, {\n      marginTop: \"0px\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 200\n      }\n    }, {\n      marginTop: \"-4px\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 200\n      }\n    }, {\n      marginTop: \"0px\",\n      color: \"rgb(155, 98, 107)\",\n      config: {\n        duration: 200\n      }\n    }]\n  });\n\n  const checkMark = () => {\n    return /*#__PURE__*/React.createElement(Spring, {\n      from: {\n        x: 100\n      },\n      to: {\n        x: 0\n      },\n      config: {\n        duration: 2000\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }\n    }, styles => /*#__PURE__*/React.createElement(\"svg\", {\n      width: props.currentScreenSize === \"\" ? props.initialScreenSize >= 1800 ? \"2rem\" : props.initialScreenSize >= 1400 ? \"1rem\" : props.initialScreenSize >= 1200 ? \"1rem\" : \"100%\" : props.currentScreenSize >= 1800 ? \"2rem\" : props.currentScreenSize >= 1400 ? \"1rem\" : props.currentScreenSize >= 1200 ? \"1rem\" : \"100%\",\n      height: props.currentScreenSize === \"\" ? props.initialScreenSize >= 2200 ? \"2rem\" : props.initialScreenSize >= 1800 ? \"1.3rem\" : props.initialScreenSize >= 1600 ? \"1.3rem\" : props.initialScreenSize >= 1200 ? \"1.1rem\" : props.initialScreenSize >= 360 ? \"2rem\" : \"1rem\" : props.currentScreenSize >= 2200 ? \"2rem\" : props.currentScreenSize >= 1800 ? \"1.3rem\" : props.currentScreenSize >= 1600 ? \"1.3rem\" : props.currentScreenSize >= 1200 ? \"1.1rem\" : props.currentScreenSize >= 360 ? \"2rem\" : \"1rem\",\n      style: {\n        marginTop: props.currentScreenSize === \"\" ? props.initialScreenSize >= 2200 ? \"-0.2rem\" : props.initialScreenSize >= 1800 ? \"0\" : props.initialScreenSize >= 1600 ? \"-0.2rem\" : props.initialScreenSize >= 1200 ? \"-0.1rem\" : props.initialScreenSize >= 360 ? \"-0.5rem\" : \"0rem\" : props.currentScreenSize >= 2200 ? \"-0.2rem\" : props.currentScreenSize >= 1800 ? \"0\" : props.currentScreenSize >= 1600 ? \"-0.2rem\" : props.currentScreenSize >= 1200 ? \"-0.1rem\" : props.currentScreenSize >= 360 ? \"-0.5rem\" : \"0rem\",\n        display: microdermabrasionInCart ? \"block\" : \"none\"\n      },\n      viewBox: \"0 0 13.229 13.229\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M2.851 7.56l2.45 2.482 5.36-6.958\",\n      fill: \"none\",\n      stroke: \"#000\",\n      strokeDasharray: \"100\",\n      strokeDashoffset: cartClicked ? microdermabrasionInCart ? \"\".concat(styles.x) : 0 : 0,\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const chemPeelAddOnErrorToastId = \"chem_peel_add_on_error\";\n  const microneedlingAddOnErrorToastId = \"microneedling_add_on_error\";\n\n  const addToCart = () => {\n    if (chemicalPeelInCart || saltCaveInCart) {\n      if (!toast.isActive(chemPeelAddOnErrorToastId)) {\n        toast.dismiss();\n        toast( /*#__PURE__*/React.createElement(AddOnsChemPeelErrorNotification, {\n          currentScreenSize: props.currentScreenSize,\n          initialScreenSize: props.initialScreenSize,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }\n        }), {\n          className: \"toast_error_container\",\n          toastId: chemPeelAddOnErrorToastId\n        });\n      }\n    } else {\n      if (microneedleInCart) {\n        if (!toast.isActive(microneedlingAddOnErrorToastId)) {\n          toast.dismiss();\n          toast( /*#__PURE__*/React.createElement(AddOnsMicroneedlingErrorNotification, {\n            currentScreenSize: props.currentScreenSize,\n            initialScreenSize: props.initialScreenSize,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 13\n            }\n          }), {\n            className: \"toast_error_container\",\n            toastId: microneedlingAddOnErrorToastId\n          });\n        }\n      } else {\n        if (microdermabrasionInCart) {\n          toast.dismiss();\n          dispatch(ACTION_MICRODERMABRASION_NOT_IN_CART());\n          dispatch(ACTION_DECREMENT_COUNTER());\n          dispatch(ACTION_NAVBAR_IS_VISIBLE());\n          props.resetAllCartStatesExceptTreatments();\n          toast( /*#__PURE__*/React.createElement(MicrodermabrasionRemovedNotification, {\n            currentScreenSize: props.currentScreenSize,\n            initialScreenSize: props.initialScreenSize,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 13\n            }\n          }), {\n            className: \"toast_removed_container\"\n          });\n        } else {\n          toast.dismiss();\n          dispatch(ACTION_MICRODERMABRASION_IN_CART());\n          dispatch(ACTION_INCREMENT_COUNTER());\n          dispatch(ACTION_NAVBAR_IS_VISIBLE());\n          changeCartClicked(true);\n          setTimeout(() => changeCartClicked(false), 200);\n          props.resetAllCartStatesExceptTreatments();\n          toast( /*#__PURE__*/React.createElement(MicrodermabrasionNotification, {\n            currentScreenSize: props.currentScreenSize,\n            initialScreenSize: props.initialScreenSize,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 13\n            }\n          }));\n        }\n      }\n    }\n  };\n\n  const addOnBounce = () => {\n    return /*#__PURE__*/React.createElement(PlusBounce, {\n      state: \"plusBounce\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 7\n      }\n    }, styles => /*#__PURE__*/React.createElement(\"span\", {\n      className: \"fa-layers fa-fw\",\n      style: microdermabrasionToggle ? microdermabrasionInCart ? {\n        position: \"relative\"\n      } : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? {\n        position: \"relative\"\n      } : styles : {\n        position: \"relative\"\n      },\n      onClick: () => addToCart(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      color: microdermabrasionToggle ? microdermabrasionInCart ? \"rgb(119, 221, 119, 0.6)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(211, 211, 211)\" : \"rgba(0, 129, 177, 0.4)\" : microdermabrasionInCart ? \"rgba(119, 221, 119, 0.6)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(211, 211, 211)\" : \"rgba(0, 129, 177, 0.3)\",\n      transform: !props.currentScreenSize ? props.initialScreenSize >= 360 ? \"grow-20\" : \"grow-10\" : props.currentScreenSize >= 360 ? \"grow-20\" : \"grow-10\",\n      icon: faSquare,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 13\n      }\n    }), checkMark(), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"small_screen_card_description_plus\",\n      style: {\n        display: microdermabrasionInCart ? \"none\" : \"block\"\n      },\n      color: microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(151, 151, 151)\" : \"rgb(0, 129, 177)\",\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 13\n      }\n    })));\n  };\n\n  const bigScreenBottomWrapperRender = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"big_screen_entire_bottom_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"big_screen_price_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"big_screen_card_description_icon\",\n      icon: faTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"big_screen_price\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 11\n      }\n    }, \"$20\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"big_screen_duration_wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"big_screen_card_description_icon\",\n      icon: faClock,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"big_screen_duration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 11\n      }\n    }, \"15 minutes\")));\n  };\n\n  const smallScreenBottomWrapperRender = () => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card_bottom_wrapper\",\n      style: {\n        color: microdermabrasionToggle ? \"rgb(0, 104, 152)\" : \"rgb(0, 129, 177)\",\n        transition: \"ease all 0.5s\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card_toggler\",\n      onClick: handleToggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }\n    }, microdermabrasionToggle ? \"SEE DESCRIPTION\" : \"LEARN MORE\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"card_bottom_spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 9\n      }\n    }), addOnBounce());\n  };\n\n  const dynamicScreenSizeBottomCardRender = () => {\n    if (props.currentScreenSize === \"\") {\n      if (props.initialScreenSize >= 1200) {\n        return bigScreenBottomWrapperRender();\n      } else {\n        return smallScreenBottomWrapperRender();\n      }\n    } else {\n      if (props.currentScreenSize >= 1200) {\n        return bigScreenBottomWrapperRender();\n      } else {\n        return smallScreenBottomWrapperRender();\n      }\n    }\n  };\n\n  const renderAddOnButton = () => {\n    if (microdermabrasionInCart) {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, checkMark(), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"big_screen_in_cart\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }\n      }, \"IN CART\"));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        className: \"big_screen_card_description_suitcase\",\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"p\", {\n        className: \"big_screen_card_add_on_button\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 11\n        }\n      }, \"ADD TO FACIAL\"));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(InView, {\n    threshold: 0.2,\n    triggerOnce: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 5\n    }\n  }, ({\n    inView,\n    ref\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_container\",\n    ref: ref,\n    style: {\n      display: props.microdermabrasionRendered\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 9\n    }\n  }, inView ? /*#__PURE__*/React.createElement(Spring, {\n    from: {\n      position: \"relative\",\n      opacity: 0\n    },\n    to: {\n      position: \"relative\",\n      opacity: 1\n    },\n    config: {\n      duration: 1000\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 13\n    }\n  }, styleprops => /*#__PURE__*/React.createElement(\"section\", {\n    className: \"card\",\n    style: styleprops,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_image\",\n    style: {\n      backgroundColor: microdermabrasionToggle ? \"rgba(0, 129, 177, 0.2)\" : \"rgba(211, 211, 211, 0.4)\",\n      boxShadow: microdermabrasionToggle ? \"0px -3px 3px 0px rgba(207, 207, 196, 0.7), -3px 0px 3px 0px rgba(207, 207, 196, 0.7), 0px 3px 3px 0px rgba(207, 207, 196, 0.7)\" : \"0px -1px 1px 0px rgba(207, 207, 196, 0.1)\",\n      transition: \"ease all 0.5s\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Spring, {\n    from: {\n      x: 200,\n      fill: \"#fff\"\n    },\n    to: {\n      x: 0,\n      fill: \"#000\"\n    },\n    config: {\n      duration: 2500\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 21\n    }\n  }, styles => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"big_screen_book_now_wrapper\",\n    onClick: () => addToCart(),\n    style: {\n      background: bookNowButtonHovered ? microdermabrasionInCart ? \"rgba(69, 171, 69, 0.6)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(201, 201, 201)\" : \"rgb(0, 129, 177)\" : microdermabrasionInCart ? \"rgba(119, 221, 119, 0.6)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(201, 201, 201)\" : \"transparent\",\n      border: bookNowButtonHovered ? microdermabrasionInCart ? \"1px solid rgb(69, 171, 69, 0.8)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"1px solid transparent\" : \"1px solid rgb(0, 129, 177)\" : microdermabrasionInCart ? \"1px solid rgb(69, 171, 69, 0.8)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"1px solid transparent\" : \"1px solid rgb(0, 129, 177)\",\n      color: bookNowButtonHovered ? microdermabrasionInCart ? \"rgb(0, 0, 0)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(141, 141, 141)\" : \"rgb(255, 255, 255)\" : microdermabrasionInCart ? \"rgb(0, 0, 0)\" : microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"rgb(141, 141, 141)\" : \"rgb(0, 129, 177)\",\n      cursor: microneedleInCart | chemicalPeelInCart || saltCaveInCart ? \"auto\" : \"pointer\",\n      transition: \"all 0.5s ease\"\n    },\n    onMouseEnter: () => changeBookNowButtonHovered(true),\n    onMouseLeave: () => changeBookNowButtonHovered(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 27\n    }\n  }, renderAddOnButton()), /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"100%\",\n    height: \"15rem\",\n    viewBox: \"0 0 56.356 56.356\",\n    className: \"card_svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"28\",\n    cy: \"28\",\n    r: props.currentScreenSize === \"\" ? props.initialScreenSize >= 1200 ? \"22.25\" : \"26\" : props.currentScreenSize >= 1200 ? \"22.25\" : \"26\",\n    stroke: microdermabrasionToggle ? \"rgb(25, 154, 202)\" : \"rgba(191, 191, 191)\",\n    strokeWidth: \"0.5\",\n    fill: \"white\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(12 11)\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(animated.path, {\n    className: \"microdermabrasion_icon_path\",\n    stroke: \"#000\",\n    strokeDasharray: \"200\",\n    strokeDashoffset: \"\".concat(styles.x),\n    fill: \"\".concat(styles.fill),\n    strokeWidth: \"0.3\",\n    d: \"M38.916 55.08c-.695-.143-1.712-.623-1.783-.841-.18-.553.322-.852.923-.55 1.242.627 2.39.585 3.34-.12.596-.444 1-.45 1.154-.017.088.245.06.328-.21.601-.74.753-2.265 1.166-3.424.927zm-13.048-.27c-1.683-.223-2.894-.593-4.436-1.356-3.19-1.577-6.227-4.538-8.422-8.211-.221-.37-.6-.834-.842-1.03-1.818-1.477-4.085-3.941-5.34-5.806-2.612-3.879-3.93-8.018-4.054-12.736-.089-3.364.253-5.81 1.2-8.595C7.387 7.052 17.86 1.106 29.855 2.384c5.04.537 9.801 2.71 13.244 6.045 4.03 3.904 6.323 9.07 6.863 15.466.07.835.137 1.53.147 1.545.011.015.333-.036.716-.114 1.022-.21 1.613-.686 2.166-1.75.468-.9.572-1.793.572-4.901v-2.836l.266-.17c.247-.157.285-.157.54.006l.275.175-.044 3.228c-.036 2.613-.079 3.343-.223 3.832-.562 1.905-1.834 3.227-3.303 3.431-.987.138-1.02.168-1.02.937 0 1.595-.353 3.63-1.019 5.865l-.36 1.207.235.502c.217.464.237.692.275 3.028.061 3.739-.165 5.327-1.002 7.027-.405.823-1.387 1.933-1.99 2.25-.387.202-.417.266-.767 1.631-.592 2.315-3.027 4.117-5.56 4.117-1.54 0-2.79-.493-4.012-1.583l-.696-.621-.445.417c-1.635 1.532-4.168 2.968-6.073 3.443-.792.197-2.207.324-2.771.25zm2.873-1.723c1.695-.583 3.535-1.682 4.925-2.942l.782-.709-.243-.673c-.328-.908-.408-2.776-.16-3.736.68-2.64 2.782-4.45 5.464-4.708l.753-.072.16-.687c.266-1.142.577-2.988.753-4.465.204-1.723.36-4.067.277-4.159-.035-.038-.589-.19-1.232-.34-3.05-.71-6.554-2.19-8.66-3.655-2.086-1.451-4.133-3.795-4.95-5.666-.162-.372-.324-.677-.36-.677-.035 0-.183.22-.329.49-.431.796-1.414 2.023-2.305 2.878-2.42 2.322-5.947 4.29-10.872 6.067l-1.525.55.064 1.557c.144 3.51 1.337 9.268 2.31 11.15.129.248.352.684.497.97.768 1.51 2.498 3.699 4.1 5.186 2.156 2 4.485 3.326 6.718 3.825 1.013.227 2.905.136 3.832-.183zm3.137-6.699c-.162-.295-.133-1.739.049-2.42.304-1.136 1.255-2.614 1.887-2.932.277-.14.336-.139.567.009.38.243.318.506-.27 1.14-.901.968-1.28 1.949-1.28 3.315 0 .515-.049.888-.127.965-.202.197-.7.15-.826-.076zm-2.018-1.347c-.548-.534-.061-2.507.848-3.438.423-.433.634-.489.893-.236.241.235.206.539-.103.897-.486.562-.708 1.118-.782 1.957-.078.881-.07.862-.404.962-.163.049-.3.006-.452-.142zm-12.726-6.539c-1.75-.285-2.555-1.072-1.717-1.678l.286-.208.867.28c1.411.454 3.186.364 4.765-.242.305-.117.665-.213.8-.213.523 0 .797.752.42 1.157-.209.225-1.858.758-2.815.909a9.059 9.059 0 01-2.606-.005zm16.495.039c-1.125-.152-2.757-.693-3.018-1-.314-.368-.032-1.1.424-1.1.105 0 .635.147 1.18.327.825.274 1.197.336 2.245.376 1.155.044 1.328.025 2.153-.236.845-.268.91-.275 1.16-.116.32.205.436.586.27.888-.336.61-2.765 1.084-4.414.861zm8.137 12.899c.704-.329 1.88-1.187 1.771-1.293-.022-.022-.228.024-.456.102-2.108.72-4.405-.256-5.391-2.291-.3-.62-.337-.799-.339-1.628-.001-1.11.208-1.788.783-2.533.83-1.076 1.887-1.633 3.298-1.738l.786-.059-.467-.235c-2.15-1.083-5.109.038-6.25 2.368-.419.853-.559 1.492-.558 2.536.003 2.311 1.425 4.339 3.513 5.01.443.142.841.183 1.555.161.848-.026 1.054-.073 1.755-.4zm1.373-2.392c.798-.391 1.265-.922 1.6-1.817.192-.513.29-.631.695-.84 1.046-.54 1.922-1.848 2.4-3.582.2-.725.235-1.187.28-3.682.059-3.348-.007-3.858-.555-4.327-1.037-.886-2.525-.635-3.167.533-.223.406-.242.602-.3 3.023-.07 2.995-.13 3.25-.958 4.133l-.519.553-.931.046c-1.059.052-1.622.272-2.297.897-1.495 1.383-1.29 3.742.43 4.919.973.666 2.153.717 3.322.144zm-32.06-8.839c-.503-1.998-.97-4.822-1.184-7.152-.107-1.165-.229-2.001-.291-2.001-.06 0-.442.093-.851.207-.937.26-.966.26-1.281-.047-.593-.578-.24-1.006 1.121-1.356a71.459 71.459 0 001.182-.311c.12-.036.226-.316.35-.925.537-2.633 1.796-5.149 3.616-7.223 2.112-2.407 5.509-4.393 9.177-5.367.898-.238 1.02-.353.688-.646-.344-.303-.971-.49-2.832-.848-1.988-.383-2.697-.61-3.429-1.1-1.455-.975-1.95-3.028-1.126-4.66.407-.805 1.232-1.647 2.048-2.092.636-.346 2.784-2.345 2.595-2.415-.064-.024-.686.124-1.382.328-7.573 2.221-12.73 7.297-14.603 14.373-.87 3.284-.966 7.204-.261 10.632.848 4.125 3.12 8.345 6.09 11.313.384.384.705.699.714.699.008 0-.145-.634-.34-1.409zm31.96-1.987l.052-2.662.301-.596c.191-.38.508-.77.868-1.074l.568-.477.035-1.172c.035-1.14.044-1.181.355-1.499.175-.18.45-.393.611-.475.215-.11.292-.227.292-.446 0-.526.416-1.627.858-2.272.264-.384.677-.801 1.064-1.072l.633-.443-.06-.984c-.282-4.66-1.378-8.468-3.362-11.69-3.425-5.56-9.033-8.936-16.03-9.65-1.173-.12-5.051-.073-5.8.069-.23.044-.423.208-.691.59-.66.939-2.68 2.89-3.44 3.323-1.884 1.074-2.55 2.625-1.706 3.974.24.384.455.565.976.822.659.326 1.065.43 3.372.861.643.12 1.448.34 1.788.49.672.293 1.296.904 1.402 1.374.062.276.097.29.882.355 5.278.438 9.289 2.001 12.232 4.767 1.35 1.268 2.23 2.437 3.042 4.042.799 1.578 1.151 2.578 1.462 4.142.124.627.237 1.154.25 1.172.013.018.375.082.805.143.9.126 1.153.292 1.153.756 0 .567-.284.714-1.22.632-.788-.07-.8-.067-.8.172 0 1.759-.865 8.09-1.234 9.026-.071.181 1.023.699 1.181.558.063-.056.128-1.183.16-2.756zm4.04-5.658c0-.423-.046-.885-.101-1.027-.133-.34-.48-.438-.809-.228-.242.154-.26.227-.26 1.038v.872l.451.04c.249.021.512.047.585.057.096.013.133-.195.133-.752zm1.319-2.903c.086-.571.179-1.336.206-1.698l.05-.66-.407.388c-.482.458-.973 1.465-1.04 2.129-.04.419-.015.492.23.648.15.097.355.327.454.511l.18.336.085-.308c.047-.17.156-.775.242-1.346zm-6.954-.37c0-.325-.375-1.788-.657-2.567-1.294-3.572-3.883-6.35-7.437-7.982-1.686-.773-4.047-1.422-5.897-1.62l-.65-.069.15.71c.615 2.945 2.016 5.266 4.322 7.169 2.137 1.761 4.749 3.053 8.095 4.005 1.644.467 2.073.54 2.073.354zm-26.737-1.51c6.58-2.724 10.755-6.644 10.83-10.172l.014-.659-.532.062c-1.977.227-5.226 1.473-7.207 2.764-1.698 1.107-3.238 2.62-4.296 4.223-.787 1.192-1.716 3.423-1.905 4.577l-.068.414.89-.319c.49-.175 1.514-.575 2.274-.89z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 611,\n      columnNumber: 31\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_border_right\",\n    style: {\n      borderRight: microdermabrasionToggle ? \"1px solid rgba(25, 154, 202, 0.4)\" : \"1px solid rgb(211, 211, 211)\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_description\",\n    style: {\n      backgroundColor: microdermabrasionToggle ? \"rgba(222, 222, 222, 0.4)\" : \"rgba(235, 235, 235, 0.1)\",\n      boxShadow: microdermabrasionToggle ? \"0px -3px 3px 0px rgba(207, 207, 196, 0.7), 3px 0px 3px 0px rgba(207, 207, 196, 0.7), 0px 4px 3px 0px rgba(207, 207, 196, 0.7)\" : \"0px -1px 1px 0px rgba(207, 207, 196, 0.1)\",\n      transition: \"ease all 0.5s\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 635,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card_description_inner_wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 647,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    style: {\n      fontWeight: 400\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 648,\n      columnNumber: 23\n    }\n  }, \"MICRO-DERMABRASION\"), cardDescriptionHandler(), dynamicScreenSizeBottomCardRender())))) : null));\n};\n\nexport default Microdermabrasion;","map":{"version":3,"sources":["D:/WebProjects/Barbershops/HighEnd/Client/src/components/add_ons/Microdermabrasion/Microdermabrasion.js"],"names":["React","useState","useSelector","useDispatch","Spring","animated","Keyframes","InView","FontAwesomeIcon","faPlus","faSquare","faClock","faTag","ACTION_MICRODERMABRASION_TOGGLE","ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET","ACTION_HYDRO_JELLY_TOGGLE_RESET","ACTION_LED_THERAPY_TOGGLE_RESET","ACTION_MICROCURRENT_TOGGLE_RESET","ACTION_MICRODERMABRASION_TOGGLE_RESET","ACTION_DERMAROLLING_TOGGLE_RESET","ACTION_NANONEEDLING_TOGGLE_RESET","ACTION_GUASHA_TOGGLE_RESET","ACTION_BEARD_TOGGLE_RESET","ACTION_MICRODERMABRASION_IN_CART","ACTION_MICRODERMABRASION_NOT_IN_CART","ACTION_NAVBAR_IS_VISIBLE","ACTION_INCREMENT_COUNTER","ACTION_DECREMENT_COUNTER","toast","MicrodermabrasionNotification","MicrodermabrasionRemovedNotification","AddOnsChemPeelErrorNotification","AddOnsMicroneedlingErrorNotification","Microdermabrasion","props","extraExtractionsToggle","state","toggle","hydroJellyToggle","ledTherapyToggle","microcurrentToggle","microdermabrasionToggle","dermarollingToggle","nanoneedlingToggle","guashaToggle","beardToggle","microdermabrasionInCart","in_cart","microneedleInCart","chemicalPeelInCart","saltCaveInCart","cartClicked","changeCartClicked","bookNowButtonHovered","changeBookNowButtonHovered","dispatch","handleToggle","cardDescriptionHandler","PlusBounce","plusBounce","marginTop","color","config","duration","checkMark","x","styles","currentScreenSize","initialScreenSize","display","chemPeelAddOnErrorToastId","microneedlingAddOnErrorToastId","addToCart","isActive","dismiss","className","toastId","resetAllCartStatesExceptTreatments","setTimeout","addOnBounce","position","bigScreenBottomWrapperRender","smallScreenBottomWrapperRender","transition","dynamicScreenSizeBottomCardRender","renderAddOnButton","inView","ref","microdermabrasionRendered","opacity","styleprops","backgroundColor","boxShadow","fill","background","border","cursor","borderRight","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Spring, animated, Keyframes } from \"react-spring/renderprops\";\r\nimport { InView } from \"react-intersection-observer\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faPlus,\r\n  faSquare,\r\n  faClock,\r\n  faTag,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ACTION_MICRODERMABRASION_TOGGLE from \"../../../actions/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_TOGGLE\";\r\nimport ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET from \"../../../actions/AddOns/ExtraExtractions/ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET\";\r\nimport ACTION_HYDRO_JELLY_TOGGLE_RESET from \"../../../actions/AddOns/HydroJellyMask/ACTION_HYDRO_JELLY_TOGGLE_RESET\";\r\nimport ACTION_LED_THERAPY_TOGGLE_RESET from \"../../../actions/AddOns/LEDTherapy/ACTION_LED_THERAPY_TOGGLE_RESET\";\r\nimport ACTION_MICROCURRENT_TOGGLE_RESET from \"../../../actions/AddOns/Microcurrent/ACTION_MICROCURRENT_TOGGLE_RESET\";\r\nimport ACTION_MICRODERMABRASION_TOGGLE_RESET from \"../../../actions/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_TOGGLE_RESET\";\r\nimport ACTION_DERMAROLLING_TOGGLE_RESET from \"../../../actions/AddOns/Dermarolling/ACTION_DERMAROLLING_TOGGLE_RESET\";\r\nimport ACTION_NANONEEDLING_TOGGLE_RESET from \"../../../actions/AddOns/Nanoneedling/ACTION_NANONEEDLING_TOGGLE_RESET\";\r\nimport ACTION_GUASHA_TOGGLE_RESET from \"../../../actions/AddOns/GuaSha/ACTION_GUASHA_TOGGLE_RESET\";\r\nimport ACTION_BEARD_TOGGLE_RESET from \"../../../actions/AddOns/Beard/ACTION_BEARD_TOGGLE_RESET\";\r\nimport ACTION_MICRODERMABRASION_IN_CART from \"../../../actions/InCart/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_IN_CART\";\r\nimport ACTION_MICRODERMABRASION_NOT_IN_CART from \"../../../actions/InCart/AddOns/Microdermabrasion/ACTION_MICRODERMABRASION_NOT_IN_CART\";\r\nimport ACTION_NAVBAR_IS_VISIBLE from \"../../../actions/NavbarIsVisible/ACTION_NAVBAR_IS_VISIBLE\";\r\nimport ACTION_INCREMENT_COUNTER from \"../../../actions/Counter/ACTION_INCREMENT_COUNTER\";\r\nimport ACTION_DECREMENT_COUNTER from \"../../../actions/Counter/ACTION_DECREMENT_COUNTER\";\r\nimport { toast } from \"react-toastify\";\r\nimport MicrodermabrasionNotification from \"./MicrodermabrasionNotification\";\r\nimport MicrodermabrasionRemovedNotification from \"./MicrodermabrasionRemovedNotification\";\r\nimport AddOnsChemPeelErrorNotification from \"../AddOnsChemPeelErrorNotification\";\r\nimport AddOnsMicroneedlingErrorNotification from \"../AddOnsMicroneedlingErrorNotification\";\r\nimport \"./Microdermabrasion.css\";\r\nimport \"../../treatments/card_styling.css\";\r\n\r\nconst Microdermabrasion = (props) => {\r\n  const extraExtractionsToggle = useSelector(\r\n    (state) => state.extraExtractionsToggle.toggle\r\n  );\r\n  const hydroJellyToggle = useSelector(\r\n    (state) => state.hydroJellyToggle.toggle\r\n  );\r\n  const ledTherapyToggle = useSelector(\r\n    (state) => state.ledTherapyToggle.toggle\r\n  );\r\n  const microcurrentToggle = useSelector(\r\n    (state) => state.microcurrentToggle.toggle\r\n  );\r\n  const microdermabrasionToggle = useSelector(\r\n    (state) => state.microdermabrasionToggle.toggle\r\n  );\r\n  const dermarollingToggle = useSelector(\r\n    (state) => state.dermarollingToggle.toggle\r\n  );\r\n  const nanoneedlingToggle = useSelector(\r\n    (state) => state.nanoneedlingToggle.toggle\r\n  );\r\n  const guashaToggle = useSelector((state) => state.guashaToggle.toggle);\r\n  const beardToggle = useSelector((state) => state.beardToggle.toggle);\r\n\r\n  // In Cart states\r\n  const microdermabrasionInCart = useSelector(\r\n    (state) => state.microdermabrasionInCart.in_cart\r\n  );\r\n  const microneedleInCart = useSelector(\r\n    (state) => state.microneedleInCart.in_cart\r\n  );\r\n  const chemicalPeelInCart = useSelector(\r\n    (state) => state.chemicalPeelInCart.in_cart\r\n  );\r\n  const saltCaveInCart = useSelector((state) => state.saltCaveInCart.in_cart);\r\n\r\n  const [cartClicked, changeCartClicked] = useState(false);\r\n  const [bookNowButtonHovered, changeBookNowButtonHovered] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleToggle = () => {\r\n    if (!microdermabrasionToggle) {\r\n      dispatch(ACTION_MICRODERMABRASION_TOGGLE());\r\n      if (extraExtractionsToggle) {\r\n        dispatch(ACTION_EXTRA_EXTRACTIONS_TOGGLE_RESET());\r\n      }\r\n      if (hydroJellyToggle) {\r\n        dispatch(ACTION_HYDRO_JELLY_TOGGLE_RESET());\r\n      }\r\n      if (ledTherapyToggle) {\r\n        dispatch(ACTION_LED_THERAPY_TOGGLE_RESET());\r\n      }\r\n      if (microcurrentToggle) {\r\n        dispatch(ACTION_MICROCURRENT_TOGGLE_RESET());\r\n      }\r\n      if (dermarollingToggle) {\r\n        dispatch(ACTION_DERMAROLLING_TOGGLE_RESET());\r\n      }\r\n      if (nanoneedlingToggle) {\r\n        dispatch(ACTION_NANONEEDLING_TOGGLE_RESET());\r\n      }\r\n      if (guashaToggle) {\r\n        dispatch(ACTION_GUASHA_TOGGLE_RESET());\r\n      }\r\n      if (beardToggle) {\r\n        dispatch(ACTION_BEARD_TOGGLE_RESET());\r\n      }\r\n    } else {\r\n      dispatch(ACTION_MICRODERMABRASION_TOGGLE_RESET());\r\n    }\r\n  };\r\n\r\n  const cardDescriptionHandler = () => {\r\n    if (microdermabrasionToggle) {\r\n      return (\r\n        <>\r\n          <div className=\"card_description_paragraph_toggle\">\r\n            <div className=\"card_description_icon_wrapper_container\">\r\n              <div className=\"card_description_paragraph_icon_wrapper\">\r\n                <FontAwesomeIcon\r\n                  className=\"card_description_icon\"\r\n                  icon={faClock}\r\n                />\r\n                <p className=\"card_description_paragraph_title\">Duration</p>\r\n              </div>\r\n              <div className=\"card_description_paragraph_value\">\r\n                <p>15 minutes</p>\r\n              </div>\r\n              <div className=\"card_description_paragraph_icon_wrapper\">\r\n                <FontAwesomeIcon\r\n                  className=\"card_description_icon\"\r\n                  icon={faTag}\r\n                />\r\n                <p className=\"card_description_paragraph_title\">Price</p>\r\n              </div>\r\n              <div className=\"card_description_paragraph_value\">\r\n                <p>$20</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <p className=\"card_description_paragraph\">\r\n          This method of exfoliation buffs away the skin's surface layer while\r\n          vacuuming up dead cells, oil, and other debris trapped in pores.\r\n        </p>\r\n      );\r\n    }\r\n  };\r\n\r\n  const PlusBounce = Keyframes.Spring({\r\n    plusBounce: [\r\n      {\r\n        marginTop: \"0px\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 100 },\r\n      },\r\n      {\r\n        marginTop: \"-9px\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 300 },\r\n      },\r\n      {\r\n        marginTop: \"0px\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 200 },\r\n      },\r\n      {\r\n        marginTop: \"-6\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 200 },\r\n      },\r\n      {\r\n        marginTop: \"0px\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 200 },\r\n      },\r\n      {\r\n        marginTop: \"-4px\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 200 },\r\n      },\r\n      {\r\n        marginTop: \"0px\",\r\n        color: \"rgb(155, 98, 107)\",\r\n        config: { duration: 200 },\r\n      },\r\n    ],\r\n  });\r\n\r\n  const checkMark = () => {\r\n    return (\r\n      <Spring from={{ x: 100 }} to={{ x: 0 }} config={{ duration: 2000 }}>\r\n        {(styles) => (\r\n          <svg\r\n            width={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 1800\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1400\r\n                  ? \"1rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"1rem\"\r\n                  : \"100%\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1400\r\n                ? \"1rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"1rem\"\r\n                : \"100%\"\r\n            }\r\n            height={\r\n              props.currentScreenSize === \"\"\r\n                ? props.initialScreenSize >= 2200\r\n                  ? \"2rem\"\r\n                  : props.initialScreenSize >= 1800\r\n                  ? \"1.3rem\"\r\n                  : props.initialScreenSize >= 1600\r\n                  ? \"1.3rem\"\r\n                  : props.initialScreenSize >= 1200\r\n                  ? \"1.1rem\"\r\n                  : props.initialScreenSize >= 360\r\n                  ? \"2rem\"\r\n                  : \"1rem\"\r\n                : props.currentScreenSize >= 2200\r\n                ? \"2rem\"\r\n                : props.currentScreenSize >= 1800\r\n                ? \"1.3rem\"\r\n                : props.currentScreenSize >= 1600\r\n                ? \"1.3rem\"\r\n                : props.currentScreenSize >= 1200\r\n                ? \"1.1rem\"\r\n                : props.currentScreenSize >= 360\r\n                ? \"2rem\"\r\n                : \"1rem\"\r\n            }\r\n            style={{\r\n              marginTop:\r\n                props.currentScreenSize === \"\"\r\n                  ? props.initialScreenSize >= 2200\r\n                    ? \"-0.2rem\"\r\n                    : props.initialScreenSize >= 1800\r\n                    ? \"0\"\r\n                    : props.initialScreenSize >= 1600\r\n                    ? \"-0.2rem\"\r\n                    : props.initialScreenSize >= 1200\r\n                    ? \"-0.1rem\"\r\n                    : props.initialScreenSize >= 360\r\n                    ? \"-0.5rem\"\r\n                    : \"0rem\"\r\n                  : props.currentScreenSize >= 2200\r\n                  ? \"-0.2rem\"\r\n                  : props.currentScreenSize >= 1800\r\n                  ? \"0\"\r\n                  : props.currentScreenSize >= 1600\r\n                  ? \"-0.2rem\"\r\n                  : props.currentScreenSize >= 1200\r\n                  ? \"-0.1rem\"\r\n                  : props.currentScreenSize >= 360\r\n                  ? \"-0.5rem\"\r\n                  : \"0rem\",\r\n              display: microdermabrasionInCart ? \"block\" : \"none\",\r\n            }}\r\n            viewBox=\"0 0 13.229 13.229\"\r\n          >\r\n            <path\r\n              d=\"M2.851 7.56l2.45 2.482 5.36-6.958\"\r\n              fill=\"none\"\r\n              stroke=\"#000\"\r\n              strokeDasharray=\"100\"\r\n              strokeDashoffset={\r\n                cartClicked ? (microdermabrasionInCart ? `${styles.x}` : 0) : 0\r\n              }\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"3\"\r\n            />\r\n          </svg>\r\n        )}\r\n      </Spring>\r\n    );\r\n  };\r\n\r\n  const chemPeelAddOnErrorToastId = \"chem_peel_add_on_error\";\r\n  const microneedlingAddOnErrorToastId = \"microneedling_add_on_error\";\r\n\r\n  const addToCart = () => {\r\n    if (chemicalPeelInCart || saltCaveInCart) {\r\n      if (!toast.isActive(chemPeelAddOnErrorToastId)) {\r\n        toast.dismiss();\r\n        toast(\r\n          <AddOnsChemPeelErrorNotification\r\n            currentScreenSize={props.currentScreenSize}\r\n            initialScreenSize={props.initialScreenSize}\r\n          />,\r\n          {\r\n            className: \"toast_error_container\",\r\n            toastId: chemPeelAddOnErrorToastId,\r\n          }\r\n        );\r\n      }\r\n    } else {\r\n      if (microneedleInCart) {\r\n        if (!toast.isActive(microneedlingAddOnErrorToastId)) {\r\n          toast.dismiss();\r\n          toast(\r\n            <AddOnsMicroneedlingErrorNotification\r\n              currentScreenSize={props.currentScreenSize}\r\n              initialScreenSize={props.initialScreenSize}\r\n            />,\r\n            {\r\n              className: \"toast_error_container\",\r\n              toastId: microneedlingAddOnErrorToastId,\r\n            }\r\n          );\r\n        }\r\n      } else {\r\n        if (microdermabrasionInCart) {\r\n          toast.dismiss();\r\n          dispatch(ACTION_MICRODERMABRASION_NOT_IN_CART());\r\n          dispatch(ACTION_DECREMENT_COUNTER());\r\n          dispatch(ACTION_NAVBAR_IS_VISIBLE());\r\n\r\n          props.resetAllCartStatesExceptTreatments();\r\n          toast(\r\n            <MicrodermabrasionRemovedNotification\r\n              currentScreenSize={props.currentScreenSize}\r\n              initialScreenSize={props.initialScreenSize}\r\n            />,\r\n            {\r\n              className: \"toast_removed_container\",\r\n            }\r\n          );\r\n        } else {\r\n          toast.dismiss();\r\n          dispatch(ACTION_MICRODERMABRASION_IN_CART());\r\n          dispatch(ACTION_INCREMENT_COUNTER());\r\n          dispatch(ACTION_NAVBAR_IS_VISIBLE());\r\n          changeCartClicked(true);\r\n          setTimeout(() => changeCartClicked(false), 200);\r\n\r\n          props.resetAllCartStatesExceptTreatments();\r\n          toast(\r\n            <MicrodermabrasionNotification\r\n              currentScreenSize={props.currentScreenSize}\r\n              initialScreenSize={props.initialScreenSize}\r\n            />\r\n          );\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const addOnBounce = () => {\r\n    return (\r\n      <PlusBounce state=\"plusBounce\">\r\n        {(styles) => (\r\n          <span\r\n            className=\"fa-layers fa-fw\"\r\n            style={\r\n              microdermabrasionToggle\r\n                ? microdermabrasionInCart\r\n                  ? { position: \"relative\" }\r\n                  : microneedleInCart | chemicalPeelInCart || saltCaveInCart\r\n                  ? { position: \"relative\" }\r\n                  : styles\r\n                : { position: \"relative\" }\r\n            }\r\n            onClick={() => addToCart()}\r\n          >\r\n            <FontAwesomeIcon\r\n              color={\r\n                microdermabrasionToggle\r\n                  ? microdermabrasionInCart\r\n                    ? \"rgb(119, 221, 119, 0.6)\"\r\n                    : microneedleInCart | chemicalPeelInCart || saltCaveInCart\r\n                    ? \"rgb(211, 211, 211)\"\r\n                    : \"rgba(0, 129, 177, 0.4)\"\r\n                  : microdermabrasionInCart\r\n                  ? \"rgba(119, 221, 119, 0.6)\"\r\n                  : microneedleInCart | chemicalPeelInCart || saltCaveInCart\r\n                  ? \"rgb(211, 211, 211)\"\r\n                  : \"rgba(0, 129, 177, 0.3)\"\r\n              }\r\n              transform={\r\n                !props.currentScreenSize\r\n                  ? props.initialScreenSize >= 360\r\n                    ? \"grow-20\"\r\n                    : \"grow-10\"\r\n                  : props.currentScreenSize >= 360\r\n                  ? \"grow-20\"\r\n                  : \"grow-10\"\r\n              }\r\n              icon={faSquare}\r\n            />\r\n            {checkMark()}\r\n            <FontAwesomeIcon\r\n              className=\"small_screen_card_description_plus\"\r\n              style={{ display: microdermabrasionInCart ? \"none\" : \"block\" }}\r\n              color={\r\n                microneedleInCart | chemicalPeelInCart || saltCaveInCart\r\n                  ? \"rgb(151, 151, 151)\"\r\n                  : \"rgb(0, 129, 177)\"\r\n              }\r\n              icon={faPlus}\r\n            />\r\n          </span>\r\n        )}\r\n      </PlusBounce>\r\n    );\r\n  };\r\n\r\n  const bigScreenBottomWrapperRender = () => {\r\n    return (\r\n      <div className=\"big_screen_entire_bottom_wrapper\">\r\n        <div className=\"big_screen_price_wrapper\">\r\n          <FontAwesomeIcon\r\n            className=\"big_screen_card_description_icon\"\r\n            icon={faTag}\r\n          />\r\n          <p className=\"big_screen_price\">$20</p>\r\n        </div>\r\n        <div className=\"big_screen_duration_wrapper\">\r\n          <FontAwesomeIcon\r\n            className=\"big_screen_card_description_icon\"\r\n            icon={faClock}\r\n          />\r\n          <p className=\"big_screen_duration\">15 minutes</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const smallScreenBottomWrapperRender = () => {\r\n    return (\r\n      <div\r\n        className=\"card_bottom_wrapper\"\r\n        style={{\r\n          color: microdermabrasionToggle\r\n            ? \"rgb(0, 104, 152)\"\r\n            : \"rgb(0, 129, 177)\",\r\n          transition: \"ease all 0.5s\",\r\n        }}\r\n      >\r\n        <p className=\"card_toggler\" onClick={handleToggle}>\r\n          {microdermabrasionToggle ? \"SEE DESCRIPTION\" : \"LEARN MORE\"}\r\n        </p>\r\n        <span className=\"card_bottom_spacer\" />\r\n        {addOnBounce()}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const dynamicScreenSizeBottomCardRender = () => {\r\n    if (props.currentScreenSize === \"\") {\r\n      if (props.initialScreenSize >= 1200) {\r\n        return bigScreenBottomWrapperRender();\r\n      } else {\r\n        return smallScreenBottomWrapperRender();\r\n      }\r\n    } else {\r\n      if (props.currentScreenSize >= 1200) {\r\n        return bigScreenBottomWrapperRender();\r\n      } else {\r\n        return smallScreenBottomWrapperRender();\r\n      }\r\n    }\r\n  };\r\n\r\n  const renderAddOnButton = () => {\r\n    if (microdermabrasionInCart) {\r\n      return (\r\n        <>\r\n          {checkMark()}\r\n          <p className=\"big_screen_in_cart\">IN CART</p>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <FontAwesomeIcon\r\n            className=\"big_screen_card_description_suitcase\"\r\n            icon={faPlus}\r\n          />\r\n          <p className=\"big_screen_card_add_on_button\">ADD TO FACIAL</p>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <InView threshold={0.2} triggerOnce={true}>\r\n      {({ inView, ref }) => (\r\n        <div\r\n          className=\"card_container\"\r\n          ref={ref}\r\n          style={{ display: props.microdermabrasionRendered }}\r\n        >\r\n          {inView ? (\r\n            <Spring\r\n              from={{ position: \"relative\", opacity: 0 }}\r\n              to={{ position: \"relative\", opacity: 1 }}\r\n              config={{ duration: 1000 }}\r\n            >\r\n              {(styleprops) => (\r\n                <section className=\"card\" style={styleprops}>\r\n                  <div\r\n                    className=\"card_image\"\r\n                    style={{\r\n                      backgroundColor: microdermabrasionToggle\r\n                        ? \"rgba(0, 129, 177, 0.2)\"\r\n                        : \"rgba(211, 211, 211, 0.4)\",\r\n                      boxShadow: microdermabrasionToggle\r\n                        ? \"0px -3px 3px 0px rgba(207, 207, 196, 0.7), -3px 0px 3px 0px rgba(207, 207, 196, 0.7), 0px 3px 3px 0px rgba(207, 207, 196, 0.7)\"\r\n                        : \"0px -1px 1px 0px rgba(207, 207, 196, 0.1)\",\r\n                      transition: \"ease all 0.5s\",\r\n                    }}\r\n                  >\r\n                    <Spring\r\n                      from={{ x: 200, fill: \"#fff\" }}\r\n                      to={{ x: 0, fill: \"#000\" }}\r\n                      config={{ duration: 2500 }}\r\n                    >\r\n                      {(styles) => (\r\n                        <>\r\n                          <div\r\n                            className=\"big_screen_book_now_wrapper\"\r\n                            onClick={() => addToCart()}\r\n                            style={{\r\n                              background: bookNowButtonHovered\r\n                                ? microdermabrasionInCart\r\n                                  ? \"rgba(69, 171, 69, 0.6)\"\r\n                                  : microneedleInCart | chemicalPeelInCart ||\r\n                                    saltCaveInCart\r\n                                  ? \"rgb(201, 201, 201)\"\r\n                                  : \"rgb(0, 129, 177)\"\r\n                                : microdermabrasionInCart\r\n                                ? \"rgba(119, 221, 119, 0.6)\"\r\n                                : microneedleInCart | chemicalPeelInCart ||\r\n                                  saltCaveInCart\r\n                                ? \"rgb(201, 201, 201)\"\r\n                                : \"transparent\",\r\n                              border: bookNowButtonHovered\r\n                                ? microdermabrasionInCart\r\n                                  ? \"1px solid rgb(69, 171, 69, 0.8)\"\r\n                                  : microneedleInCart | chemicalPeelInCart ||\r\n                                    saltCaveInCart\r\n                                  ? \"1px solid transparent\"\r\n                                  : \"1px solid rgb(0, 129, 177)\"\r\n                                : microdermabrasionInCart\r\n                                ? \"1px solid rgb(69, 171, 69, 0.8)\"\r\n                                : microneedleInCart | chemicalPeelInCart ||\r\n                                  saltCaveInCart\r\n                                ? \"1px solid transparent\"\r\n                                : \"1px solid rgb(0, 129, 177)\",\r\n                              color: bookNowButtonHovered\r\n                                ? microdermabrasionInCart\r\n                                  ? \"rgb(0, 0, 0)\"\r\n                                  : microneedleInCart | chemicalPeelInCart ||\r\n                                    saltCaveInCart\r\n                                  ? \"rgb(141, 141, 141)\"\r\n                                  : \"rgb(255, 255, 255)\"\r\n                                : microdermabrasionInCart\r\n                                ? \"rgb(0, 0, 0)\"\r\n                                : microneedleInCart | chemicalPeelInCart ||\r\n                                  saltCaveInCart\r\n                                ? \"rgb(141, 141, 141)\"\r\n                                : \"rgb(0, 129, 177)\",\r\n                              cursor:\r\n                                microneedleInCart | chemicalPeelInCart ||\r\n                                saltCaveInCart\r\n                                  ? \"auto\"\r\n                                  : \"pointer\",\r\n                              transition: \"all 0.5s ease\",\r\n                            }}\r\n                            onMouseEnter={() =>\r\n                              changeBookNowButtonHovered(true)\r\n                            }\r\n                            onMouseLeave={() =>\r\n                              changeBookNowButtonHovered(false)\r\n                            }\r\n                          >\r\n                            {renderAddOnButton()}\r\n                          </div>\r\n                          <svg\r\n                            width=\"100%\"\r\n                            height=\"15rem\"\r\n                            viewBox=\"0 0 56.356 56.356\"\r\n                            className=\"card_svg\"\r\n                          >\r\n                            <circle\r\n                              cx=\"28\"\r\n                              cy=\"28\"\r\n                              r={\r\n                                props.currentScreenSize === \"\"\r\n                                  ? props.initialScreenSize >= 1200\r\n                                    ? \"22.25\"\r\n                                    : \"26\"\r\n                                  : props.currentScreenSize >= 1200\r\n                                  ? \"22.25\"\r\n                                  : \"26\"\r\n                              }\r\n                              stroke={\r\n                                microdermabrasionToggle\r\n                                  ? \"rgb(25, 154, 202)\"\r\n                                  : \"rgba(191, 191, 191)\"\r\n                              }\r\n                              strokeWidth=\"0.5\"\r\n                              fill=\"white\"\r\n                            />\r\n                            <g transform=\"translate(12 11)\">\r\n                              <animated.path\r\n                                className=\"microdermabrasion_icon_path\"\r\n                                stroke=\"#000\"\r\n                                strokeDasharray=\"200\"\r\n                                strokeDashoffset={`${styles.x}`}\r\n                                fill={`${styles.fill}`}\r\n                                strokeWidth=\"0.3\"\r\n                                d=\"M38.916 55.08c-.695-.143-1.712-.623-1.783-.841-.18-.553.322-.852.923-.55 1.242.627 2.39.585 3.34-.12.596-.444 1-.45 1.154-.017.088.245.06.328-.21.601-.74.753-2.265 1.166-3.424.927zm-13.048-.27c-1.683-.223-2.894-.593-4.436-1.356-3.19-1.577-6.227-4.538-8.422-8.211-.221-.37-.6-.834-.842-1.03-1.818-1.477-4.085-3.941-5.34-5.806-2.612-3.879-3.93-8.018-4.054-12.736-.089-3.364.253-5.81 1.2-8.595C7.387 7.052 17.86 1.106 29.855 2.384c5.04.537 9.801 2.71 13.244 6.045 4.03 3.904 6.323 9.07 6.863 15.466.07.835.137 1.53.147 1.545.011.015.333-.036.716-.114 1.022-.21 1.613-.686 2.166-1.75.468-.9.572-1.793.572-4.901v-2.836l.266-.17c.247-.157.285-.157.54.006l.275.175-.044 3.228c-.036 2.613-.079 3.343-.223 3.832-.562 1.905-1.834 3.227-3.303 3.431-.987.138-1.02.168-1.02.937 0 1.595-.353 3.63-1.019 5.865l-.36 1.207.235.502c.217.464.237.692.275 3.028.061 3.739-.165 5.327-1.002 7.027-.405.823-1.387 1.933-1.99 2.25-.387.202-.417.266-.767 1.631-.592 2.315-3.027 4.117-5.56 4.117-1.54 0-2.79-.493-4.012-1.583l-.696-.621-.445.417c-1.635 1.532-4.168 2.968-6.073 3.443-.792.197-2.207.324-2.771.25zm2.873-1.723c1.695-.583 3.535-1.682 4.925-2.942l.782-.709-.243-.673c-.328-.908-.408-2.776-.16-3.736.68-2.64 2.782-4.45 5.464-4.708l.753-.072.16-.687c.266-1.142.577-2.988.753-4.465.204-1.723.36-4.067.277-4.159-.035-.038-.589-.19-1.232-.34-3.05-.71-6.554-2.19-8.66-3.655-2.086-1.451-4.133-3.795-4.95-5.666-.162-.372-.324-.677-.36-.677-.035 0-.183.22-.329.49-.431.796-1.414 2.023-2.305 2.878-2.42 2.322-5.947 4.29-10.872 6.067l-1.525.55.064 1.557c.144 3.51 1.337 9.268 2.31 11.15.129.248.352.684.497.97.768 1.51 2.498 3.699 4.1 5.186 2.156 2 4.485 3.326 6.718 3.825 1.013.227 2.905.136 3.832-.183zm3.137-6.699c-.162-.295-.133-1.739.049-2.42.304-1.136 1.255-2.614 1.887-2.932.277-.14.336-.139.567.009.38.243.318.506-.27 1.14-.901.968-1.28 1.949-1.28 3.315 0 .515-.049.888-.127.965-.202.197-.7.15-.826-.076zm-2.018-1.347c-.548-.534-.061-2.507.848-3.438.423-.433.634-.489.893-.236.241.235.206.539-.103.897-.486.562-.708 1.118-.782 1.957-.078.881-.07.862-.404.962-.163.049-.3.006-.452-.142zm-12.726-6.539c-1.75-.285-2.555-1.072-1.717-1.678l.286-.208.867.28c1.411.454 3.186.364 4.765-.242.305-.117.665-.213.8-.213.523 0 .797.752.42 1.157-.209.225-1.858.758-2.815.909a9.059 9.059 0 01-2.606-.005zm16.495.039c-1.125-.152-2.757-.693-3.018-1-.314-.368-.032-1.1.424-1.1.105 0 .635.147 1.18.327.825.274 1.197.336 2.245.376 1.155.044 1.328.025 2.153-.236.845-.268.91-.275 1.16-.116.32.205.436.586.27.888-.336.61-2.765 1.084-4.414.861zm8.137 12.899c.704-.329 1.88-1.187 1.771-1.293-.022-.022-.228.024-.456.102-2.108.72-4.405-.256-5.391-2.291-.3-.62-.337-.799-.339-1.628-.001-1.11.208-1.788.783-2.533.83-1.076 1.887-1.633 3.298-1.738l.786-.059-.467-.235c-2.15-1.083-5.109.038-6.25 2.368-.419.853-.559 1.492-.558 2.536.003 2.311 1.425 4.339 3.513 5.01.443.142.841.183 1.555.161.848-.026 1.054-.073 1.755-.4zm1.373-2.392c.798-.391 1.265-.922 1.6-1.817.192-.513.29-.631.695-.84 1.046-.54 1.922-1.848 2.4-3.582.2-.725.235-1.187.28-3.682.059-3.348-.007-3.858-.555-4.327-1.037-.886-2.525-.635-3.167.533-.223.406-.242.602-.3 3.023-.07 2.995-.13 3.25-.958 4.133l-.519.553-.931.046c-1.059.052-1.622.272-2.297.897-1.495 1.383-1.29 3.742.43 4.919.973.666 2.153.717 3.322.144zm-32.06-8.839c-.503-1.998-.97-4.822-1.184-7.152-.107-1.165-.229-2.001-.291-2.001-.06 0-.442.093-.851.207-.937.26-.966.26-1.281-.047-.593-.578-.24-1.006 1.121-1.356a71.459 71.459 0 001.182-.311c.12-.036.226-.316.35-.925.537-2.633 1.796-5.149 3.616-7.223 2.112-2.407 5.509-4.393 9.177-5.367.898-.238 1.02-.353.688-.646-.344-.303-.971-.49-2.832-.848-1.988-.383-2.697-.61-3.429-1.1-1.455-.975-1.95-3.028-1.126-4.66.407-.805 1.232-1.647 2.048-2.092.636-.346 2.784-2.345 2.595-2.415-.064-.024-.686.124-1.382.328-7.573 2.221-12.73 7.297-14.603 14.373-.87 3.284-.966 7.204-.261 10.632.848 4.125 3.12 8.345 6.09 11.313.384.384.705.699.714.699.008 0-.145-.634-.34-1.409zm31.96-1.987l.052-2.662.301-.596c.191-.38.508-.77.868-1.074l.568-.477.035-1.172c.035-1.14.044-1.181.355-1.499.175-.18.45-.393.611-.475.215-.11.292-.227.292-.446 0-.526.416-1.627.858-2.272.264-.384.677-.801 1.064-1.072l.633-.443-.06-.984c-.282-4.66-1.378-8.468-3.362-11.69-3.425-5.56-9.033-8.936-16.03-9.65-1.173-.12-5.051-.073-5.8.069-.23.044-.423.208-.691.59-.66.939-2.68 2.89-3.44 3.323-1.884 1.074-2.55 2.625-1.706 3.974.24.384.455.565.976.822.659.326 1.065.43 3.372.861.643.12 1.448.34 1.788.49.672.293 1.296.904 1.402 1.374.062.276.097.29.882.355 5.278.438 9.289 2.001 12.232 4.767 1.35 1.268 2.23 2.437 3.042 4.042.799 1.578 1.151 2.578 1.462 4.142.124.627.237 1.154.25 1.172.013.018.375.082.805.143.9.126 1.153.292 1.153.756 0 .567-.284.714-1.22.632-.788-.07-.8-.067-.8.172 0 1.759-.865 8.09-1.234 9.026-.071.181 1.023.699 1.181.558.063-.056.128-1.183.16-2.756zm4.04-5.658c0-.423-.046-.885-.101-1.027-.133-.34-.48-.438-.809-.228-.242.154-.26.227-.26 1.038v.872l.451.04c.249.021.512.047.585.057.096.013.133-.195.133-.752zm1.319-2.903c.086-.571.179-1.336.206-1.698l.05-.66-.407.388c-.482.458-.973 1.465-1.04 2.129-.04.419-.015.492.23.648.15.097.355.327.454.511l.18.336.085-.308c.047-.17.156-.775.242-1.346zm-6.954-.37c0-.325-.375-1.788-.657-2.567-1.294-3.572-3.883-6.35-7.437-7.982-1.686-.773-4.047-1.422-5.897-1.62l-.65-.069.15.71c.615 2.945 2.016 5.266 4.322 7.169 2.137 1.761 4.749 3.053 8.095 4.005 1.644.467 2.073.54 2.073.354zm-26.737-1.51c6.58-2.724 10.755-6.644 10.83-10.172l.014-.659-.532.062c-1.977.227-5.226 1.473-7.207 2.764-1.698 1.107-3.238 2.62-4.296 4.223-.787 1.192-1.716 3.423-1.905 4.577l-.068.414.89-.319c.49-.175 1.514-.575 2.274-.89z\"\r\n                              />\r\n                            </g>\r\n                          </svg>\r\n                        </>\r\n                      )}\r\n                    </Spring>\r\n\r\n                    <div\r\n                      className=\"card_border_right\"\r\n                      style={{\r\n                        borderRight: microdermabrasionToggle\r\n                          ? \"1px solid rgba(25, 154, 202, 0.4)\"\r\n                          : \"1px solid rgb(211, 211, 211)\",\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div\r\n                    className=\"card_description\"\r\n                    style={{\r\n                      backgroundColor: microdermabrasionToggle\r\n                        ? \"rgba(222, 222, 222, 0.4)\"\r\n                        : \"rgba(235, 235, 235, 0.1)\",\r\n                      boxShadow: microdermabrasionToggle\r\n                        ? \"0px -3px 3px 0px rgba(207, 207, 196, 0.7), 3px 0px 3px 0px rgba(207, 207, 196, 0.7), 0px 4px 3px 0px rgba(207, 207, 196, 0.7)\"\r\n                        : \"0px -1px 1px 0px rgba(207, 207, 196, 0.1)\",\r\n                      transition: \"ease all 0.5s\",\r\n                    }}\r\n                  >\r\n                    <div className=\"card_description_inner_wrapper\">\r\n                      <h2 style={{ fontWeight: 400 }}>MICRO-DERMABRASION</h2>\r\n                      {cardDescriptionHandler()}\r\n                      {dynamicScreenSizeBottomCardRender()}\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n              )}\r\n            </Spring>\r\n          ) : null}\r\n        </div>\r\n      )}\r\n    </InView>\r\n  );\r\n};\r\n\r\nexport default Microdermabrasion;\r\n"]},"metadata":{},"sourceType":"module"}